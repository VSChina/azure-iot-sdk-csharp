<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Microsoft.Azure.Amqp.2.0.0.0.Fakes</name>
    </assembly>
    <members>
        <member name="T:Microsoft.Azure.Amqp.Encoding.Fakes.ShimAmqpMap">
            <summary>Shim type of Microsoft.Azure.Amqp.Encoding.AmqpMap</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Encoding.Fakes.ShimAmqpMap.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Encoding.Fakes.ShimAmqpMap.#ctor(Microsoft.Azure.Amqp.Encoding.AmqpMap)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Encoding.Fakes.ShimAmqpMap.AddMapKeyObject">
            <summary>Sets the shim of AmqpMap.Add(MapKey key, Object value)</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Encoding.Fakes.ShimAmqpMap.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Encoding.Fakes.ShimAmqpMap.AllInstances.AddMapKeyObject">
            <summary>Sets the shim of AmqpMap.Add(MapKey key, Object value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Encoding.Fakes.ShimAmqpMap.AllInstances.CountGet">
            <summary>Sets the shim of AmqpMap.get_Count()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Encoding.Fakes.ShimAmqpMap.AllInstances.ItemGetMapKey">
            <summary>Sets the shim of AmqpMap.get_Item(MapKey key)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Encoding.Fakes.ShimAmqpMap.AllInstances.ItemSetMapKeyObject">
            <summary>Sets the shim of AmqpMap.set_Item(MapKey key, Object value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Encoding.Fakes.ShimAmqpMap.AllInstances.SystemCollectionsGenericIEnumerableSystemCollectionsGenericKeyValuePairMicrosoftAzureAmqpEncodingMapKeySystemObjectGetEnumerator">
            <summary>Sets the shim of AmqpMap.System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;Microsoft.Azure.Amqp.Encoding.MapKey,System.Object&gt;&gt;.GetEnumerator()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Encoding.Fakes.ShimAmqpMap.AllInstances.SystemCollectionsIEnumerableGetEnumerator">
            <summary>Sets the shim of AmqpMap.System.Collections.IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Encoding.Fakes.ShimAmqpMap.AllInstances.ToString01">
            <summary>Sets the shim of AmqpMap.ToString()</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Encoding.Fakes.ShimAmqpMap.AllInstances.TryGetValueOf1MapKeyM0Out``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.OutFunc{Microsoft.Azure.Amqp.Encoding.AmqpMap,Microsoft.Azure.Amqp.Encoding.MapKey,``0,System.Boolean})">
            <summary>Sets the shim of AmqpMap.TryGetValue(MapKey key, !!0&amp; value)</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Encoding.Fakes.ShimAmqpMap.AllInstances.TryRemoveValueOf1MapKeyM0Out``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.OutFunc{Microsoft.Azure.Amqp.Encoding.AmqpMap,Microsoft.Azure.Amqp.Encoding.MapKey,``0,System.Boolean})">
            <summary>Sets the shim of AmqpMap.TryRemoveValue(MapKey key, !!0&amp; value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Encoding.Fakes.ShimAmqpMap.AllInstances.ValueSizeGet">
            <summary>Sets the shim of AmqpMap.get_ValueSize()</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Encoding.Fakes.ShimAmqpMap.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Encoding.Fakes.ShimAmqpMap.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Encoding.Fakes.ShimAmqpMap.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Encoding.Fakes.ShimAmqpMap.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Encoding.Fakes.ShimAmqpMap.Bind(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{Microsoft.Azure.Amqp.Encoding.MapKey,System.Object}})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Encoding.Fakes.ShimAmqpMap.Constructor">
            <summary>Sets the shim of AmqpMap.AmqpMap()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Encoding.Fakes.ShimAmqpMap.ConstructorIDictionary">
            <summary>Sets the shim of AmqpMap.AmqpMap(IDictionary value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Encoding.Fakes.ShimAmqpMap.ConstructorIDictionaryOfMapKeyObject">
            <summary>Sets the shim of AmqpMap.AmqpMap(IDictionary`2&lt;MapKey,Object&gt; value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Encoding.Fakes.ShimAmqpMap.CountGet">
            <summary>Sets the shim of AmqpMap.get_Count()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Encoding.Fakes.ShimAmqpMap.ItemGetMapKey">
            <summary>Sets the shim of AmqpMap.get_Item(MapKey key)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Encoding.Fakes.ShimAmqpMap.ItemSetMapKeyObject">
            <summary>Sets the shim of AmqpMap.set_Item(MapKey key, Object value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Encoding.Fakes.ShimAmqpMap.SystemCollectionsGenericIEnumerableSystemCollectionsGenericKeyValuePairMicrosoftAzureAmqpEncodingMapKeySystemObjectGetEnumerator">
            <summary>Sets the shim of AmqpMap.System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;Microsoft.Azure.Amqp.Encoding.MapKey,System.Object&gt;&gt;.GetEnumerator()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Encoding.Fakes.ShimAmqpMap.SystemCollectionsIEnumerableGetEnumerator">
            <summary>Sets the shim of AmqpMap.System.Collections.IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Encoding.Fakes.ShimAmqpMap.ToString">
            <summary>Sets the shim of AmqpMap.ToString()</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Encoding.Fakes.ShimAmqpMap.TryGetValueOf1MapKeyM0Out``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.OutFunc{Microsoft.Azure.Amqp.Encoding.MapKey,``0,System.Boolean})">
            <summary>Sets the shim of AmqpMap.TryGetValue(MapKey key, !!0&amp; value)</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Encoding.Fakes.ShimAmqpMap.TryRemoveValueOf1MapKeyM0Out``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.OutFunc{Microsoft.Azure.Amqp.Encoding.MapKey,``0,System.Boolean})">
            <summary>Sets the shim of AmqpMap.TryRemoveValue(MapKey key, !!0&amp; value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Encoding.Fakes.ShimAmqpMap.ValueSizeGet">
            <summary>Sets the shim of AmqpMap.get_ValueSize()</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Encoding.Fakes.ShimAmqpSymbol">
            <summary>Shim type of Microsoft.Azure.Amqp.Encoding.AmqpSymbol</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Encoding.Fakes.ShimAmqpSymbol.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Encoding.Fakes.ShimAmqpSymbol.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Encoding.Fakes.ShimAmqpSymbol.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Encoding.Fakes.ShimAmqpSymbol.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Encoding.Fakes.ShimAmqpSymbol.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Encoding.Fakes.ShimAmqpSymbol.ImplicitOpStringAmqpSymbol">
            <summary>Sets the shim of AmqpSymbol.op_Implicit(String value)</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Encoding.Fakes.ShimDescribedType">
            <summary>Shim type of Microsoft.Azure.Amqp.Encoding.DescribedType</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Encoding.Fakes.ShimDescribedType.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Encoding.Fakes.ShimDescribedType.#ctor(Microsoft.Azure.Amqp.Encoding.DescribedType)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Encoding.Fakes.ShimDescribedType.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Encoding.Fakes.ShimDescribedType.AllInstances.DescriptorGet">
            <summary>Sets the shim of DescribedType.get_Descriptor()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Encoding.Fakes.ShimDescribedType.AllInstances.DescriptorSetObject">
            <summary>Sets the shim of DescribedType.set_Descriptor(Object value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Encoding.Fakes.ShimDescribedType.AllInstances.ToString01">
            <summary>Sets the shim of DescribedType.ToString()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Encoding.Fakes.ShimDescribedType.AllInstances.ValueGet">
            <summary>Sets the shim of DescribedType.get_Value()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Encoding.Fakes.ShimDescribedType.AllInstances.ValueSetObject">
            <summary>Sets the shim of DescribedType.set_Value(Object value)</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Encoding.Fakes.ShimDescribedType.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Encoding.Fakes.ShimDescribedType.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Encoding.Fakes.ShimDescribedType.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Encoding.Fakes.ShimDescribedType.ConstructorObjectObject">
            <summary>Sets the shim of DescribedType.DescribedType(Object descriptor, Object value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Encoding.Fakes.ShimDescribedType.DescriptorGet">
            <summary>Sets the shim of DescribedType.get_Descriptor()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Encoding.Fakes.ShimDescribedType.DescriptorSetObject">
            <summary>Sets the shim of DescribedType.set_Descriptor(Object value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Encoding.Fakes.ShimDescribedType.ToString">
            <summary>Sets the shim of DescribedType.ToString()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Encoding.Fakes.ShimDescribedType.ValueGet">
            <summary>Sets the shim of DescribedType.get_Value()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Encoding.Fakes.ShimDescribedType.ValueSetObject">
            <summary>Sets the shim of DescribedType.set_Value(Object value)</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Encoding.Fakes.ShimEncodingBase">
            <summary>Shim type of Microsoft.Azure.Amqp.Encoding.EncodingBase</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Encoding.Fakes.ShimEncodingBase.#ctor(Microsoft.Azure.Amqp.Encoding.EncodingBase)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Encoding.Fakes.ShimEncodingBase.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Encoding.Fakes.ShimEncodingBase.AllInstances.FormatCodeGet">
            <summary>Sets the shim of EncodingBase.get_FormatCode()</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Encoding.Fakes.ShimEncodingBase.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Encoding.Fakes.ShimEncodingBase.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Encoding.Fakes.ShimEncodingBase.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Encoding.Fakes.ShimEncodingBase.ConstructorFormatCode">
            <summary>Sets the shim of EncodingBase.EncodingBase(FormatCode formatCode)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Encoding.Fakes.ShimEncodingBase.FormatCodeGet">
            <summary>Sets the shim of EncodingBase.get_FormatCode()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Encoding.Fakes.ShimEncodingBase.ThrowInvalidFormatCodeExceptionFormatCodeInt32">
            <summary>Sets the shim of EncodingBase.ThrowInvalidFormatCodeException(FormatCode formatCode, Int32 offset)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Encoding.Fakes.ShimEncodingBase.VerifyFormatCodeFormatCodeInt32FormatCode">
            <summary>Sets the shim of EncodingBase.VerifyFormatCode(FormatCode formatCode, Int32 offset, FormatCode expected)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Encoding.Fakes.ShimEncodingBase.VerifyFormatCodeFormatCodeInt32FormatCodeFormatCode">
            <summary>Sets the shim of EncodingBase.VerifyFormatCode(FormatCode formatCode, Int32 offset, FormatCode expected1, FormatCode expected2)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Encoding.Fakes.ShimEncodingBase.VerifyFormatCodeFormatCodeInt32FormatCodeFormatCodeFormatCode">
            <summary>Sets the shim of EncodingBase.VerifyFormatCode(FormatCode formatCode, Int32 offset, FormatCode expected1, FormatCode expected2, FormatCode expected3)</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Encoding.Fakes.ShimFormatCode">
            <summary>Shim type of Microsoft.Azure.Amqp.Encoding.FormatCode</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Encoding.Fakes.ShimFormatCode.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Encoding.Fakes.ShimFormatCode.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Encoding.Fakes.ShimFormatCode.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Encoding.Fakes.ShimFormatCode.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Encoding.Fakes.ShimFormatCode.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Encoding.Fakes.ShimFormatCode.EqualityOpFormatCodeFormatCode">
            <summary>Sets the shim of FormatCode.op_Equality(FormatCode fc1, FormatCode fc2)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Encoding.Fakes.ShimFormatCode.HasExtTypeByte">
            <summary>Sets the shim of FormatCode.HasExtType(Byte type)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Encoding.Fakes.ShimFormatCode.ImplicitOpByteFormatCode">
            <summary>Sets the shim of FormatCode.op_Implicit(Byte value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Encoding.Fakes.ShimFormatCode.ImplicitOpFormatCodeByte">
            <summary>Sets the shim of FormatCode.op_Implicit(FormatCode value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Encoding.Fakes.ShimFormatCode.InequalityOpFormatCodeFormatCode">
            <summary>Sets the shim of FormatCode.op_Inequality(FormatCode fc1, FormatCode fc2)</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Encoding.Fakes.ShimMapKey">
            <summary>Shim type of Microsoft.Azure.Amqp.Encoding.MapKey</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Encoding.Fakes.ShimMapKey.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Encoding.Fakes.ShimMapKey.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Encoding.Fakes.ShimMapKey.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Encoding.Fakes.ShimMapKey.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Encoding.Fakes.ShimMapKey.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Encoding.Fakes.StubDescribedType">
            <summary>Stub type of Microsoft.Azure.Amqp.Encoding.DescribedType</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Encoding.Fakes.StubDescribedType.#ctor(System.Object,System.Object)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Encoding.Fakes.StubDescribedType.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Encoding.Fakes.StubDescribedType.InitializeStub">
            <summary>Initializes a new instance of type StubDescribedType</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Encoding.Fakes.StubDescribedType.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Encoding.Fakes.StubDescribedType.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Encoding.Fakes.StubDescribedType.ToString">
            <summary>Sets the stub of DescribedType.ToString()</summary>
        </member>
        <member name="F:Microsoft.Azure.Amqp.Encoding.Fakes.StubDescribedType.ToString01">
            <summary>Sets the stub of DescribedType.ToString()</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Encoding.Fakes.StubEncodingBase">
            <summary>Stub type of Microsoft.Azure.Amqp.Encoding.EncodingBase</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Encoding.Fakes.StubEncodingBase.#ctor(Microsoft.Azure.Amqp.Encoding.FormatCode)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Encoding.Fakes.StubEncodingBase.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Encoding.Fakes.StubEncodingBase.DecodeObject(Microsoft.Azure.Amqp.ByteBuffer,Microsoft.Azure.Amqp.Encoding.FormatCode)">
            <summary>Sets the stub of EncodingBase.DecodeObject(ByteBuffer buffer, FormatCode formatCode)</summary>
        </member>
        <member name="F:Microsoft.Azure.Amqp.Encoding.Fakes.StubEncodingBase.DecodeObjectByteBufferFormatCode">
            <summary>Sets the stub of EncodingBase.DecodeObject(ByteBuffer buffer, FormatCode formatCode)</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Encoding.Fakes.StubEncodingBase.EncodeObject(System.Object,System.Boolean,Microsoft.Azure.Amqp.ByteBuffer)">
            <summary>Sets the stub of EncodingBase.EncodeObject(Object value, Boolean arrayEncoding, ByteBuffer buffer)</summary>
        </member>
        <member name="F:Microsoft.Azure.Amqp.Encoding.Fakes.StubEncodingBase.EncodeObjectObjectBooleanByteBuffer">
            <summary>Sets the stub of EncodingBase.EncodeObject(Object value, Boolean arrayEncoding, ByteBuffer buffer)</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Encoding.Fakes.StubEncodingBase.GetObjectEncodeSize(System.Object,System.Boolean)">
            <summary>Sets the stub of EncodingBase.GetObjectEncodeSize(Object value, Boolean arrayEncoding)</summary>
        </member>
        <member name="F:Microsoft.Azure.Amqp.Encoding.Fakes.StubEncodingBase.GetObjectEncodeSizeObjectBoolean">
            <summary>Sets the stub of EncodingBase.GetObjectEncodeSize(Object value, Boolean arrayEncoding)</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Encoding.Fakes.StubEncodingBase.InitializeStub">
            <summary>Initializes a new instance of type StubEncodingBase</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Encoding.Fakes.StubEncodingBase.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Encoding.Fakes.StubEncodingBase.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Encoding.Fakes.StubIAmqpSerializable">
            <summary>Stub type of Microsoft.Azure.Amqp.Encoding.IAmqpSerializable</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Encoding.Fakes.StubIAmqpSerializable.#ctor">
            <summary>Initializes a new instance of type StubIAmqpSerializable</summary>
        </member>
        <member name="F:Microsoft.Azure.Amqp.Encoding.Fakes.StubIAmqpSerializable.DecodeByteBuffer">
            <summary>Sets the stub of IAmqpSerializable.Decode(ByteBuffer buffer)</summary>
        </member>
        <member name="F:Microsoft.Azure.Amqp.Encoding.Fakes.StubIAmqpSerializable.EncodeByteBuffer">
            <summary>Sets the stub of IAmqpSerializable.Encode(ByteBuffer buffer)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Encoding.Fakes.StubIAmqpSerializable.Microsoft#Azure#Amqp#Encoding#IAmqpSerializable#EncodeSize">
            <summary>Sets the stub of IAmqpSerializable.get_EncodeSize()</summary>
        </member>
        <member name="F:Microsoft.Azure.Amqp.Encoding.Fakes.StubIAmqpSerializable.EncodeSizeGet">
            <summary>Sets the stub of IAmqpSerializable.get_EncodeSize()</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Encoding.Fakes.StubIAmqpSerializable.Microsoft#Azure#Amqp#Encoding#IAmqpSerializable#Decode(Microsoft.Azure.Amqp.ByteBuffer)">
            <summary>Sets the stub of IAmqpSerializable.Decode(ByteBuffer buffer)</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Encoding.Fakes.StubIAmqpSerializable.Microsoft#Azure#Amqp#Encoding#IAmqpSerializable#Encode(Microsoft.Azure.Amqp.ByteBuffer)">
            <summary>Sets the stub of IAmqpSerializable.Encode(ByteBuffer buffer)</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Fakes.ShimAmqpCbsLink">
            <summary>Shim type of Microsoft.Azure.Amqp.AmqpCbsLink</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.ShimAmqpCbsLink.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.ShimAmqpCbsLink.#ctor(Microsoft.Azure.Amqp.AmqpCbsLink)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Fakes.ShimAmqpCbsLink.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpCbsLink.AllInstances.BeginCreateCbsLinkTimeSpanAsyncCallbackObject">
            <summary>Sets the shim of AmqpCbsLink.BeginCreateCbsLink(TimeSpan timeout, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpCbsLink.AllInstances.BeginSendTokenICbsTokenProviderUriStringStringStringArrayTimeSpanAsyncCallbackObject">
            <summary>Sets the shim of AmqpCbsLink.BeginSendToken(ICbsTokenProvider tokenProvider, Uri namespaceAddress, String audience, String resource, String[] requiredClaims, TimeSpan timeout, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpCbsLink.AllInstances.CloseLinkRequestResponseAmqpLink">
            <summary>Sets the shim of AmqpCbsLink.CloseLink(RequestResponseAmqpLink link)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpCbsLink.AllInstances.EndCreateCbsLinkIAsyncResult">
            <summary>Sets the shim of AmqpCbsLink.EndCreateCbsLink(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpCbsLink.AllInstances.EndSendTokenIAsyncResult">
            <summary>Sets the shim of AmqpCbsLink.EndSendToken(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpCbsLink.AllInstances.FaultTolerantLinkGet">
            <summary>Sets the shim of AmqpCbsLink.get_FaultTolerantLink()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpCbsLink.AllInstances.FaultTolerantLinkSetFaultTolerantAmqpObjectOfRequestResponseAmqpLink">
            <summary>Sets the shim of AmqpCbsLink.set_FaultTolerantLink(FaultTolerantAmqpObject`1&lt;RequestResponseAmqpLink&gt; value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpCbsLink.AllInstances.IsClosedOrClosingMicrosoftAzureAmqpICloseableget">
            <summary>Sets the shim of AmqpCbsLink.Microsoft.Azure.Amqp.ICloseable.get_IsClosedOrClosing()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpCbsLink.AllInstances.SendTokenAsyncICbsTokenProviderUriStringStringStringArrayTimeSpan">
            <summary>Sets the shim of AmqpCbsLink.SendTokenAsync(ICbsTokenProvider tokenProvider, Uri namespaceAddress, String audience, String resource, String[] requiredClaims, TimeSpan timeout)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpCbsLink.AllInstances._SendTokenAsyncb__8_1IAsyncResult">
            <summary>Sets the shim of AmqpCbsLink.&lt;SendTokenAsync&gt;b__8_1(IAsyncResult a)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpCbsLink.AllInstances._ctorb__1_0TimeSpan">
            <summary>Sets the shim of AmqpCbsLink.&lt;.ctor&gt;b__1_0(TimeSpan t)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpCbsLink.BeginCreateCbsLinkTimeSpanAsyncCallbackObject">
            <summary>Sets the shim of AmqpCbsLink.BeginCreateCbsLink(TimeSpan timeout, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpCbsLink.BeginSendTokenICbsTokenProviderUriStringStringStringArrayTimeSpanAsyncCallbackObject">
            <summary>Sets the shim of AmqpCbsLink.BeginSendToken(ICbsTokenProvider tokenProvider, Uri namespaceAddress, String audience, String resource, String[] requiredClaims, TimeSpan timeout, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.ShimAmqpCbsLink.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.ShimAmqpCbsLink.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpCbsLink.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpCbsLink.CloseLinkRequestResponseAmqpLink">
            <summary>Sets the shim of AmqpCbsLink.CloseLink(RequestResponseAmqpLink link)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpCbsLink.ConstructorAmqpConnection">
            <summary>Sets the shim of AmqpCbsLink.AmqpCbsLink(AmqpConnection connection)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpCbsLink.EndCreateCbsLinkIAsyncResult">
            <summary>Sets the shim of AmqpCbsLink.EndCreateCbsLink(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpCbsLink.EndSendTokenIAsyncResult">
            <summary>Sets the shim of AmqpCbsLink.EndSendToken(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpCbsLink.FaultTolerantLinkGet">
            <summary>Sets the shim of AmqpCbsLink.get_FaultTolerantLink()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpCbsLink.FaultTolerantLinkSetFaultTolerantAmqpObjectOfRequestResponseAmqpLink">
            <summary>Sets the shim of AmqpCbsLink.set_FaultTolerantLink(FaultTolerantAmqpObject`1&lt;RequestResponseAmqpLink&gt; value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpCbsLink.IsClosedOrClosingMicrosoftAzureAmqpICloseableget">
            <summary>Sets the shim of AmqpCbsLink.Microsoft.Azure.Amqp.ICloseable.get_IsClosedOrClosing()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpCbsLink.SendTokenAsyncICbsTokenProviderUriStringStringStringArrayTimeSpan">
            <summary>Sets the shim of AmqpCbsLink.SendTokenAsync(ICbsTokenProvider tokenProvider, Uri namespaceAddress, String audience, String resource, String[] requiredClaims, TimeSpan timeout)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpCbsLink._SendTokenAsyncb__8_1IAsyncResult">
            <summary>Sets the shim of AmqpCbsLink.&lt;SendTokenAsync&gt;b__8_1(IAsyncResult a)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpCbsLink._ctorb__1_0TimeSpan">
            <summary>Sets the shim of AmqpCbsLink.&lt;.ctor&gt;b__1_0(TimeSpan t)</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Fakes.ShimAmqpCodec">
            <summary>Shim type of Microsoft.Azure.Amqp.AmqpCodec</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.ShimAmqpCodec.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.ShimAmqpCodec.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.ShimAmqpCodec.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpCodec.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpCodec.CreateAmqpDescribedByteBuffer">
            <summary>Sets the shim of AmqpCodec.CreateAmqpDescribed(ByteBuffer buffer)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpCodec.CreateAmqpDescribedByteBufferDictionaryOfStringFuncOfAmqpDescribedDictionaryOfUInt64FuncOfAmqpDescribed">
            <summary>Sets the shim of AmqpCodec.CreateAmqpDescribed(ByteBuffer buffer, Dictionary`2&lt;String,Func`1&lt;AmqpDescribed&gt;&gt; byName, Dictionary`2&lt;UInt64,Func`1&lt;AmqpDescribed&gt;&gt; byCode)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpCodec.DecodeAmqpDescribedByteBuffer">
            <summary>Sets the shim of AmqpCodec.DecodeAmqpDescribed(ByteBuffer buffer)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpCodec.DecodeAmqpDescribedByteBufferDictionaryOfStringFuncOfAmqpDescribedDictionaryOfUInt64FuncOfAmqpDescribed">
            <summary>Sets the shim of AmqpCodec.DecodeAmqpDescribed(ByteBuffer buffer, Dictionary`2&lt;String,Func`1&lt;AmqpDescribed&gt;&gt; byName, Dictionary`2&lt;UInt64,Func`1&lt;AmqpDescribed&gt;&gt; byCode)</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.ShimAmqpCodec.DecodeArrayOf1ByteBuffer``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Microsoft.Azure.Amqp.ByteBuffer,``0[]})">
            <summary>Sets the shim of AmqpCodec.DecodeArray(ByteBuffer buffer)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpCodec.DecodeBinaryByteBuffer">
            <summary>Sets the shim of AmqpCodec.DecodeBinary(ByteBuffer buffer)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpCodec.DecodeBooleanByteBuffer">
            <summary>Sets the shim of AmqpCodec.DecodeBoolean(ByteBuffer buffer)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpCodec.DecodeByteByteBuffer">
            <summary>Sets the shim of AmqpCodec.DecodeByte(ByteBuffer buffer)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpCodec.DecodeCharByteBuffer">
            <summary>Sets the shim of AmqpCodec.DecodeChar(ByteBuffer buffer)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpCodec.DecodeDoubleByteBuffer">
            <summary>Sets the shim of AmqpCodec.DecodeDouble(ByteBuffer buffer)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpCodec.DecodeFloatByteBuffer">
            <summary>Sets the shim of AmqpCodec.DecodeFloat(ByteBuffer buffer)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpCodec.DecodeIntByteBuffer">
            <summary>Sets the shim of AmqpCodec.DecodeInt(ByteBuffer buffer)</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.ShimAmqpCodec.DecodeKnownTypeOf1ByteBuffer``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Microsoft.Azure.Amqp.ByteBuffer,``0})">
            <summary>Sets the shim of AmqpCodec.DecodeKnownType(ByteBuffer buffer)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpCodec.DecodeListByteBuffer">
            <summary>Sets the shim of AmqpCodec.DecodeList(ByteBuffer buffer)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpCodec.DecodeLongByteBuffer">
            <summary>Sets the shim of AmqpCodec.DecodeLong(ByteBuffer buffer)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpCodec.DecodeMapByteBuffer">
            <summary>Sets the shim of AmqpCodec.DecodeMap(ByteBuffer buffer)</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.ShimAmqpCodec.DecodeMapOf1ByteBuffer``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Microsoft.Azure.Amqp.ByteBuffer,``0})">
            <summary>Sets the shim of AmqpCodec.DecodeMap(ByteBuffer buffer)</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.ShimAmqpCodec.DecodeMultipleOf1ByteBuffer``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Microsoft.Azure.Amqp.ByteBuffer,Microsoft.Azure.Amqp.Framing.Multiple{``0}})">
            <summary>Sets the shim of AmqpCodec.DecodeMultiple(ByteBuffer buffer)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpCodec.DecodeObjectByteBuffer">
            <summary>Sets the shim of AmqpCodec.DecodeObject(ByteBuffer buffer)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpCodec.DecodeShortByteBuffer">
            <summary>Sets the shim of AmqpCodec.DecodeShort(ByteBuffer buffer)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpCodec.DecodeStringByteBuffer">
            <summary>Sets the shim of AmqpCodec.DecodeString(ByteBuffer buffer)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpCodec.DecodeSymbolByteBuffer">
            <summary>Sets the shim of AmqpCodec.DecodeSymbol(ByteBuffer buffer)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpCodec.DecodeTimeStampByteBuffer">
            <summary>Sets the shim of AmqpCodec.DecodeTimeStamp(ByteBuffer buffer)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpCodec.DecodeUByteByteBuffer">
            <summary>Sets the shim of AmqpCodec.DecodeUByte(ByteBuffer buffer)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpCodec.DecodeUIntByteBuffer">
            <summary>Sets the shim of AmqpCodec.DecodeUInt(ByteBuffer buffer)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpCodec.DecodeULongByteBuffer">
            <summary>Sets the shim of AmqpCodec.DecodeULong(ByteBuffer buffer)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpCodec.DecodeUShortByteBuffer">
            <summary>Sets the shim of AmqpCodec.DecodeUShort(ByteBuffer buffer)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpCodec.DecodeUuidByteBuffer">
            <summary>Sets the shim of AmqpCodec.DecodeUuid(ByteBuffer buffer)</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.ShimAmqpCodec.EncodeArrayOf1M0ArrayByteBuffer``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{``0[],Microsoft.Azure.Amqp.ByteBuffer})">
            <summary>Sets the shim of AmqpCodec.EncodeArray(!!0[] data, ByteBuffer buffer)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpCodec.EncodeBinaryArraySegmentOfByteByteBuffer">
            <summary>Sets the shim of AmqpCodec.EncodeBinary(ArraySegment`1&lt;Byte&gt; data, ByteBuffer buffer)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpCodec.EncodeBooleanNullableOfBooleanByteBuffer">
            <summary>Sets the shim of AmqpCodec.EncodeBoolean(Nullable`1&lt;Boolean&gt; data, ByteBuffer buffer)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpCodec.EncodeByteNullableOfSByteByteBuffer">
            <summary>Sets the shim of AmqpCodec.EncodeByte(Nullable`1&lt;SByte&gt; data, ByteBuffer buffer)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpCodec.EncodeCharNullableOfCharByteBuffer">
            <summary>Sets the shim of AmqpCodec.EncodeChar(Nullable`1&lt;Char&gt; data, ByteBuffer buffer)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpCodec.EncodeDoubleNullableOfDoubleByteBuffer">
            <summary>Sets the shim of AmqpCodec.EncodeDouble(Nullable`1&lt;Double&gt; data, ByteBuffer buffer)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpCodec.EncodeFloatNullableOfSingleByteBuffer">
            <summary>Sets the shim of AmqpCodec.EncodeFloat(Nullable`1&lt;Single&gt; data, ByteBuffer buffer)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpCodec.EncodeIntNullableOfInt32ByteBuffer">
            <summary>Sets the shim of AmqpCodec.EncodeInt(Nullable`1&lt;Int32&gt; data, ByteBuffer buffer)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpCodec.EncodeListIListByteBuffer">
            <summary>Sets the shim of AmqpCodec.EncodeList(IList data, ByteBuffer buffer)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpCodec.EncodeLongNullableOfInt64ByteBuffer">
            <summary>Sets the shim of AmqpCodec.EncodeLong(Nullable`1&lt;Int64&gt; data, ByteBuffer buffer)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpCodec.EncodeMapAmqpMapByteBuffer">
            <summary>Sets the shim of AmqpCodec.EncodeMap(AmqpMap data, ByteBuffer buffer)</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.ShimAmqpCodec.EncodeMultipleOf1MultipleOfM0ByteBuffer``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{Microsoft.Azure.Amqp.Framing.Multiple{``0},Microsoft.Azure.Amqp.ByteBuffer})">
            <summary>Sets the shim of AmqpCodec.EncodeMultiple(Multiple`1&lt;!!0&gt; data, ByteBuffer buffer)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpCodec.EncodeObjectObjectByteBuffer">
            <summary>Sets the shim of AmqpCodec.EncodeObject(Object data, ByteBuffer buffer)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpCodec.EncodeSerializableIAmqpSerializableByteBuffer">
            <summary>Sets the shim of AmqpCodec.EncodeSerializable(IAmqpSerializable data, ByteBuffer buffer)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpCodec.EncodeShortNullableOfInt16ByteBuffer">
            <summary>Sets the shim of AmqpCodec.EncodeShort(Nullable`1&lt;Int16&gt; data, ByteBuffer buffer)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpCodec.EncodeStringStringByteBuffer">
            <summary>Sets the shim of AmqpCodec.EncodeString(String data, ByteBuffer buffer)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpCodec.EncodeSymbolAmqpSymbolByteBuffer">
            <summary>Sets the shim of AmqpCodec.EncodeSymbol(AmqpSymbol data, ByteBuffer buffer)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpCodec.EncodeTimeStampNullableOfDateTimeByteBuffer">
            <summary>Sets the shim of AmqpCodec.EncodeTimeStamp(Nullable`1&lt;DateTime&gt; data, ByteBuffer buffer)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpCodec.EncodeUByteNullableOfByteByteBuffer">
            <summary>Sets the shim of AmqpCodec.EncodeUByte(Nullable`1&lt;Byte&gt; data, ByteBuffer buffer)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpCodec.EncodeUIntNullableOfUInt32ByteBuffer">
            <summary>Sets the shim of AmqpCodec.EncodeUInt(Nullable`1&lt;UInt32&gt; data, ByteBuffer buffer)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpCodec.EncodeULongNullableOfUInt64ByteBuffer">
            <summary>Sets the shim of AmqpCodec.EncodeULong(Nullable`1&lt;UInt64&gt; data, ByteBuffer buffer)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpCodec.EncodeUShortNullableOfUInt16ByteBuffer">
            <summary>Sets the shim of AmqpCodec.EncodeUShort(Nullable`1&lt;UInt16&gt; data, ByteBuffer buffer)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpCodec.EncodeUuidNullableOfGuidByteBuffer">
            <summary>Sets the shim of AmqpCodec.EncodeUuid(Nullable`1&lt;Guid&gt; data, ByteBuffer buffer)</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.ShimAmqpCodec.GetArrayEncodeSizeOf1M0Array``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0[],System.Int32})">
            <summary>Sets the shim of AmqpCodec.GetArrayEncodeSize(!!0[] value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpCodec.GetBinaryEncodeSizeArraySegmentOfByte">
            <summary>Sets the shim of AmqpCodec.GetBinaryEncodeSize(ArraySegment`1&lt;Byte&gt; value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpCodec.GetBooleanEncodeSizeNullableOfBoolean">
            <summary>Sets the shim of AmqpCodec.GetBooleanEncodeSize(Nullable`1&lt;Boolean&gt; value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpCodec.GetByteEncodeSizeNullableOfSByte">
            <summary>Sets the shim of AmqpCodec.GetByteEncodeSize(Nullable`1&lt;SByte&gt; value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpCodec.GetCharEncodeSizeNullableOfChar">
            <summary>Sets the shim of AmqpCodec.GetCharEncodeSize(Nullable`1&lt;Char&gt; value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpCodec.GetDoubleEncodeSizeNullableOfDouble">
            <summary>Sets the shim of AmqpCodec.GetDoubleEncodeSize(Nullable`1&lt;Double&gt; value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpCodec.GetFloatEncodeSizeNullableOfSingle">
            <summary>Sets the shim of AmqpCodec.GetFloatEncodeSize(Nullable`1&lt;Single&gt; value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpCodec.GetFrameSizeByteBuffer">
            <summary>Sets the shim of AmqpCodec.GetFrameSize(ByteBuffer buffer)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpCodec.GetIntEncodeSizeNullableOfInt32">
            <summary>Sets the shim of AmqpCodec.GetIntEncodeSize(Nullable`1&lt;Int32&gt; value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpCodec.GetListEncodeSizeIList">
            <summary>Sets the shim of AmqpCodec.GetListEncodeSize(IList value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpCodec.GetLongEncodeSizeNullableOfInt64">
            <summary>Sets the shim of AmqpCodec.GetLongEncodeSize(Nullable`1&lt;Int64&gt; value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpCodec.GetMapEncodeSizeAmqpMap">
            <summary>Sets the shim of AmqpCodec.GetMapEncodeSize(AmqpMap value)</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.ShimAmqpCodec.GetMultipleEncodeSizeOf1MultipleOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Microsoft.Azure.Amqp.Framing.Multiple{``0},System.Int32})">
            <summary>Sets the shim of AmqpCodec.GetMultipleEncodeSize(Multiple`1&lt;!!0&gt; value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpCodec.GetObjectEncodeSizeObject">
            <summary>Sets the shim of AmqpCodec.GetObjectEncodeSize(Object value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpCodec.GetSerializableEncodeSizeIAmqpSerializable">
            <summary>Sets the shim of AmqpCodec.GetSerializableEncodeSize(IAmqpSerializable value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpCodec.GetShortEncodeSizeNullableOfInt16">
            <summary>Sets the shim of AmqpCodec.GetShortEncodeSize(Nullable`1&lt;Int16&gt; value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpCodec.GetStringEncodeSizeString">
            <summary>Sets the shim of AmqpCodec.GetStringEncodeSize(String value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpCodec.GetSymbolEncodeSizeAmqpSymbol">
            <summary>Sets the shim of AmqpCodec.GetSymbolEncodeSize(AmqpSymbol value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpCodec.GetTimeStampEncodeSizeNullableOfDateTime">
            <summary>Sets the shim of AmqpCodec.GetTimeStampEncodeSize(Nullable`1&lt;DateTime&gt; value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpCodec.GetUByteEncodeSizeNullableOfByte">
            <summary>Sets the shim of AmqpCodec.GetUByteEncodeSize(Nullable`1&lt;Byte&gt; value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpCodec.GetUIntEncodeSizeNullableOfUInt32">
            <summary>Sets the shim of AmqpCodec.GetUIntEncodeSize(Nullable`1&lt;UInt32&gt; value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpCodec.GetULongEncodeSizeNullableOfUInt64">
            <summary>Sets the shim of AmqpCodec.GetULongEncodeSize(Nullable`1&lt;UInt64&gt; value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpCodec.GetUShortEncodeSizeNullableOfUInt16">
            <summary>Sets the shim of AmqpCodec.GetUShortEncodeSize(Nullable`1&lt;UInt16&gt; value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpCodec.GetUuidEncodeSizeNullableOfGuid">
            <summary>Sets the shim of AmqpCodec.GetUuidEncodeSize(Nullable`1&lt;Guid&gt; value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpCodec.MinimumFrameDecodeSizeGet">
            <summary>Sets the shim of AmqpCodec.get_MinimumFrameDecodeSize()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpCodec.RegisterKnownTypesStringUInt64FuncOfAmqpDescribed">
            <summary>Sets the shim of AmqpCodec.RegisterKnownTypes(String name, UInt64 code, Func`1&lt;AmqpDescribed&gt; ctor)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpCodec.StaticConstructor">
            <summary>Sets the shim of AmqpCodec.AmqpCodec()</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Fakes.ShimAmqpConnection">
            <summary>Shim type of Microsoft.Azure.Amqp.AmqpConnection</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.ShimAmqpConnection.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.ShimAmqpConnection.#ctor(Microsoft.Azure.Amqp.AmqpConnection)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpConnection.AbortInternal">
            <summary>Sets the shim of AmqpConnection.AbortInternal()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpConnection.AddSessionAmqpSessionNullableOfUInt16">
            <summary>Sets the shim of AmqpConnection.AddSession(AmqpSession session, Nullable`1&lt;UInt16&gt; channel)</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Fakes.ShimAmqpConnection.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpConnection.AllInstances.AbortInternal">
            <summary>Sets the shim of AmqpConnection.AbortInternal()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpConnection.AllInstances.AddSessionAmqpSessionNullableOfUInt16">
            <summary>Sets the shim of AmqpConnection.AddSession(AmqpSession session, Nullable`1&lt;UInt16&gt; channel)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpConnection.AllInstances.AmqpSettingsGet">
            <summary>Sets the shim of AmqpConnection.get_AmqpSettings()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpConnection.AllInstances.CloseInternal">
            <summary>Sets the shim of AmqpConnection.CloseInternal()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpConnection.AllInstances.CloseSessionsBoolean">
            <summary>Sets the shim of AmqpConnection.CloseSessions(Boolean abort)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpConnection.AllInstances.CreateSessionAmqpSessionSettings">
            <summary>Sets the shim of AmqpConnection.CreateSession(AmqpSessionSettings sessionSettings)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpConnection.AllInstances.ExtensionsGet">
            <summary>Sets the shim of AmqpConnection.get_Extensions()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpConnection.AllInstances.HandleIoEventIoEvent">
            <summary>Sets the shim of AmqpConnection.HandleIoEvent(IoEvent ioEvent)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpConnection.AllInstances.IsInitiatorGet">
            <summary>Sets the shim of AmqpConnection.get_IsInitiator()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpConnection.AllInstances.MicrosoftAzureAmqpISessionFactoryCreateSessionAmqpConnectionAmqpSessionSettings">
            <summary>Sets the shim of AmqpConnection.Microsoft.Azure.Amqp.ISessionFactory.CreateSession(AmqpConnection connection, AmqpSessionSettings sessionSettings)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpConnection.AllInstances.NegotiateOpen">
            <summary>Sets the shim of AmqpConnection.Negotiate(Open open)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpConnection.AllInstances.OnFrameBufferByteBuffer">
            <summary>Sets the shim of AmqpConnection.OnFrameBuffer(ByteBuffer buffer)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpConnection.AllInstances.OnProtocolHeaderProtocolHeader">
            <summary>Sets the shim of AmqpConnection.OnProtocolHeader(ProtocolHeader header)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpConnection.AllInstances.OnReceiveOpenOpen">
            <summary>Sets the shim of AmqpConnection.OnReceiveOpen(Open open)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpConnection.AllInstances.OnReceiveSessionFrameFrame">
            <summary>Sets the shim of AmqpConnection.OnReceiveSessionFrame(Frame frame)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpConnection.AllInstances.OpenInternal">
            <summary>Sets the shim of AmqpConnection.OpenInternal()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpConnection.AllInstances.ProcessFrameFrame">
            <summary>Sets the shim of AmqpConnection.ProcessFrame(Frame frame)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpConnection.AllInstances.SendClose">
            <summary>Sets the shim of AmqpConnection.SendClose()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpConnection.AllInstances.SendCommandPerformativeUInt16ArraySegmentOfByteArray">
            <summary>Sets the shim of AmqpConnection.SendCommand(Performative command, UInt16 channel, ArraySegment`1&lt;Byte&gt;[] payload)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpConnection.AllInstances.SendOpen">
            <summary>Sets the shim of AmqpConnection.SendOpen()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpConnection.AllInstances.SendProtocolHeaderProtocolHeader">
            <summary>Sets the shim of AmqpConnection.SendProtocolHeader(ProtocolHeader header)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpConnection.AllInstances.SessionFactoryGet">
            <summary>Sets the shim of AmqpConnection.get_SessionFactory()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpConnection.AllInstances.SessionFactorySetISessionFactory">
            <summary>Sets the shim of AmqpConnection.set_SessionFactory(ISessionFactory value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpConnection.AllInstances.SessionFrameAllowed">
            <summary>Sets the shim of AmqpConnection.SessionFrameAllowed()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpConnection.AllInstances.SessionLockGet">
            <summary>Sets the shim of AmqpConnection.get_SessionLock()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpConnection.AmqpSettingsGet">
            <summary>Sets the shim of AmqpConnection.get_AmqpSettings()</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.ShimAmqpConnection.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.ShimAmqpConnection.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpConnection.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.ShimAmqpConnection.Bind(Microsoft.Azure.Amqp.IIoHandler)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.ShimAmqpConnection.Bind(Microsoft.Azure.Amqp.ISessionFactory)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.ShimAmqpConnection.Bind(Microsoft.Azure.Amqp.ITransportMonitor)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpConnection.CloseInternal">
            <summary>Sets the shim of AmqpConnection.CloseInternal()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpConnection.CloseSessionsBoolean">
            <summary>Sets the shim of AmqpConnection.CloseSessions(Boolean abort)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpConnection.ConstructorTransportBaseAmqpSettingsAmqpConnectionSettings">
            <summary>Sets the shim of AmqpConnection.AmqpConnection(TransportBase transport, AmqpSettings amqpSettings, AmqpConnectionSettings connectionSettings)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpConnection.ConstructorTransportBaseProtocolHeaderAmqpSettingsAmqpConnectionSettings">
            <summary>Sets the shim of AmqpConnection.AmqpConnection(TransportBase transport, ProtocolHeader protocolHeader, AmqpSettings amqpSettings, AmqpConnectionSettings connectionSettings)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpConnection.ConstructorTransportBaseProtocolHeaderBooleanAmqpSettingsAmqpConnectionSettings">
            <summary>Sets the shim of AmqpConnection.AmqpConnection(TransportBase transport, ProtocolHeader protocolHeader, Boolean isInitiator, AmqpSettings amqpSettings, AmqpConnectionSettings connectionSettings)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpConnection.CreateSessionAmqpSessionSettings">
            <summary>Sets the shim of AmqpConnection.CreateSession(AmqpSessionSettings sessionSettings)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpConnection.ExtensionsGet">
            <summary>Sets the shim of AmqpConnection.get_Extensions()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpConnection.FactoryGet">
            <summary>Sets the shim of AmqpConnection.get_Factory()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpConnection.HandleIoEventIoEvent">
            <summary>Sets the shim of AmqpConnection.HandleIoEvent(IoEvent ioEvent)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpConnection.IsInitiatorGet">
            <summary>Sets the shim of AmqpConnection.get_IsInitiator()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpConnection.MicrosoftAzureAmqpISessionFactoryCreateSessionAmqpConnectionAmqpSessionSettings">
            <summary>Sets the shim of AmqpConnection.Microsoft.Azure.Amqp.ISessionFactory.CreateSession(AmqpConnection connection, AmqpSessionSettings sessionSettings)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpConnection.NegotiateOpen">
            <summary>Sets the shim of AmqpConnection.Negotiate(Open open)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpConnection.OnFrameBufferByteBuffer">
            <summary>Sets the shim of AmqpConnection.OnFrameBuffer(ByteBuffer buffer)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpConnection.OnProtocolHeaderProtocolHeader">
            <summary>Sets the shim of AmqpConnection.OnProtocolHeader(ProtocolHeader header)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpConnection.OnReceiveOpenOpen">
            <summary>Sets the shim of AmqpConnection.OnReceiveOpen(Open open)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpConnection.OnReceiveSessionFrameFrame">
            <summary>Sets the shim of AmqpConnection.OnReceiveSessionFrame(Frame frame)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpConnection.OnSessionClosedObjectEventArgs">
            <summary>Sets the shim of AmqpConnection.OnSessionClosed(Object sender, EventArgs e)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpConnection.OpenInternal">
            <summary>Sets the shim of AmqpConnection.OpenInternal()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpConnection.ProcessFrameFrame">
            <summary>Sets the shim of AmqpConnection.ProcessFrame(Frame frame)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpConnection.SendClose">
            <summary>Sets the shim of AmqpConnection.SendClose()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpConnection.SendCommandPerformativeUInt16ArraySegmentOfByteArray">
            <summary>Sets the shim of AmqpConnection.SendCommand(Performative command, UInt16 channel, ArraySegment`1&lt;Byte&gt;[] payload)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpConnection.SendOpen">
            <summary>Sets the shim of AmqpConnection.SendOpen()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpConnection.SendProtocolHeaderProtocolHeader">
            <summary>Sets the shim of AmqpConnection.SendProtocolHeader(ProtocolHeader header)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpConnection.SessionFactoryGet">
            <summary>Sets the shim of AmqpConnection.get_SessionFactory()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpConnection.SessionFactorySetISessionFactory">
            <summary>Sets the shim of AmqpConnection.set_SessionFactory(ISessionFactory value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpConnection.SessionFrameAllowed">
            <summary>Sets the shim of AmqpConnection.SessionFrameAllowed()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpConnection.SessionLockGet">
            <summary>Sets the shim of AmqpConnection.get_SessionLock()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpConnection.StaticConstructor">
            <summary>Sets the shim of AmqpConnection.AmqpConnection()</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Fakes.ShimAmqpConnectionBase">
            <summary>Shim type of Microsoft.Azure.Amqp.AmqpConnectionBase</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.ShimAmqpConnectionBase.#ctor(Microsoft.Azure.Amqp.AmqpConnectionBase)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Fakes.ShimAmqpConnectionBase.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpConnectionBase.AllInstances.AsyncIOGet">
            <summary>Sets the shim of AmqpConnectionBase.get_AsyncIO()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpConnectionBase.AllInstances.HandleIoEventIoEvent">
            <summary>Sets the shim of AmqpConnectionBase.HandleIoEvent(IoEvent ioEvent)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpConnectionBase.AllInstances.LocalEndpointGet">
            <summary>Sets the shim of AmqpConnectionBase.get_LocalEndpoint()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpConnectionBase.AllInstances.MicrosoftAzureAmqpIIoHandlerOnIoEventIoEventInt64">
            <summary>Sets the shim of AmqpConnectionBase.Microsoft.Azure.Amqp.IIoHandler.OnIoEvent(IoEvent ioEvent, Int64 queueSize)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpConnectionBase.AllInstances.MicrosoftAzureAmqpIIoHandlerOnIoFaultException">
            <summary>Sets the shim of AmqpConnectionBase.Microsoft.Azure.Amqp.IIoHandler.OnIoFault(Exception exception)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpConnectionBase.AllInstances.MicrosoftAzureAmqpIIoHandlerOnReceiveBufferByteBuffer">
            <summary>Sets the shim of AmqpConnectionBase.Microsoft.Azure.Amqp.IIoHandler.OnReceiveBuffer(ByteBuffer buffer)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpConnectionBase.AllInstances.MicrosoftAzureAmqpITransportMonitorOnTransportReadInt32Int32Int32Int64">
            <summary>Sets the shim of AmqpConnectionBase.Microsoft.Azure.Amqp.ITransportMonitor.OnTransportRead(Int32 bufferSize, Int32 readSize, Int32 cacheHits, Int64 latencyTicks)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpConnectionBase.AllInstances.MicrosoftAzureAmqpITransportMonitorOnTransportWriteInt32Int32Int64Int64">
            <summary>Sets the shim of AmqpConnectionBase.Microsoft.Azure.Amqp.ITransportMonitor.OnTransportWrite(Int32 bufferSize, Int32 writeSize, Int64 queueSize, Int64 latencyTicks)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpConnectionBase.AllInstances.OnReceiveFrameBufferByteBuffer">
            <summary>Sets the shim of AmqpConnectionBase.OnReceiveFrameBuffer(ByteBuffer buffer)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpConnectionBase.AllInstances.PrincipalGet">
            <summary>Sets the shim of AmqpConnectionBase.get_Principal()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpConnectionBase.AllInstances.RemoteEndpointGet">
            <summary>Sets the shim of AmqpConnectionBase.get_RemoteEndpoint()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpConnectionBase.AllInstances.SendBufferByteBuffer">
            <summary>Sets the shim of AmqpConnectionBase.SendBuffer(ByteBuffer buffer)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpConnectionBase.AllInstances.SendBuffersByteBufferArray">
            <summary>Sets the shim of AmqpConnectionBase.SendBuffers(ByteBuffer[] buffers)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpConnectionBase.AllInstances.SendDatablockIAmqpSerializable">
            <summary>Sets the shim of AmqpConnectionBase.SendDatablock(IAmqpSerializable dataBlock)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpConnectionBase.AllInstances.SettingsGet">
            <summary>Sets the shim of AmqpConnectionBase.get_Settings()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpConnectionBase.AllInstances.UsageMeterGet">
            <summary>Sets the shim of AmqpConnectionBase.get_UsageMeter()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpConnectionBase.AllInstances.UsageMeterSetIAmqpUsageMeter">
            <summary>Sets the shim of AmqpConnectionBase.set_UsageMeter(IAmqpUsageMeter value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpConnectionBase.AsyncIOGet">
            <summary>Sets the shim of AmqpConnectionBase.get_AsyncIO()</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.ShimAmqpConnectionBase.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.ShimAmqpConnectionBase.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpConnectionBase.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.ShimAmqpConnectionBase.Bind(Microsoft.Azure.Amqp.IIoHandler)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.ShimAmqpConnectionBase.Bind(Microsoft.Azure.Amqp.ITransportMonitor)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpConnectionBase.ConstructorStringTransportBaseAmqpConnectionSettingsBoolean">
            <summary>Sets the shim of AmqpConnectionBase.AmqpConnectionBase(String type, TransportBase transport, AmqpConnectionSettings settings, Boolean isInitiator)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpConnectionBase.HandleIoEventIoEvent">
            <summary>Sets the shim of AmqpConnectionBase.HandleIoEvent(IoEvent ioEvent)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpConnectionBase.LocalEndpointGet">
            <summary>Sets the shim of AmqpConnectionBase.get_LocalEndpoint()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpConnectionBase.MicrosoftAzureAmqpIIoHandlerOnIoEventIoEventInt64">
            <summary>Sets the shim of AmqpConnectionBase.Microsoft.Azure.Amqp.IIoHandler.OnIoEvent(IoEvent ioEvent, Int64 queueSize)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpConnectionBase.MicrosoftAzureAmqpIIoHandlerOnIoFaultException">
            <summary>Sets the shim of AmqpConnectionBase.Microsoft.Azure.Amqp.IIoHandler.OnIoFault(Exception exception)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpConnectionBase.MicrosoftAzureAmqpIIoHandlerOnReceiveBufferByteBuffer">
            <summary>Sets the shim of AmqpConnectionBase.Microsoft.Azure.Amqp.IIoHandler.OnReceiveBuffer(ByteBuffer buffer)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpConnectionBase.MicrosoftAzureAmqpITransportMonitorOnTransportReadInt32Int32Int32Int64">
            <summary>Sets the shim of AmqpConnectionBase.Microsoft.Azure.Amqp.ITransportMonitor.OnTransportRead(Int32 bufferSize, Int32 readSize, Int32 cacheHits, Int64 latencyTicks)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpConnectionBase.MicrosoftAzureAmqpITransportMonitorOnTransportWriteInt32Int32Int64Int64">
            <summary>Sets the shim of AmqpConnectionBase.Microsoft.Azure.Amqp.ITransportMonitor.OnTransportWrite(Int32 bufferSize, Int32 writeSize, Int64 queueSize, Int64 latencyTicks)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpConnectionBase.OnReceiveFrameBufferByteBuffer">
            <summary>Sets the shim of AmqpConnectionBase.OnReceiveFrameBuffer(ByteBuffer buffer)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpConnectionBase.PrincipalGet">
            <summary>Sets the shim of AmqpConnectionBase.get_Principal()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpConnectionBase.RemoteEndpointGet">
            <summary>Sets the shim of AmqpConnectionBase.get_RemoteEndpoint()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpConnectionBase.SendBufferByteBuffer">
            <summary>Sets the shim of AmqpConnectionBase.SendBuffer(ByteBuffer buffer)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpConnectionBase.SendBuffersByteBufferArray">
            <summary>Sets the shim of AmqpConnectionBase.SendBuffers(ByteBuffer[] buffers)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpConnectionBase.SendDatablockIAmqpSerializable">
            <summary>Sets the shim of AmqpConnectionBase.SendDatablock(IAmqpSerializable dataBlock)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpConnectionBase.SettingsGet">
            <summary>Sets the shim of AmqpConnectionBase.get_Settings()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpConnectionBase.UsageMeterGet">
            <summary>Sets the shim of AmqpConnectionBase.get_UsageMeter()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpConnectionBase.UsageMeterSetIAmqpUsageMeter">
            <summary>Sets the shim of AmqpConnectionBase.set_UsageMeter(IAmqpUsageMeter value)</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Fakes.ShimAmqpConnectionFactory">
            <summary>Shim type of Microsoft.Azure.Amqp.AmqpConnectionFactory</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.ShimAmqpConnectionFactory.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.ShimAmqpConnectionFactory.#ctor(Microsoft.Azure.Amqp.AmqpConnectionFactory)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Fakes.ShimAmqpConnectionFactory.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpConnectionFactory.AllInstances.OpenConnectionAsyncString">
            <summary>Sets the shim of AmqpConnectionFactory.OpenConnectionAsync(String address)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpConnectionFactory.AllInstances.OpenConnectionAsyncStringTimeSpan">
            <summary>Sets the shim of AmqpConnectionFactory.OpenConnectionAsync(String address, TimeSpan timeout)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpConnectionFactory.AllInstances.OpenConnectionAsyncUriSaslHandlerTimeSpan">
            <summary>Sets the shim of AmqpConnectionFactory.OpenConnectionAsync(Uri addressUri, SaslHandler saslHandler, TimeSpan timeout)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpConnectionFactory.AllInstances.OpenConnectionAsyncUriTimeSpan">
            <summary>Sets the shim of AmqpConnectionFactory.OpenConnectionAsync(Uri addressUri, TimeSpan timeout)</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.ShimAmqpConnectionFactory.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.ShimAmqpConnectionFactory.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpConnectionFactory.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpConnectionFactory.Constructor">
            <summary>Sets the shim of AmqpConnectionFactory.AmqpConnectionFactory()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpConnectionFactory.OpenConnectionAsyncString">
            <summary>Sets the shim of AmqpConnectionFactory.OpenConnectionAsync(String address)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpConnectionFactory.OpenConnectionAsyncStringTimeSpan">
            <summary>Sets the shim of AmqpConnectionFactory.OpenConnectionAsync(String address, TimeSpan timeout)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpConnectionFactory.OpenConnectionAsyncUriSaslHandlerTimeSpan">
            <summary>Sets the shim of AmqpConnectionFactory.OpenConnectionAsync(Uri addressUri, SaslHandler saslHandler, TimeSpan timeout)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpConnectionFactory.OpenConnectionAsyncUriTimeSpan">
            <summary>Sets the shim of AmqpConnectionFactory.OpenConnectionAsync(Uri addressUri, TimeSpan timeout)</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Fakes.ShimAmqpConnectionSettings">
            <summary>Shim type of Microsoft.Azure.Amqp.AmqpConnectionSettings</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.ShimAmqpConnectionSettings.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.ShimAmqpConnectionSettings.#ctor(Microsoft.Azure.Amqp.AmqpConnectionSettings)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Fakes.ShimAmqpConnectionSettings.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpConnectionSettings.AllInstances.Clone">
            <summary>Sets the shim of AmqpConnectionSettings.Clone()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpConnectionSettings.AllInstances.IgnoreMissingSessionsGet">
            <summary>Sets the shim of AmqpConnectionSettings.get_IgnoreMissingSessions()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpConnectionSettings.AllInstances.IgnoreMissingSessionsSetBoolean">
            <summary>Sets the shim of AmqpConnectionSettings.set_IgnoreMissingSessions(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpConnectionSettings.AllInstances.MinIdleTimeoutGet">
            <summary>Sets the shim of AmqpConnectionSettings.get_MinIdleTimeout()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpConnectionSettings.AllInstances.MinIdleTimeoutSetUInt32">
            <summary>Sets the shim of AmqpConnectionSettings.set_MinIdleTimeout(UInt32 value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpConnectionSettings.AllInstances.ReceiveBufferSizeGet">
            <summary>Sets the shim of AmqpConnectionSettings.get_ReceiveBufferSize()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpConnectionSettings.AllInstances.ReceiveBufferSizeSetInt32">
            <summary>Sets the shim of AmqpConnectionSettings.set_ReceiveBufferSize(Int32 value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpConnectionSettings.AllInstances.RemoteContainerIdGet">
            <summary>Sets the shim of AmqpConnectionSettings.get_RemoteContainerId()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpConnectionSettings.AllInstances.RemoteContainerIdSetString">
            <summary>Sets the shim of AmqpConnectionSettings.set_RemoteContainerId(String value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpConnectionSettings.AllInstances.RemoteHostNameGet">
            <summary>Sets the shim of AmqpConnectionSettings.get_RemoteHostName()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpConnectionSettings.AllInstances.RemoteHostNameSetString">
            <summary>Sets the shim of AmqpConnectionSettings.set_RemoteHostName(String value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpConnectionSettings.AllInstances.SendBufferSizeGet">
            <summary>Sets the shim of AmqpConnectionSettings.get_SendBufferSize()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpConnectionSettings.AllInstances.SendBufferSizeSetInt32">
            <summary>Sets the shim of AmqpConnectionSettings.set_SendBufferSize(Int32 value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpConnectionSettings.AllInstances.WriteBufferEmptyLimitGet">
            <summary>Sets the shim of AmqpConnectionSettings.get_WriteBufferEmptyLimit()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpConnectionSettings.AllInstances.WriteBufferEmptyLimitSetInt32">
            <summary>Sets the shim of AmqpConnectionSettings.set_WriteBufferEmptyLimit(Int32 value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpConnectionSettings.AllInstances.WriteBufferFullLimitGet">
            <summary>Sets the shim of AmqpConnectionSettings.get_WriteBufferFullLimit()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpConnectionSettings.AllInstances.WriteBufferFullLimitSetInt32">
            <summary>Sets the shim of AmqpConnectionSettings.set_WriteBufferFullLimit(Int32 value)</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.ShimAmqpConnectionSettings.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.ShimAmqpConnectionSettings.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpConnectionSettings.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.ShimAmqpConnectionSettings.Bind(Microsoft.Azure.Amqp.Encoding.IAmqpSerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpConnectionSettings.Clone">
            <summary>Sets the shim of AmqpConnectionSettings.Clone()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpConnectionSettings.Constructor">
            <summary>Sets the shim of AmqpConnectionSettings.AmqpConnectionSettings()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpConnectionSettings.IgnoreMissingSessionsGet">
            <summary>Sets the shim of AmqpConnectionSettings.get_IgnoreMissingSessions()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpConnectionSettings.IgnoreMissingSessionsSetBoolean">
            <summary>Sets the shim of AmqpConnectionSettings.set_IgnoreMissingSessions(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpConnectionSettings.MinIdleTimeoutGet">
            <summary>Sets the shim of AmqpConnectionSettings.get_MinIdleTimeout()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpConnectionSettings.MinIdleTimeoutSetUInt32">
            <summary>Sets the shim of AmqpConnectionSettings.set_MinIdleTimeout(UInt32 value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpConnectionSettings.ReceiveBufferSizeGet">
            <summary>Sets the shim of AmqpConnectionSettings.get_ReceiveBufferSize()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpConnectionSettings.ReceiveBufferSizeSetInt32">
            <summary>Sets the shim of AmqpConnectionSettings.set_ReceiveBufferSize(Int32 value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpConnectionSettings.RemoteContainerIdGet">
            <summary>Sets the shim of AmqpConnectionSettings.get_RemoteContainerId()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpConnectionSettings.RemoteContainerIdSetString">
            <summary>Sets the shim of AmqpConnectionSettings.set_RemoteContainerId(String value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpConnectionSettings.RemoteHostNameGet">
            <summary>Sets the shim of AmqpConnectionSettings.get_RemoteHostName()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpConnectionSettings.RemoteHostNameSetString">
            <summary>Sets the shim of AmqpConnectionSettings.set_RemoteHostName(String value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpConnectionSettings.SendBufferSizeGet">
            <summary>Sets the shim of AmqpConnectionSettings.get_SendBufferSize()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpConnectionSettings.SendBufferSizeSetInt32">
            <summary>Sets the shim of AmqpConnectionSettings.set_SendBufferSize(Int32 value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpConnectionSettings.WriteBufferEmptyLimitGet">
            <summary>Sets the shim of AmqpConnectionSettings.get_WriteBufferEmptyLimit()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpConnectionSettings.WriteBufferEmptyLimitSetInt32">
            <summary>Sets the shim of AmqpConnectionSettings.set_WriteBufferEmptyLimit(Int32 value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpConnectionSettings.WriteBufferFullLimitGet">
            <summary>Sets the shim of AmqpConnectionSettings.get_WriteBufferFullLimit()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpConnectionSettings.WriteBufferFullLimitSetInt32">
            <summary>Sets the shim of AmqpConnectionSettings.set_WriteBufferFullLimit(Int32 value)</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Fakes.ShimAmqpConstants">
            <summary>Shim type of Microsoft.Azure.Amqp.AmqpConstants</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.ShimAmqpConstants.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.ShimAmqpConstants.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.ShimAmqpConstants.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpConstants.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpConstants.StaticConstructor">
            <summary>Sets the shim of AmqpConstants.AmqpConstants()</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Fakes.ShimAmqpErrorCode">
            <summary>Shim type of Microsoft.Azure.Amqp.AmqpErrorCode</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.ShimAmqpErrorCode.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.ShimAmqpErrorCode.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.ShimAmqpErrorCode.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpErrorCode.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpErrorCode.StaticConstructor">
            <summary>Sets the shim of AmqpErrorCode.AmqpErrorCode()</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Fakes.ShimAmqpException">
            <summary>Shim type of Microsoft.Azure.Amqp.AmqpException</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.ShimAmqpException.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.ShimAmqpException.#ctor(Microsoft.Azure.Amqp.AmqpException)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Fakes.ShimAmqpException.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpException.AllInstances.ErrorGet">
            <summary>Sets the shim of AmqpException.get_Error()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpException.AllInstances.ErrorSetError">
            <summary>Sets the shim of AmqpException.set_Error(Error value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpException.AllInstances.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the shim of AmqpException.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.ShimAmqpException.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.ShimAmqpException.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpException.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.ShimAmqpException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpException.ConstructorAmqpSymbolString">
            <summary>Sets the shim of AmqpException.AmqpException(AmqpSymbol condition, String description)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpException.ConstructorError">
            <summary>Sets the shim of AmqpException.AmqpException(Error error)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpException.ConstructorSerializationInfoStreamingContext">
            <summary>Sets the shim of AmqpException.AmqpException(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpException.ErrorGet">
            <summary>Sets the shim of AmqpException.get_Error()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpException.ErrorSetError">
            <summary>Sets the shim of AmqpException.set_Error(Error value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpException.FromErrorError">
            <summary>Sets the shim of AmqpException.FromError(Error error)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the shim of AmqpException.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Fakes.ShimAmqpLink">
            <summary>Shim type of Microsoft.Azure.Amqp.AmqpLink</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.ShimAmqpLink.#ctor(Microsoft.Azure.Amqp.AmqpLink)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpLink.AbortInternal">
            <summary>Sets the shim of AmqpLink.AbortInternal()</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Fakes.ShimAmqpLink.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpLink.AllInstances.AbortInternal">
            <summary>Sets the shim of AmqpLink.AbortInternal()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpLink.AllInstances.ApplyTempTotalLinkCredit">
            <summary>Sets the shim of AmqpLink.ApplyTempTotalLinkCredit()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpLink.AllInstances.AttachToAmqpSession">
            <summary>Sets the shim of AmqpLink.AttachTo(AmqpSession session)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpLink.AllInstances.AvailableGet">
            <summary>Sets the shim of AmqpLink.get_Available()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpLink.AllInstances.CloseInternal">
            <summary>Sets the shim of AmqpLink.CloseInternal()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpLink.AllInstances.CompleteDeliveryArraySegmentOfByte">
            <summary>Sets the shim of AmqpLink.CompleteDelivery(ArraySegment`1&lt;Byte&gt; deliveryTag)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpLink.AllInstances.DisposeDeliveryArraySegmentOfByteBooleanDeliveryStateBoolean">
            <summary>Sets the shim of AmqpLink.DisposeDelivery(ArraySegment`1&lt;Byte&gt; deliveryTag, Boolean settled, DeliveryState state, Boolean batchable)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpLink.AllInstances.DisposeDeliveryDeliveryBooleanDeliveryState">
            <summary>Sets the shim of AmqpLink.DisposeDelivery(Delivery delivery, Boolean settled, DeliveryState state)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpLink.AllInstances.DisposeDeliveryDeliveryBooleanDeliveryStateBoolean">
            <summary>Sets the shim of AmqpLink.DisposeDelivery(Delivery delivery, Boolean settled, DeliveryState state, Boolean noFlush)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpLink.AllInstances.DisposeDeliveryInternalDeliveryBooleanDeliveryStateBoolean">
            <summary>Sets the shim of AmqpLink.DisposeDeliveryInternal(Delivery delivery, Boolean settled, DeliveryState state, Boolean noFlush)</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.ShimAmqpLink.AllInstances.DoActionIfNotClosedOf4FuncOfAmqpLinkM0M1M2M3BooleanM0M1M2M3``4(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Microsoft.Azure.Amqp.AmqpLink,System.Func{Microsoft.Azure.Amqp.AmqpLink,``0,``1,``2,``3,System.Boolean},``0,``1,``2,``3,System.Boolean})">
            <summary>Sets the shim of AmqpLink.DoActionIfNotClosed(Func`6&lt;AmqpLink,!!0,!!1,!!2,!!3,Boolean&gt; action, !!0 p1, !!1 p2, !!2 p3, !!3 p4)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpLink.AllInstances.ForceSendDeliveryDelivery">
            <summary>Sets the shim of AmqpLink.ForceSendDelivery(Delivery delivery)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpLink.AllInstances.GetTxnIdFromFlowFlow">
            <summary>Sets the shim of AmqpLink.GetTxnIdFromFlow(Flow flow)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpLink.AllInstances.IsReceiverGet">
            <summary>Sets the shim of AmqpLink.get_IsReceiver()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpLink.AllInstances.IssueCreditUInt32BooleanArraySegmentOfByte">
            <summary>Sets the shim of AmqpLink.IssueCredit(UInt32 credit, Boolean drain, ArraySegment`1&lt;Byte&gt; txnId)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpLink.AllInstances.LinkCreditGet">
            <summary>Sets the shim of AmqpLink.get_LinkCredit()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpLink.AllInstances.LinkCreditSetUInt32">
            <summary>Sets the shim of AmqpLink.set_LinkCredit(UInt32 value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpLink.AllInstances.LocalHandleGet">
            <summary>Sets the shim of AmqpLink.get_LocalHandle()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpLink.AllInstances.LocalHandleSetNullableOfUInt32">
            <summary>Sets the shim of AmqpLink.set_LocalHandle(Nullable`1&lt;UInt32&gt; value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpLink.AllInstances.MaxFrameSizeGet">
            <summary>Sets the shim of AmqpLink.get_MaxFrameSize()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpLink.AllInstances.MaxFrameSizeSetUInt32">
            <summary>Sets the shim of AmqpLink.set_MaxFrameSize(UInt32 value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpLink.AllInstances.MicrosoftAzureAmqpIWorkDelegateMicrosoftAzureAmqpDeliveryInvokeDelivery">
            <summary>Sets the shim of AmqpLink.Microsoft.Azure.Amqp.IWorkDelegate&lt;Microsoft.Azure.Amqp.Delivery&gt;.Invoke(Delivery delivery)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpLink.AllInstances.NameGet">
            <summary>Sets the shim of AmqpLink.get_Name()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpLink.AllInstances.NegotiateAttach">
            <summary>Sets the shim of AmqpLink.Negotiate(Attach attach)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpLink.AllInstances.NotifySessionCreditInt32">
            <summary>Sets the shim of AmqpLink.NotifySessionCredit(Int32 credit)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpLink.AllInstances.OnDeliverySettled">
            <summary>Sets the shim of AmqpLink.OnDeliverySettled()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpLink.AllInstances.OnDisposeDeliveryDelivery">
            <summary>Sets the shim of AmqpLink.OnDisposeDelivery(Delivery delivery)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpLink.AllInstances.OnFlowFlow">
            <summary>Sets the shim of AmqpLink.OnFlow(Flow flow)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpLink.AllInstances.OnIoEventIoEvent">
            <summary>Sets the shim of AmqpLink.OnIoEvent(IoEvent ioEvent)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpLink.AllInstances.OnLinkOpenFailedException">
            <summary>Sets the shim of AmqpLink.OnLinkOpenFailed(Exception exception)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpLink.AllInstances.OnReceiveAttachAttach">
            <summary>Sets the shim of AmqpLink.OnReceiveAttach(Attach attach)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpLink.AllInstances.OnReceiveDetachDetach">
            <summary>Sets the shim of AmqpLink.OnReceiveDetach(Detach detach)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpLink.AllInstances.OnReceiveFlowFlow">
            <summary>Sets the shim of AmqpLink.OnReceiveFlow(Flow flow)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpLink.AllInstances.OnReceiveStateOpenSentAttach">
            <summary>Sets the shim of AmqpLink.OnReceiveStateOpenSent(Attach attach)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpLink.AllInstances.OnReceiveTransferTransferFrame">
            <summary>Sets the shim of AmqpLink.OnReceiveTransfer(Transfer transfer, Frame rawFrame)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpLink.AllInstances.OpenInternal">
            <summary>Sets the shim of AmqpLink.OpenInternal()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpLink.AllInstances.ProcessFlowFlow">
            <summary>Sets the shim of AmqpLink.ProcessFlow(Flow flow)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpLink.AllInstances.ProcessFrameFrame">
            <summary>Sets the shim of AmqpLink.ProcessFrame(Frame frame)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpLink.AllInstances.ProcessTransferTransferFrameDeliveryBoolean">
            <summary>Sets the shim of AmqpLink.ProcessTransfer(Transfer transfer, Frame rawFrame, Delivery delivery, Boolean newDelivery)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpLink.AllInstances.PropertyReceivedAddEventHandler">
            <summary>Sets the shim of AmqpLink.add_PropertyReceived(EventHandler value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpLink.AllInstances.PropertyReceivedRemoveEventHandler">
            <summary>Sets the shim of AmqpLink.remove_PropertyReceived(EventHandler value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpLink.AllInstances.RemoteHandleGet">
            <summary>Sets the shim of AmqpLink.get_RemoteHandle()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpLink.AllInstances.RemoteHandleSetNullableOfUInt32">
            <summary>Sets the shim of AmqpLink.set_RemoteHandle(Nullable`1&lt;UInt32&gt; value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpLink.AllInstances.SendAttach">
            <summary>Sets the shim of AmqpLink.SendAttach()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpLink.AllInstances.SendDeliveryDelivery">
            <summary>Sets the shim of AmqpLink.SendDelivery(Delivery delivery)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpLink.AllInstances.SendDetach">
            <summary>Sets the shim of AmqpLink.SendDetach()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpLink.AllInstances.SendFlowBoolean">
            <summary>Sets the shim of AmqpLink.SendFlow(Boolean echo)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpLink.AllInstances.SendFlowBooleanBooleanArraySegmentOfByte">
            <summary>Sets the shim of AmqpLink.SendFlow(Boolean echo, Boolean drain, ArraySegment`1&lt;Byte&gt; txnId)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpLink.AllInstances.SendFlowBooleanBooleanFields">
            <summary>Sets the shim of AmqpLink.SendFlow(Boolean echo, Boolean drain, Fields properties)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpLink.AllInstances.SendFlowInternalBooleanBooleanFields">
            <summary>Sets the shim of AmqpLink.SendFlowInternal(Boolean echo, Boolean drain, Fields properties)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpLink.AllInstances.SendPropertiesFields">
            <summary>Sets the shim of AmqpLink.SendProperties(Fields properties)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpLink.AllInstances.SessionGet">
            <summary>Sets the shim of AmqpLink.get_Session()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpLink.AllInstances.SessionSetAmqpSession">
            <summary>Sets the shim of AmqpLink.set_Session(AmqpSession value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpLink.AllInstances.SetTotalLinkCreditUInt32BooleanBoolean">
            <summary>Sets the shim of AmqpLink.SetTotalLinkCredit(UInt32 totalCredit, Boolean applyNow, Boolean updateAutoFlow)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpLink.AllInstances.SettingsGet">
            <summary>Sets the shim of AmqpLink.get_Settings()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpLink.AllInstances.StartSendDeliveryDelivery">
            <summary>Sets the shim of AmqpLink.StartSendDelivery(Delivery delivery)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpLink.AllInstances.SyncRootGet">
            <summary>Sets the shim of AmqpLink.get_SyncRoot()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpLink.AllInstances.TrySendDeliveryDelivery">
            <summary>Sets the shim of AmqpLink.TrySendDelivery(Delivery delivery)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpLink.AllInstances.UnsettledMapGet">
            <summary>Sets the shim of AmqpLink.get_UnsettledMap()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpLink.AllInstances._CloseInternalb__69_0">
            <summary>Sets the shim of AmqpLink.&lt;CloseInternal&gt;b__69_0()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpLink.ApplyTempTotalLinkCredit">
            <summary>Sets the shim of AmqpLink.ApplyTempTotalLinkCredit()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpLink.AttachToAmqpSession">
            <summary>Sets the shim of AmqpLink.AttachTo(AmqpSession session)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpLink.AvailableGet">
            <summary>Sets the shim of AmqpLink.get_Available()</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.ShimAmqpLink.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.ShimAmqpLink.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpLink.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.ShimAmqpLink.Bind(Microsoft.Azure.Amqp.IWorkDelegate{Microsoft.Azure.Amqp.Delivery})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpLink.CloseInternal">
            <summary>Sets the shim of AmqpLink.CloseInternal()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpLink.CompleteDeliveryArraySegmentOfByte">
            <summary>Sets the shim of AmqpLink.CompleteDelivery(ArraySegment`1&lt;Byte&gt; deliveryTag)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpLink.ConstructorAmqpSessionAmqpLinkSettings">
            <summary>Sets the shim of AmqpLink.AmqpLink(AmqpSession session, AmqpLinkSettings linkSettings)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpLink.ConstructorStringAmqpSessionAmqpLinkSettings">
            <summary>Sets the shim of AmqpLink.AmqpLink(String type, AmqpSession session, AmqpLinkSettings linkSettings)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpLink.DisposeDeliveryArraySegmentOfByteBooleanDeliveryStateBoolean">
            <summary>Sets the shim of AmqpLink.DisposeDelivery(ArraySegment`1&lt;Byte&gt; deliveryTag, Boolean settled, DeliveryState state, Boolean batchable)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpLink.DisposeDeliveryDeliveryBooleanDeliveryState">
            <summary>Sets the shim of AmqpLink.DisposeDelivery(Delivery delivery, Boolean settled, DeliveryState state)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpLink.DisposeDeliveryDeliveryBooleanDeliveryStateBoolean">
            <summary>Sets the shim of AmqpLink.DisposeDelivery(Delivery delivery, Boolean settled, DeliveryState state, Boolean noFlush)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpLink.DisposeDeliveryInternalDeliveryBooleanDeliveryStateBoolean">
            <summary>Sets the shim of AmqpLink.DisposeDeliveryInternal(Delivery delivery, Boolean settled, DeliveryState state, Boolean noFlush)</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.ShimAmqpLink.DoActionIfNotClosedOf4FuncOfAmqpLinkM0M1M2M3BooleanM0M1M2M3``4(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Func{Microsoft.Azure.Amqp.AmqpLink,``0,``1,``2,``3,System.Boolean},``0,``1,``2,``3,System.Boolean})">
            <summary>Sets the shim of AmqpLink.DoActionIfNotClosed(Func`6&lt;AmqpLink,!!0,!!1,!!2,!!3,Boolean&gt; action, !!0 p1, !!1 p2, !!2 p3, !!3 p4)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpLink.ForceSendDeliveryDelivery">
            <summary>Sets the shim of AmqpLink.ForceSendDelivery(Delivery delivery)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpLink.GetTxnIdFromFlowFlow">
            <summary>Sets the shim of AmqpLink.GetTxnIdFromFlow(Flow flow)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpLink.IsReceiverGet">
            <summary>Sets the shim of AmqpLink.get_IsReceiver()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpLink.IssueCreditUInt32BooleanArraySegmentOfByte">
            <summary>Sets the shim of AmqpLink.IssueCredit(UInt32 credit, Boolean drain, ArraySegment`1&lt;Byte&gt; txnId)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpLink.LinkCreditGet">
            <summary>Sets the shim of AmqpLink.get_LinkCredit()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpLink.LinkCreditSetUInt32">
            <summary>Sets the shim of AmqpLink.set_LinkCredit(UInt32 value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpLink.LocalHandleGet">
            <summary>Sets the shim of AmqpLink.get_LocalHandle()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpLink.LocalHandleSetNullableOfUInt32">
            <summary>Sets the shim of AmqpLink.set_LocalHandle(Nullable`1&lt;UInt32&gt; value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpLink.MaxFrameSizeGet">
            <summary>Sets the shim of AmqpLink.get_MaxFrameSize()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpLink.MaxFrameSizeSetUInt32">
            <summary>Sets the shim of AmqpLink.set_MaxFrameSize(UInt32 value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpLink.MicrosoftAzureAmqpIWorkDelegateMicrosoftAzureAmqpDeliveryInvokeDelivery">
            <summary>Sets the shim of AmqpLink.Microsoft.Azure.Amqp.IWorkDelegate&lt;Microsoft.Azure.Amqp.Delivery&gt;.Invoke(Delivery delivery)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpLink.NameGet">
            <summary>Sets the shim of AmqpLink.get_Name()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpLink.NegotiateAttach">
            <summary>Sets the shim of AmqpLink.Negotiate(Attach attach)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpLink.NotifySessionCreditInt32">
            <summary>Sets the shim of AmqpLink.NotifySessionCredit(Int32 credit)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpLink.OnDeliverySettled">
            <summary>Sets the shim of AmqpLink.OnDeliverySettled()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpLink.OnDisposeDeliveryDelivery">
            <summary>Sets the shim of AmqpLink.OnDisposeDelivery(Delivery delivery)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpLink.OnFlowFlow">
            <summary>Sets the shim of AmqpLink.OnFlow(Flow flow)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpLink.OnIoEventIoEvent">
            <summary>Sets the shim of AmqpLink.OnIoEvent(IoEvent ioEvent)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpLink.OnLinkOpenFailedException">
            <summary>Sets the shim of AmqpLink.OnLinkOpenFailed(Exception exception)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpLink.OnProviderLinkOpenedIAsyncResult">
            <summary>Sets the shim of AmqpLink.OnProviderLinkOpened(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpLink.OnReceiveAttachAttach">
            <summary>Sets the shim of AmqpLink.OnReceiveAttach(Attach attach)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpLink.OnReceiveDetachDetach">
            <summary>Sets the shim of AmqpLink.OnReceiveDetach(Detach detach)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpLink.OnReceiveFlowFlow">
            <summary>Sets the shim of AmqpLink.OnReceiveFlow(Flow flow)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpLink.OnReceiveStateOpenSentAttach">
            <summary>Sets the shim of AmqpLink.OnReceiveStateOpenSent(Attach attach)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpLink.OnReceiveTransferTransferFrame">
            <summary>Sets the shim of AmqpLink.OnReceiveTransfer(Transfer transfer, Frame rawFrame)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpLink.OpenInternal">
            <summary>Sets the shim of AmqpLink.OpenInternal()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpLink.ProcessFlowFlow">
            <summary>Sets the shim of AmqpLink.ProcessFlow(Flow flow)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpLink.ProcessFrameFrame">
            <summary>Sets the shim of AmqpLink.ProcessFrame(Frame frame)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpLink.ProcessTransferTransferFrameDeliveryBoolean">
            <summary>Sets the shim of AmqpLink.ProcessTransfer(Transfer transfer, Frame rawFrame, Delivery delivery, Boolean newDelivery)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpLink.PropertyReceivedAddEventHandler">
            <summary>Sets the shim of AmqpLink.add_PropertyReceived(EventHandler value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpLink.PropertyReceivedRemoveEventHandler">
            <summary>Sets the shim of AmqpLink.remove_PropertyReceived(EventHandler value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpLink.RemoteHandleGet">
            <summary>Sets the shim of AmqpLink.get_RemoteHandle()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpLink.RemoteHandleSetNullableOfUInt32">
            <summary>Sets the shim of AmqpLink.set_RemoteHandle(Nullable`1&lt;UInt32&gt; value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpLink.SendAttach">
            <summary>Sets the shim of AmqpLink.SendAttach()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpLink.SendDeliveryDelivery">
            <summary>Sets the shim of AmqpLink.SendDelivery(Delivery delivery)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpLink.SendDetach">
            <summary>Sets the shim of AmqpLink.SendDetach()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpLink.SendFlowBoolean">
            <summary>Sets the shim of AmqpLink.SendFlow(Boolean echo)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpLink.SendFlowBooleanBooleanArraySegmentOfByte">
            <summary>Sets the shim of AmqpLink.SendFlow(Boolean echo, Boolean drain, ArraySegment`1&lt;Byte&gt; txnId)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpLink.SendFlowBooleanBooleanFields">
            <summary>Sets the shim of AmqpLink.SendFlow(Boolean echo, Boolean drain, Fields properties)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpLink.SendFlowInternalBooleanBooleanFields">
            <summary>Sets the shim of AmqpLink.SendFlowInternal(Boolean echo, Boolean drain, Fields properties)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpLink.SendPropertiesFields">
            <summary>Sets the shim of AmqpLink.SendProperties(Fields properties)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpLink.SessionGet">
            <summary>Sets the shim of AmqpLink.get_Session()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpLink.SessionSetAmqpSession">
            <summary>Sets the shim of AmqpLink.set_Session(AmqpSession value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpLink.SetTotalLinkCreditUInt32BooleanBoolean">
            <summary>Sets the shim of AmqpLink.SetTotalLinkCredit(UInt32 totalCredit, Boolean applyNow, Boolean updateAutoFlow)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpLink.SettingsGet">
            <summary>Sets the shim of AmqpLink.get_Settings()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpLink.StartSendDeliveryDelivery">
            <summary>Sets the shim of AmqpLink.StartSendDelivery(Delivery delivery)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpLink.StaticConstructor">
            <summary>Sets the shim of AmqpLink.AmqpLink()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpLink.SyncRootGet">
            <summary>Sets the shim of AmqpLink.get_SyncRoot()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpLink.TrySendDeliveryDelivery">
            <summary>Sets the shim of AmqpLink.TrySendDelivery(Delivery delivery)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpLink.UnsettledMapGet">
            <summary>Sets the shim of AmqpLink.get_UnsettledMap()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpLink._CloseInternalb__69_0">
            <summary>Sets the shim of AmqpLink.&lt;CloseInternal&gt;b__69_0()</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Fakes.ShimAmqpLinkSettings">
            <summary>Shim type of Microsoft.Azure.Amqp.AmqpLinkSettings</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.ShimAmqpLinkSettings.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.ShimAmqpLinkSettings.#ctor(Microsoft.Azure.Amqp.AmqpLinkSettings)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Fakes.ShimAmqpLinkSettings.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpLinkSettings.AllInstances.AutoSendFlowGet">
            <summary>Sets the shim of AmqpLinkSettings.get_AutoSendFlow()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpLinkSettings.AllInstances.AutoSendFlowSetBoolean">
            <summary>Sets the shim of AmqpLinkSettings.set_AutoSendFlow(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpLinkSettings.AllInstances.EqualsObject">
            <summary>Sets the shim of AmqpLinkSettings.Equals(Object obj)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpLinkSettings.AllInstances.FlowThresholdGet">
            <summary>Sets the shim of AmqpLinkSettings.get_FlowThreshold()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpLinkSettings.AllInstances.FlowThresholdSetInt32">
            <summary>Sets the shim of AmqpLinkSettings.set_FlowThreshold(Int32 value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpLinkSettings.AllInstances.GetHashCode01">
            <summary>Sets the shim of AmqpLinkSettings.GetHashCode()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpLinkSettings.AllInstances.SettleTypeGet">
            <summary>Sets the shim of AmqpLinkSettings.get_SettleType()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpLinkSettings.AllInstances.SettleTypeSetSettleMode">
            <summary>Sets the shim of AmqpLinkSettings.set_SettleType(SettleMode value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpLinkSettings.AllInstances.TotalCacheSizeInBytesGet">
            <summary>Sets the shim of AmqpLinkSettings.get_TotalCacheSizeInBytes()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpLinkSettings.AllInstances.TotalCacheSizeInBytesSetNullableOfInt64">
            <summary>Sets the shim of AmqpLinkSettings.set_TotalCacheSizeInBytes(Nullable`1&lt;Int64&gt; value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpLinkSettings.AllInstances.TotalLinkCreditGet">
            <summary>Sets the shim of AmqpLinkSettings.get_TotalLinkCredit()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpLinkSettings.AllInstances.TotalLinkCreditSetUInt32">
            <summary>Sets the shim of AmqpLinkSettings.set_TotalLinkCredit(UInt32 value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpLinkSettings.AutoSendFlowGet">
            <summary>Sets the shim of AmqpLinkSettings.get_AutoSendFlow()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpLinkSettings.AutoSendFlowSetBoolean">
            <summary>Sets the shim of AmqpLinkSettings.set_AutoSendFlow(Boolean value)</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.ShimAmqpLinkSettings.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.ShimAmqpLinkSettings.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpLinkSettings.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.ShimAmqpLinkSettings.Bind(Microsoft.Azure.Amqp.Encoding.IAmqpSerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpLinkSettings.Constructor">
            <summary>Sets the shim of AmqpLinkSettings.AmqpLinkSettings()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpLinkSettings.CreateAttach">
            <summary>Sets the shim of AmqpLinkSettings.Create(Attach attach)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpLinkSettings.EqualsObject">
            <summary>Sets the shim of AmqpLinkSettings.Equals(Object obj)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpLinkSettings.FlowThresholdGet">
            <summary>Sets the shim of AmqpLinkSettings.get_FlowThreshold()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpLinkSettings.FlowThresholdSetInt32">
            <summary>Sets the shim of AmqpLinkSettings.set_FlowThreshold(Int32 value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpLinkSettings.GetHashCode">
            <summary>Sets the shim of AmqpLinkSettings.GetHashCode()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpLinkSettings.SettleTypeGet">
            <summary>Sets the shim of AmqpLinkSettings.get_SettleType()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpLinkSettings.SettleTypeSetSettleMode">
            <summary>Sets the shim of AmqpLinkSettings.set_SettleType(SettleMode value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpLinkSettings.TotalCacheSizeInBytesGet">
            <summary>Sets the shim of AmqpLinkSettings.get_TotalCacheSizeInBytes()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpLinkSettings.TotalCacheSizeInBytesSetNullableOfInt64">
            <summary>Sets the shim of AmqpLinkSettings.set_TotalCacheSizeInBytes(Nullable`1&lt;Int64&gt; value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpLinkSettings.TotalLinkCreditGet">
            <summary>Sets the shim of AmqpLinkSettings.get_TotalLinkCredit()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpLinkSettings.TotalLinkCreditSetUInt32">
            <summary>Sets the shim of AmqpLinkSettings.set_TotalLinkCredit(UInt32 value)</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Fakes.ShimAmqpMessage">
            <summary>Shim type of Microsoft.Azure.Amqp.AmqpMessage</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.ShimAmqpMessage.#ctor(Microsoft.Azure.Amqp.AmqpMessage)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Fakes.ShimAmqpMessage.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpMessage.AllInstances.ApplicationPropertiesGet">
            <summary>Sets the shim of AmqpMessage.get_ApplicationProperties()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpMessage.AllInstances.ApplicationPropertiesSetApplicationProperties">
            <summary>Sets the shim of AmqpMessage.set_ApplicationProperties(ApplicationProperties value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpMessage.AllInstances.BodySectionLengthGet">
            <summary>Sets the shim of AmqpMessage.get_BodySectionLength()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpMessage.AllInstances.BodySectionLengthSetInt64">
            <summary>Sets the shim of AmqpMessage.set_BodySectionLength(Int64 value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpMessage.AllInstances.BodySectionOffsetGet">
            <summary>Sets the shim of AmqpMessage.get_BodySectionOffset()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpMessage.AllInstances.BodySectionOffsetSetInt64">
            <summary>Sets the shim of AmqpMessage.set_BodySectionOffset(Int64 value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpMessage.AllInstances.BodyStreamGet">
            <summary>Sets the shim of AmqpMessage.get_BodyStream()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpMessage.AllInstances.BodyStreamSetStream">
            <summary>Sets the shim of AmqpMessage.set_BodyStream(Stream value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpMessage.AllInstances.BodyTypeGet">
            <summary>Sets the shim of AmqpMessage.get_BodyType()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpMessage.AllInstances.Clone">
            <summary>Sets the shim of AmqpMessage.Clone()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpMessage.AllInstances.DataBodyGet">
            <summary>Sets the shim of AmqpMessage.get_DataBody()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpMessage.AllInstances.DataBodySetIEnumerableOfData">
            <summary>Sets the shim of AmqpMessage.set_DataBody(IEnumerable`1&lt;Data&gt; value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpMessage.AllInstances.DeliveryAnnotationsGet">
            <summary>Sets the shim of AmqpMessage.get_DeliveryAnnotations()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpMessage.AllInstances.DeliveryAnnotationsSetDeliveryAnnotations">
            <summary>Sets the shim of AmqpMessage.set_DeliveryAnnotations(DeliveryAnnotations value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpMessage.AllInstances.DeserializeSectionFlag">
            <summary>Sets the shim of AmqpMessage.Deserialize(SectionFlag desiredSections)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpMessage.AllInstances.DisposeBoolean">
            <summary>Sets the shim of AmqpMessage.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpMessage.AllInstances.EncodeSectionByteBufferIAmqpSerializable">
            <summary>Sets the shim of AmqpMessage.EncodeSection(ByteBuffer buffer, IAmqpSerializable section)</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.ShimAmqpMessage.AllInstances.EnsureInitializedOf1M0RefSectionFlag``1(Microsoft.QualityTools.Testing.Fakes.Delegates.MicrosoftAzureAmqpDelegates.Ref1Action3{Microsoft.Azure.Amqp.AmqpMessage,``0,Microsoft.Azure.Amqp.SectionFlag})">
            <summary>Sets the shim of AmqpMessage.EnsureInitialized(!!0&amp; obj, SectionFlag section)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpMessage.AllInstances.FooterGet">
            <summary>Sets the shim of AmqpMessage.get_Footer()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpMessage.AllInstances.FooterSetFooter">
            <summary>Sets the shim of AmqpMessage.set_Footer(Footer value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpMessage.AllInstances.GetBodySectionStream">
            <summary>Sets the shim of AmqpMessage.GetBodySectionStream()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpMessage.AllInstances.GetNonBodySectionsStream">
            <summary>Sets the shim of AmqpMessage.GetNonBodySectionsStream()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpMessage.AllInstances.GetPayload">
            <summary>Sets the shim of AmqpMessage.GetPayload()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpMessage.AllInstances.GetSectionSizeIAmqpSerializable">
            <summary>Sets the shim of AmqpMessage.GetSectionSize(IAmqpSerializable section)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpMessage.AllInstances.HeaderGet">
            <summary>Sets the shim of AmqpMessage.get_Header()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpMessage.AllInstances.HeaderSetHeader">
            <summary>Sets the shim of AmqpMessage.set_Header(Header value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpMessage.AllInstances.MessageAnnotationsGet">
            <summary>Sets the shim of AmqpMessage.get_MessageAnnotations()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpMessage.AllInstances.MessageAnnotationsSetMessageAnnotations">
            <summary>Sets the shim of AmqpMessage.set_MessageAnnotations(MessageAnnotations value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpMessage.AllInstances.ModifyModified">
            <summary>Sets the shim of AmqpMessage.Modify(Modified modified)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpMessage.AllInstances.PropertiesGet">
            <summary>Sets the shim of AmqpMessage.get_Properties()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpMessage.AllInstances.PropertiesSetProperties">
            <summary>Sets the shim of AmqpMessage.set_Properties(Properties value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpMessage.AllInstances.SectionsGet">
            <summary>Sets the shim of AmqpMessage.get_Sections()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpMessage.AllInstances.SequenceBodyGet">
            <summary>Sets the shim of AmqpMessage.get_SequenceBody()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpMessage.AllInstances.SequenceBodySetIEnumerableOfAmqpSequence">
            <summary>Sets the shim of AmqpMessage.set_SequenceBody(IEnumerable`1&lt;AmqpSequence&gt; value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpMessage.AllInstances.ThrowIfDisposed">
            <summary>Sets the shim of AmqpMessage.ThrowIfDisposed()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpMessage.AllInstances.ToStream">
            <summary>Sets the shim of AmqpMessage.ToStream()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpMessage.AllInstances.UpdateSectionFlagBooleanSectionFlag">
            <summary>Sets the shim of AmqpMessage.UpdateSectionFlag(Boolean set, SectionFlag flag)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpMessage.AllInstances.ValueBodyGet">
            <summary>Sets the shim of AmqpMessage.get_ValueBody()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpMessage.AllInstances.ValueBodySetAmqpValue">
            <summary>Sets the shim of AmqpMessage.set_ValueBody(AmqpValue value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpMessage.AllInstances.WriteXmlWriter">
            <summary>Sets the shim of AmqpMessage.Write(XmlWriter writer)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpMessage.ApplicationPropertiesGet">
            <summary>Sets the shim of AmqpMessage.get_ApplicationProperties()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpMessage.ApplicationPropertiesSetApplicationProperties">
            <summary>Sets the shim of AmqpMessage.set_ApplicationProperties(ApplicationProperties value)</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.ShimAmqpMessage.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.ShimAmqpMessage.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpMessage.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.ShimAmqpMessage.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpMessage.BodySectionLengthGet">
            <summary>Sets the shim of AmqpMessage.get_BodySectionLength()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpMessage.BodySectionLengthSetInt64">
            <summary>Sets the shim of AmqpMessage.set_BodySectionLength(Int64 value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpMessage.BodySectionOffsetGet">
            <summary>Sets the shim of AmqpMessage.get_BodySectionOffset()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpMessage.BodySectionOffsetSetInt64">
            <summary>Sets the shim of AmqpMessage.set_BodySectionOffset(Int64 value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpMessage.BodyStreamGet">
            <summary>Sets the shim of AmqpMessage.get_BodyStream()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpMessage.BodyStreamSetStream">
            <summary>Sets the shim of AmqpMessage.set_BodyStream(Stream value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpMessage.BodyTypeGet">
            <summary>Sets the shim of AmqpMessage.get_BodyType()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpMessage.Clone">
            <summary>Sets the shim of AmqpMessage.Clone()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpMessage.Constructor">
            <summary>Sets the shim of AmqpMessage.AmqpMessage()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpMessage.Create">
            <summary>Sets the shim of AmqpMessage.Create()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpMessage.CreateAmqpStreamMessageBodyStream">
            <summary>Sets the shim of AmqpMessage.CreateAmqpStreamMessageBody(Stream bodyStream)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpMessage.CreateAmqpStreamMessageBufferListStream">
            <summary>Sets the shim of AmqpMessage.CreateAmqpStreamMessage(BufferListStream messageStream)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpMessage.CreateAmqpStreamMessageBufferListStreamBoolean">
            <summary>Sets the shim of AmqpMessage.CreateAmqpStreamMessage(BufferListStream messagerStream, Boolean payloadInitialized)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpMessage.CreateAmqpStreamMessageHeaderBufferListStream">
            <summary>Sets the shim of AmqpMessage.CreateAmqpStreamMessageHeader(BufferListStream nonBodyStream)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpMessage.CreateAmqpStreamMessageStreamStreamBoolean">
            <summary>Sets the shim of AmqpMessage.CreateAmqpStreamMessage(Stream nonBodyStream, Stream bodyStream, Boolean forceCopyStream)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpMessage.CreateAmqpValue">
            <summary>Sets the shim of AmqpMessage.Create(AmqpValue value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpMessage.CreateData">
            <summary>Sets the shim of AmqpMessage.Create(Data data)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpMessage.CreateIEnumerableOfAmqpSequence">
            <summary>Sets the shim of AmqpMessage.Create(IEnumerable`1&lt;AmqpSequence&gt; amqpSequence)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpMessage.CreateIEnumerableOfData">
            <summary>Sets the shim of AmqpMessage.Create(IEnumerable`1&lt;Data&gt; dataList)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpMessage.CreateInputMessageBufferListStream">
            <summary>Sets the shim of AmqpMessage.CreateInputMessage(BufferListStream stream)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpMessage.CreateOutputMessageBufferListStreamBoolean">
            <summary>Sets the shim of AmqpMessage.CreateOutputMessage(BufferListStream stream, Boolean ownStream)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpMessage.CreateReceivedMessage">
            <summary>Sets the shim of AmqpMessage.CreateReceivedMessage()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpMessage.CreateStreamBoolean">
            <summary>Sets the shim of AmqpMessage.Create(Stream stream, Boolean ownStream)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpMessage.DataBodyGet">
            <summary>Sets the shim of AmqpMessage.get_DataBody()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpMessage.DataBodySetIEnumerableOfData">
            <summary>Sets the shim of AmqpMessage.set_DataBody(IEnumerable`1&lt;Data&gt; value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpMessage.DeliveryAnnotationsGet">
            <summary>Sets the shim of AmqpMessage.get_DeliveryAnnotations()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpMessage.DeliveryAnnotationsSetDeliveryAnnotations">
            <summary>Sets the shim of AmqpMessage.set_DeliveryAnnotations(DeliveryAnnotations value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpMessage.DeserializeSectionFlag">
            <summary>Sets the shim of AmqpMessage.Deserialize(SectionFlag desiredSections)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpMessage.DisposeBoolean">
            <summary>Sets the shim of AmqpMessage.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpMessage.EncodeSectionByteBufferIAmqpSerializable">
            <summary>Sets the shim of AmqpMessage.EncodeSection(ByteBuffer buffer, IAmqpSerializable section)</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.ShimAmqpMessage.EnsureInitializedOf1M0Ref``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.RefFunc{``0,System.Boolean})">
            <summary>Sets the shim of AmqpMessage.EnsureInitialized(!!0&amp; obj)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpMessage.FooterGet">
            <summary>Sets the shim of AmqpMessage.get_Footer()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpMessage.FooterSetFooter">
            <summary>Sets the shim of AmqpMessage.set_Footer(Footer value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpMessage.GetBodySectionStream">
            <summary>Sets the shim of AmqpMessage.GetBodySectionStream()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpMessage.GetNonBodySectionsStream">
            <summary>Sets the shim of AmqpMessage.GetNonBodySectionsStream()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpMessage.GetPayload">
            <summary>Sets the shim of AmqpMessage.GetPayload()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpMessage.GetSectionSizeIAmqpSerializable">
            <summary>Sets the shim of AmqpMessage.GetSectionSize(IAmqpSerializable section)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpMessage.HeaderGet">
            <summary>Sets the shim of AmqpMessage.get_Header()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpMessage.HeaderSetHeader">
            <summary>Sets the shim of AmqpMessage.set_Header(Header value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpMessage.MessageAnnotationsGet">
            <summary>Sets the shim of AmqpMessage.get_MessageAnnotations()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpMessage.MessageAnnotationsSetMessageAnnotations">
            <summary>Sets the shim of AmqpMessage.set_MessageAnnotations(MessageAnnotations value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpMessage.ModifyModified">
            <summary>Sets the shim of AmqpMessage.Modify(Modified modified)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpMessage.PropertiesGet">
            <summary>Sets the shim of AmqpMessage.get_Properties()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpMessage.PropertiesSetProperties">
            <summary>Sets the shim of AmqpMessage.set_Properties(Properties value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpMessage.SectionsGet">
            <summary>Sets the shim of AmqpMessage.get_Sections()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpMessage.SequenceBodyGet">
            <summary>Sets the shim of AmqpMessage.get_SequenceBody()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpMessage.SequenceBodySetIEnumerableOfAmqpSequence">
            <summary>Sets the shim of AmqpMessage.set_SequenceBody(IEnumerable`1&lt;AmqpSequence&gt; value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpMessage.ThrowIfDisposed">
            <summary>Sets the shim of AmqpMessage.ThrowIfDisposed()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpMessage.ToStream">
            <summary>Sets the shim of AmqpMessage.ToStream()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpMessage.UpdateSectionFlagBooleanSectionFlag">
            <summary>Sets the shim of AmqpMessage.UpdateSectionFlag(Boolean set, SectionFlag flag)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpMessage.ValueBodyGet">
            <summary>Sets the shim of AmqpMessage.get_ValueBody()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpMessage.ValueBodySetAmqpValue">
            <summary>Sets the shim of AmqpMessage.set_ValueBody(AmqpValue value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpMessage.WriteXmlWriter">
            <summary>Sets the shim of AmqpMessage.Write(XmlWriter writer)</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Fakes.ShimAmqpObject">
            <summary>Shim type of Microsoft.Azure.Amqp.AmqpObject</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.ShimAmqpObject.#ctor(Microsoft.Azure.Amqp.AmqpObject)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpObject.Abort">
            <summary>Sets the shim of AmqpObject.Abort()</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Fakes.ShimAmqpObject.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpObject.AllInstances.Abort">
            <summary>Sets the shim of AmqpObject.Abort()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpObject.AllInstances.BeginCloseTimeSpanAsyncCallbackObject">
            <summary>Sets the shim of AmqpObject.BeginClose(TimeSpan timeout, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpObject.AllInstances.BeginOpenTimeSpanAsyncCallbackObject">
            <summary>Sets the shim of AmqpObject.BeginOpen(TimeSpan timeout, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpObject.AllInstances.Close">
            <summary>Sets the shim of AmqpObject.Close()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpObject.AllInstances.CloseAsyncTimeSpan">
            <summary>Sets the shim of AmqpObject.CloseAsync(TimeSpan timeout)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpObject.AllInstances.CloseTimeSpan">
            <summary>Sets the shim of AmqpObject.Close(TimeSpan timeout)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpObject.AllInstances.ClosedAddEventHandler">
            <summary>Sets the shim of AmqpObject.add_Closed(EventHandler value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpObject.AllInstances.ClosedRemoveEventHandler">
            <summary>Sets the shim of AmqpObject.remove_Closed(EventHandler value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpObject.AllInstances.CompleteCloseBooleanException">
            <summary>Sets the shim of AmqpObject.CompleteClose(Boolean syncComplete, Exception exception)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpObject.AllInstances.CompleteOpenBooleanException">
            <summary>Sets the shim of AmqpObject.CompleteOpen(Boolean syncComplete, Exception exception)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpObject.AllInstances.DefaultCloseTimeoutGet">
            <summary>Sets the shim of AmqpObject.get_DefaultCloseTimeout()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpObject.AllInstances.DefaultCloseTimeoutSetTimeSpan">
            <summary>Sets the shim of AmqpObject.set_DefaultCloseTimeout(TimeSpan value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpObject.AllInstances.DefaultOpenTimeoutGet">
            <summary>Sets the shim of AmqpObject.get_DefaultOpenTimeout()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpObject.AllInstances.DefaultOpenTimeoutSetTimeSpan">
            <summary>Sets the shim of AmqpObject.set_DefaultOpenTimeout(TimeSpan value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpObject.AllInstances.EndCloseIAsyncResult">
            <summary>Sets the shim of AmqpObject.EndClose(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpObject.AllInstances.EndOpenIAsyncResult">
            <summary>Sets the shim of AmqpObject.EndOpen(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpObject.AllInstances.FindMutualCapabilitesMultipleOfAmqpSymbolMultipleOfAmqpSymbol">
            <summary>Sets the shim of AmqpObject.FindMutualCapabilites(Multiple`1&lt;AmqpSymbol&gt; desired, Multiple`1&lt;AmqpSymbol&gt; offered)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpObject.AllInstances.IdentifierGet">
            <summary>Sets the shim of AmqpObject.get_Identifier()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpObject.AllInstances.IsClosing">
            <summary>Sets the shim of AmqpObject.IsClosing()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpObject.AllInstances.MutualCapabilitiesGet">
            <summary>Sets the shim of AmqpObject.get_MutualCapabilities()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpObject.AllInstances.NotifyClosed">
            <summary>Sets the shim of AmqpObject.NotifyClosed()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpObject.AllInstances.NotifyOpened">
            <summary>Sets the shim of AmqpObject.NotifyOpened()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpObject.AllInstances.NotifyOpeningPerformative">
            <summary>Sets the shim of AmqpObject.NotifyOpening(Performative command)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpObject.AllInstances.OnCloseTimeSpan">
            <summary>Sets the shim of AmqpObject.OnClose(TimeSpan timeout)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpObject.AllInstances.OnOpenTimeSpan">
            <summary>Sets the shim of AmqpObject.OnOpen(TimeSpan timeout)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpObject.AllInstances.OnReceiveCloseCommandStringError">
            <summary>Sets the shim of AmqpObject.OnReceiveCloseCommand(String command, Error error)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpObject.AllInstances.Open">
            <summary>Sets the shim of AmqpObject.Open()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpObject.AllInstances.OpenAsyncTimeSpan">
            <summary>Sets the shim of AmqpObject.OpenAsync(TimeSpan timeout)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpObject.AllInstances.OpenTimeSpan">
            <summary>Sets the shim of AmqpObject.Open(TimeSpan timeout)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpObject.AllInstances.OpenedAddEventHandler">
            <summary>Sets the shim of AmqpObject.add_Opened(EventHandler value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpObject.AllInstances.OpenedRemoveEventHandler">
            <summary>Sets the shim of AmqpObject.remove_Opened(EventHandler value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpObject.AllInstances.OpeningAddEventHandlerOfOpenEventArgs">
            <summary>Sets the shim of AmqpObject.add_Opening(EventHandler`1&lt;OpenEventArgs&gt; value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpObject.AllInstances.OpeningRemoveEventHandlerOfOpenEventArgs">
            <summary>Sets the shim of AmqpObject.remove_Opening(EventHandler`1&lt;OpenEventArgs&gt; value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpObject.AllInstances.SafeAddClosedEventHandler">
            <summary>Sets the shim of AmqpObject.SafeAddClosed(EventHandler handler)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpObject.AllInstances.SafeClose">
            <summary>Sets the shim of AmqpObject.SafeClose()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpObject.AllInstances.SafeCloseException">
            <summary>Sets the shim of AmqpObject.SafeClose(Exception exception)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpObject.AllInstances.SetNameString">
            <summary>Sets the shim of AmqpObject.SetName(String name)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpObject.AllInstances.StateGet">
            <summary>Sets the shim of AmqpObject.get_State()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpObject.AllInstances.StateSetAmqpObjectState">
            <summary>Sets the shim of AmqpObject.set_State(AmqpObjectState value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpObject.AllInstances.TerminalExceptionGet">
            <summary>Sets the shim of AmqpObject.get_TerminalException()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpObject.AllInstances.TerminalExceptionSetException">
            <summary>Sets the shim of AmqpObject.set_TerminalException(Exception value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpObject.AllInstances.ThisLockGet">
            <summary>Sets the shim of AmqpObject.get_ThisLock()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpObject.AllInstances.ToString01">
            <summary>Sets the shim of AmqpObject.ToString()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpObject.AllInstances.TransitStateStringStateTransitionArray">
            <summary>Sets the shim of AmqpObject.TransitState(String operation, StateTransition[] states)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpObject.BeginCloseTimeSpanAsyncCallbackObject">
            <summary>Sets the shim of AmqpObject.BeginClose(TimeSpan timeout, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpObject.BeginOpenTimeSpanAsyncCallbackObject">
            <summary>Sets the shim of AmqpObject.BeginOpen(TimeSpan timeout, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.ShimAmqpObject.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.ShimAmqpObject.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpObject.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpObject.Close">
            <summary>Sets the shim of AmqpObject.Close()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpObject.CloseAsyncTimeSpan">
            <summary>Sets the shim of AmqpObject.CloseAsync(TimeSpan timeout)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpObject.CloseTimeSpan">
            <summary>Sets the shim of AmqpObject.Close(TimeSpan timeout)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpObject.ClosedAddEventHandler">
            <summary>Sets the shim of AmqpObject.add_Closed(EventHandler value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpObject.ClosedRemoveEventHandler">
            <summary>Sets the shim of AmqpObject.remove_Closed(EventHandler value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpObject.CompleteCloseBooleanException">
            <summary>Sets the shim of AmqpObject.CompleteClose(Boolean syncComplete, Exception exception)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpObject.CompleteOpenBooleanException">
            <summary>Sets the shim of AmqpObject.CompleteOpen(Boolean syncComplete, Exception exception)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpObject.ConstructorString">
            <summary>Sets the shim of AmqpObject.AmqpObject(String type)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpObject.ConstructorStringSequenceNumber">
            <summary>Sets the shim of AmqpObject.AmqpObject(String type, SequenceNumber identifier)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpObject.DefaultCloseTimeoutGet">
            <summary>Sets the shim of AmqpObject.get_DefaultCloseTimeout()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpObject.DefaultCloseTimeoutSetTimeSpan">
            <summary>Sets the shim of AmqpObject.set_DefaultCloseTimeout(TimeSpan value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpObject.DefaultOpenTimeoutGet">
            <summary>Sets the shim of AmqpObject.get_DefaultOpenTimeout()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpObject.DefaultOpenTimeoutSetTimeSpan">
            <summary>Sets the shim of AmqpObject.set_DefaultOpenTimeout(TimeSpan value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpObject.EndCloseIAsyncResult">
            <summary>Sets the shim of AmqpObject.EndClose(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpObject.EndOpenIAsyncResult">
            <summary>Sets the shim of AmqpObject.EndOpen(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpObject.FindMutualCapabilitesMultipleOfAmqpSymbolMultipleOfAmqpSymbol">
            <summary>Sets the shim of AmqpObject.FindMutualCapabilites(Multiple`1&lt;AmqpSymbol&gt; desired, Multiple`1&lt;AmqpSymbol&gt; offered)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpObject.IdentifierGet">
            <summary>Sets the shim of AmqpObject.get_Identifier()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpObject.IsClosing">
            <summary>Sets the shim of AmqpObject.IsClosing()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpObject.MutualCapabilitiesGet">
            <summary>Sets the shim of AmqpObject.get_MutualCapabilities()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpObject.NotifyClosed">
            <summary>Sets the shim of AmqpObject.NotifyClosed()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpObject.NotifyOpened">
            <summary>Sets the shim of AmqpObject.NotifyOpened()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpObject.NotifyOpeningPerformative">
            <summary>Sets the shim of AmqpObject.NotifyOpening(Performative command)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpObject.OnCloseTimeSpan">
            <summary>Sets the shim of AmqpObject.OnClose(TimeSpan timeout)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpObject.OnOpenTimeSpan">
            <summary>Sets the shim of AmqpObject.OnOpen(TimeSpan timeout)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpObject.OnReceiveCloseCommandStringError">
            <summary>Sets the shim of AmqpObject.OnReceiveCloseCommand(String command, Error error)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpObject.OnSafeCloseCompleteIAsyncResult">
            <summary>Sets the shim of AmqpObject.OnSafeCloseComplete(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpObject.Open">
            <summary>Sets the shim of AmqpObject.Open()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpObject.OpenAsyncTimeSpan">
            <summary>Sets the shim of AmqpObject.OpenAsync(TimeSpan timeout)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpObject.OpenTimeSpan">
            <summary>Sets the shim of AmqpObject.Open(TimeSpan timeout)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpObject.OpenedAddEventHandler">
            <summary>Sets the shim of AmqpObject.add_Opened(EventHandler value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpObject.OpenedRemoveEventHandler">
            <summary>Sets the shim of AmqpObject.remove_Opened(EventHandler value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpObject.OpeningAddEventHandlerOfOpenEventArgs">
            <summary>Sets the shim of AmqpObject.add_Opening(EventHandler`1&lt;OpenEventArgs&gt; value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpObject.OpeningRemoveEventHandlerOfOpenEventArgs">
            <summary>Sets the shim of AmqpObject.remove_Opening(EventHandler`1&lt;OpenEventArgs&gt; value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpObject.SafeAddClosedEventHandler">
            <summary>Sets the shim of AmqpObject.SafeAddClosed(EventHandler handler)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpObject.SafeClose">
            <summary>Sets the shim of AmqpObject.SafeClose()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpObject.SafeCloseException">
            <summary>Sets the shim of AmqpObject.SafeClose(Exception exception)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpObject.SetNameString">
            <summary>Sets the shim of AmqpObject.SetName(String name)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpObject.StateGet">
            <summary>Sets the shim of AmqpObject.get_State()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpObject.StateSetAmqpObjectState">
            <summary>Sets the shim of AmqpObject.set_State(AmqpObjectState value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpObject.StaticConstructor">
            <summary>Sets the shim of AmqpObject.AmqpObject()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpObject.TerminalExceptionGet">
            <summary>Sets the shim of AmqpObject.get_TerminalException()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpObject.TerminalExceptionSetException">
            <summary>Sets the shim of AmqpObject.set_TerminalException(Exception value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpObject.ThisLockGet">
            <summary>Sets the shim of AmqpObject.get_ThisLock()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpObject.ToString">
            <summary>Sets the shim of AmqpObject.ToString()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpObject.TransitStateStringStateTransitionArray">
            <summary>Sets the shim of AmqpObject.TransitState(String operation, StateTransition[] states)</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Fakes.ShimAmqpSession">
            <summary>Shim type of Microsoft.Azure.Amqp.AmqpSession</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.ShimAmqpSession.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.ShimAmqpSession.#ctor(Microsoft.Azure.Amqp.AmqpSession)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpSession.AbortInternal">
            <summary>Sets the shim of AmqpSession.AbortInternal()</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Fakes.ShimAmqpSession.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpSession.AllInstances.AbortInternal">
            <summary>Sets the shim of AmqpSession.AbortInternal()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpSession.AllInstances.AttachLinkAmqpLink">
            <summary>Sets the shim of AmqpSession.AttachLink(AmqpLink link)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpSession.AllInstances.CachedRemoteChannelGet">
            <summary>Sets the shim of AmqpSession.get_CachedRemoteChannel()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpSession.AllInstances.CloseInternal">
            <summary>Sets the shim of AmqpSession.CloseInternal()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpSession.AllInstances.CloseLinksBoolean">
            <summary>Sets the shim of AmqpSession.CloseLinks(Boolean abort)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpSession.AllInstances.ConnectionGet">
            <summary>Sets the shim of AmqpSession.get_Connection()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpSession.AllInstances.DisposeDeliveryAmqpLinkDeliveryBooleanDeliveryStateBoolean">
            <summary>Sets the shim of AmqpSession.DisposeDelivery(AmqpLink link, Delivery delivery, Boolean settled, DeliveryState state, Boolean noFlush)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpSession.AllInstances.Flush">
            <summary>Sets the shim of AmqpSession.Flush()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpSession.AllInstances.LinkFactoryGet">
            <summary>Sets the shim of AmqpSession.get_LinkFactory()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpSession.AllInstances.LinkFrameAllowed">
            <summary>Sets the shim of AmqpSession.LinkFrameAllowed()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpSession.AllInstances.LinksByRemoteHandleGet">
            <summary>Sets the shim of AmqpSession.get_LinksByRemoteHandle()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpSession.AllInstances.LinksGet">
            <summary>Sets the shim of AmqpSession.get_Links()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpSession.AllInstances.LocalChannelGet">
            <summary>Sets the shim of AmqpSession.get_LocalChannel()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpSession.AllInstances.LocalChannelSetUInt16">
            <summary>Sets the shim of AmqpSession.set_LocalChannel(UInt16 value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpSession.AllInstances.NegotiateBegin">
            <summary>Sets the shim of AmqpSession.Negotiate(Begin begin)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpSession.AllInstances.NotifyCreditAvailableInt32">
            <summary>Sets the shim of AmqpSession.NotifyCreditAvailable(Int32 credit)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpSession.AllInstances.OnAcceptTransferDeliveryTransferBoolean">
            <summary>Sets the shim of AmqpSession.OnAcceptTransfer(Delivery delivery, Transfer transfer, Boolean newDelivery)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpSession.AllInstances.OnIoEventIoEvent">
            <summary>Sets the shim of AmqpSession.OnIoEvent(IoEvent ioEvent)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpSession.AllInstances.OnReceiveBeginBegin">
            <summary>Sets the shim of AmqpSession.OnReceiveBegin(Begin begin)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpSession.AllInstances.OnReceiveDispositionDisposition">
            <summary>Sets the shim of AmqpSession.OnReceiveDisposition(Disposition disposition)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpSession.AllInstances.OnReceiveFlowFlow">
            <summary>Sets the shim of AmqpSession.OnReceiveFlow(Flow flow)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpSession.AllInstances.OnReceiveLinkFrameFrame">
            <summary>Sets the shim of AmqpSession.OnReceiveLinkFrame(Frame frame)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpSession.AllInstances.OpenInternal">
            <summary>Sets the shim of AmqpSession.OpenInternal()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpSession.AllInstances.ProcessFrameFrame">
            <summary>Sets the shim of AmqpSession.ProcessFrame(Frame frame)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpSession.AllInstances.RemoteChannelGet">
            <summary>Sets the shim of AmqpSession.get_RemoteChannel()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpSession.AllInstances.RemoteChannelSetNullableOfUInt16">
            <summary>Sets the shim of AmqpSession.set_RemoteChannel(Nullable`1&lt;UInt16&gt; value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpSession.AllInstances.SendBegin">
            <summary>Sets the shim of AmqpSession.SendBegin()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpSession.AllInstances.SendCommandPerformative">
            <summary>Sets the shim of AmqpSession.SendCommand(Performative command)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpSession.AllInstances.SendCommandPerformativeArraySegmentOfByteArray">
            <summary>Sets the shim of AmqpSession.SendCommand(Performative command, ArraySegment`1&lt;Byte&gt;[] payload)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpSession.AllInstances.SendEnd">
            <summary>Sets the shim of AmqpSession.SendEnd()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpSession.AllInstances.SendFlow">
            <summary>Sets the shim of AmqpSession.SendFlow()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpSession.AllInstances.SendFlowFlow">
            <summary>Sets the shim of AmqpSession.SendFlow(Flow flow)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpSession.AllInstances.SettingsGet">
            <summary>Sets the shim of AmqpSession.get_Settings()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpSession.AllInstances.TryCreateRemoteLinkAttachAmqpLinkOut">
            <summary>Sets the shim of AmqpSession.TryCreateRemoteLink(Attach attach, AmqpLink&amp; link)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpSession.AllInstances.TrySendTransferDeliveryTransferArraySegmentOfByteArray">
            <summary>Sets the shim of AmqpSession.TrySendTransfer(Delivery delivery, Transfer transfer, ArraySegment`1&lt;Byte&gt;[] payload)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpSession.AllInstances.UpdateHandleTableBegin">
            <summary>Sets the shim of AmqpSession.UpdateHandleTable(Begin begin)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpSession.AttachLinkAmqpLink">
            <summary>Sets the shim of AmqpSession.AttachLink(AmqpLink link)</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.ShimAmqpSession.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.ShimAmqpSession.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpSession.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpSession.CachedRemoteChannelGet">
            <summary>Sets the shim of AmqpSession.get_CachedRemoteChannel()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpSession.CloseInternal">
            <summary>Sets the shim of AmqpSession.CloseInternal()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpSession.CloseLinksBoolean">
            <summary>Sets the shim of AmqpSession.CloseLinks(Boolean abort)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpSession.ConnectionGet">
            <summary>Sets the shim of AmqpSession.get_Connection()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpSession.ConstructorAmqpConnectionAmqpSessionSettingsILinkFactory">
            <summary>Sets the shim of AmqpSession.AmqpSession(AmqpConnection connection, AmqpSessionSettings settings, ILinkFactory linkFactory)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpSession.ConstructorStringAmqpConnectionAmqpSessionSettingsILinkFactory">
            <summary>Sets the shim of AmqpSession.AmqpSession(String type, AmqpConnection connection, AmqpSessionSettings settings, ILinkFactory linkFactory)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpSession.DisposeDeliveryAmqpLinkDeliveryBooleanDeliveryStateBoolean">
            <summary>Sets the shim of AmqpSession.DisposeDelivery(AmqpLink link, Delivery delivery, Boolean settled, DeliveryState state, Boolean noFlush)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpSession.Flush">
            <summary>Sets the shim of AmqpSession.Flush()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpSession.LinkFactoryGet">
            <summary>Sets the shim of AmqpSession.get_LinkFactory()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpSession.LinkFrameAllowed">
            <summary>Sets the shim of AmqpSession.LinkFrameAllowed()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpSession.LinksByRemoteHandleGet">
            <summary>Sets the shim of AmqpSession.get_LinksByRemoteHandle()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpSession.LinksGet">
            <summary>Sets the shim of AmqpSession.get_Links()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpSession.LocalChannelGet">
            <summary>Sets the shim of AmqpSession.get_LocalChannel()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpSession.LocalChannelSetUInt16">
            <summary>Sets the shim of AmqpSession.set_LocalChannel(UInt16 value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpSession.NegotiateBegin">
            <summary>Sets the shim of AmqpSession.Negotiate(Begin begin)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpSession.NotifyCreditAvailableInt32">
            <summary>Sets the shim of AmqpSession.NotifyCreditAvailable(Int32 credit)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpSession.OnAcceptTransferDeliveryTransferBoolean">
            <summary>Sets the shim of AmqpSession.OnAcceptTransfer(Delivery delivery, Transfer transfer, Boolean newDelivery)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpSession.OnIoEventIoEvent">
            <summary>Sets the shim of AmqpSession.OnIoEvent(IoEvent ioEvent)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpSession.OnLinkClosedObjectEventArgs">
            <summary>Sets the shim of AmqpSession.OnLinkClosed(Object sender, EventArgs e)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpSession.OnReceiveBeginBegin">
            <summary>Sets the shim of AmqpSession.OnReceiveBegin(Begin begin)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpSession.OnReceiveDispositionDisposition">
            <summary>Sets the shim of AmqpSession.OnReceiveDisposition(Disposition disposition)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpSession.OnReceiveFlowFlow">
            <summary>Sets the shim of AmqpSession.OnReceiveFlow(Flow flow)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpSession.OnReceiveLinkFrameFrame">
            <summary>Sets the shim of AmqpSession.OnReceiveLinkFrame(Frame frame)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpSession.OpenInternal">
            <summary>Sets the shim of AmqpSession.OpenInternal()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpSession.ProcessFrameFrame">
            <summary>Sets the shim of AmqpSession.ProcessFrame(Frame frame)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpSession.RemoteChannelGet">
            <summary>Sets the shim of AmqpSession.get_RemoteChannel()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpSession.RemoteChannelSetNullableOfUInt16">
            <summary>Sets the shim of AmqpSession.set_RemoteChannel(Nullable`1&lt;UInt16&gt; value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpSession.SendBegin">
            <summary>Sets the shim of AmqpSession.SendBegin()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpSession.SendCommandPerformative">
            <summary>Sets the shim of AmqpSession.SendCommand(Performative command)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpSession.SendCommandPerformativeArraySegmentOfByteArray">
            <summary>Sets the shim of AmqpSession.SendCommand(Performative command, ArraySegment`1&lt;Byte&gt;[] payload)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpSession.SendEnd">
            <summary>Sets the shim of AmqpSession.SendEnd()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpSession.SendFlow">
            <summary>Sets the shim of AmqpSession.SendFlow()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpSession.SendFlowFlow">
            <summary>Sets the shim of AmqpSession.SendFlow(Flow flow)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpSession.SettingsGet">
            <summary>Sets the shim of AmqpSession.get_Settings()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpSession.StaticConstructor">
            <summary>Sets the shim of AmqpSession.AmqpSession()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpSession.TryCreateRemoteLinkAttachAmqpLinkOut">
            <summary>Sets the shim of AmqpSession.TryCreateRemoteLink(Attach attach, AmqpLink&amp; link)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpSession.TrySendTransferDeliveryTransferArraySegmentOfByteArray">
            <summary>Sets the shim of AmqpSession.TrySendTransfer(Delivery delivery, Transfer transfer, ArraySegment`1&lt;Byte&gt;[] payload)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpSession.UpdateHandleTableBegin">
            <summary>Sets the shim of AmqpSession.UpdateHandleTable(Begin begin)</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Fakes.ShimAmqpSessionSettings">
            <summary>Shim type of Microsoft.Azure.Amqp.AmqpSessionSettings</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.ShimAmqpSessionSettings.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.ShimAmqpSessionSettings.#ctor(Microsoft.Azure.Amqp.AmqpSessionSettings)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Fakes.ShimAmqpSessionSettings.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpSessionSettings.AllInstances.Clone">
            <summary>Sets the shim of AmqpSessionSettings.Clone()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpSessionSettings.AllInstances.DispositionIntervalGet">
            <summary>Sets the shim of AmqpSessionSettings.get_DispositionInterval()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpSessionSettings.AllInstances.DispositionIntervalSetTimeSpan">
            <summary>Sets the shim of AmqpSessionSettings.set_DispositionInterval(TimeSpan value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpSessionSettings.AllInstances.DispositionThresholdGet">
            <summary>Sets the shim of AmqpSessionSettings.get_DispositionThreshold()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpSessionSettings.AllInstances.DispositionThresholdSetInt32">
            <summary>Sets the shim of AmqpSessionSettings.set_DispositionThreshold(Int32 value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpSessionSettings.AllInstances.IgnoreMissingLinksGet">
            <summary>Sets the shim of AmqpSessionSettings.get_IgnoreMissingLinks()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpSessionSettings.AllInstances.IgnoreMissingLinksSetBoolean">
            <summary>Sets the shim of AmqpSessionSettings.set_IgnoreMissingLinks(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpSessionSettings.AllInstances.InitialDeliveryIdGet">
            <summary>Sets the shim of AmqpSessionSettings.get_InitialDeliveryId()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpSessionSettings.AllInstances.InitialDeliveryIdSetSequenceNumber">
            <summary>Sets the shim of AmqpSessionSettings.set_InitialDeliveryId(SequenceNumber value)</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.ShimAmqpSessionSettings.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.ShimAmqpSessionSettings.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpSessionSettings.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.ShimAmqpSessionSettings.Bind(Microsoft.Azure.Amqp.Encoding.IAmqpSerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpSessionSettings.Clone">
            <summary>Sets the shim of AmqpSessionSettings.Clone()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpSessionSettings.Constructor">
            <summary>Sets the shim of AmqpSessionSettings.AmqpSessionSettings()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpSessionSettings.CreateBegin">
            <summary>Sets the shim of AmqpSessionSettings.Create(Begin begin)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpSessionSettings.DispositionIntervalGet">
            <summary>Sets the shim of AmqpSessionSettings.get_DispositionInterval()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpSessionSettings.DispositionIntervalSetTimeSpan">
            <summary>Sets the shim of AmqpSessionSettings.set_DispositionInterval(TimeSpan value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpSessionSettings.DispositionThresholdGet">
            <summary>Sets the shim of AmqpSessionSettings.get_DispositionThreshold()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpSessionSettings.DispositionThresholdSetInt32">
            <summary>Sets the shim of AmqpSessionSettings.set_DispositionThreshold(Int32 value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpSessionSettings.IgnoreMissingLinksGet">
            <summary>Sets the shim of AmqpSessionSettings.get_IgnoreMissingLinks()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpSessionSettings.IgnoreMissingLinksSetBoolean">
            <summary>Sets the shim of AmqpSessionSettings.set_IgnoreMissingLinks(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpSessionSettings.InitialDeliveryIdGet">
            <summary>Sets the shim of AmqpSessionSettings.get_InitialDeliveryId()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpSessionSettings.InitialDeliveryIdSetSequenceNumber">
            <summary>Sets the shim of AmqpSessionSettings.set_InitialDeliveryId(SequenceNumber value)</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Fakes.ShimAmqpSettings">
            <summary>Shim type of Microsoft.Azure.Amqp.AmqpSettings</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.ShimAmqpSettings.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.ShimAmqpSettings.#ctor(Microsoft.Azure.Amqp.AmqpSettings)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Fakes.ShimAmqpSettings.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpSettings.AllInstances.AllowAnonymousConnectionGet">
            <summary>Sets the shim of AmqpSettings.get_AllowAnonymousConnection()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpSettings.AllInstances.AllowAnonymousConnectionSetBoolean">
            <summary>Sets the shim of AmqpSettings.set_AllowAnonymousConnection(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpSettings.AllInstances.Clone">
            <summary>Sets the shim of AmqpSettings.Clone()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpSettings.AllInstances.DefaultLinkCreditGet">
            <summary>Sets the shim of AmqpSettings.get_DefaultLinkCredit()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpSettings.AllInstances.DefaultLinkCreditSetUInt32">
            <summary>Sets the shim of AmqpSettings.set_DefaultLinkCredit(UInt32 value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpSettings.AllInstances.GetDefaultHeader">
            <summary>Sets the shim of AmqpSettings.GetDefaultHeader()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpSettings.AllInstances.GetDefaultProvider">
            <summary>Sets the shim of AmqpSettings.GetDefaultProvider()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpSettings.AllInstances.GetSupportedHeaderProtocolHeader">
            <summary>Sets the shim of AmqpSettings.GetSupportedHeader(ProtocolHeader requestedHeader)</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.ShimAmqpSettings.AllInstances.GetTransportProviderOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Microsoft.Azure.Amqp.AmqpSettings,``0})">
            <summary>Sets the shim of AmqpSettings.GetTransportProvider()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpSettings.AllInstances.MaxConcurrentConnectionsGet">
            <summary>Sets the shim of AmqpSettings.get_MaxConcurrentConnections()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpSettings.AllInstances.MaxConcurrentConnectionsSetInt32">
            <summary>Sets the shim of AmqpSettings.set_MaxConcurrentConnections(Int32 value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpSettings.AllInstances.MaxLinksPerSessionGet">
            <summary>Sets the shim of AmqpSettings.get_MaxLinksPerSession()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpSettings.AllInstances.MaxLinksPerSessionSetInt32">
            <summary>Sets the shim of AmqpSettings.set_MaxLinksPerSession(Int32 value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpSettings.AllInstances.RequireSecureTransportGet">
            <summary>Sets the shim of AmqpSettings.get_RequireSecureTransport()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpSettings.AllInstances.RequireSecureTransportSetBoolean">
            <summary>Sets the shim of AmqpSettings.set_RequireSecureTransport(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpSettings.AllInstances.RuntimeProviderGet">
            <summary>Sets the shim of AmqpSettings.get_RuntimeProvider()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpSettings.AllInstances.RuntimeProviderSetIRuntimeProvider">
            <summary>Sets the shim of AmqpSettings.set_RuntimeProvider(IRuntimeProvider value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpSettings.AllInstances.TransportProvidersGet">
            <summary>Sets the shim of AmqpSettings.get_TransportProviders()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpSettings.AllInstances.TryGetTransportProviderProtocolHeaderTransportProviderOut">
            <summary>Sets the shim of AmqpSettings.TryGetTransportProvider(ProtocolHeader header, TransportProvider&amp; provider)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpSettings.AllInstances.ValidateInitiatorSettings">
            <summary>Sets the shim of AmqpSettings.ValidateInitiatorSettings()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpSettings.AllInstances.ValidateListenerSettings">
            <summary>Sets the shim of AmqpSettings.ValidateListenerSettings()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpSettings.AllowAnonymousConnectionGet">
            <summary>Sets the shim of AmqpSettings.get_AllowAnonymousConnection()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpSettings.AllowAnonymousConnectionSetBoolean">
            <summary>Sets the shim of AmqpSettings.set_AllowAnonymousConnection(Boolean value)</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.ShimAmqpSettings.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.ShimAmqpSettings.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpSettings.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpSettings.Clone">
            <summary>Sets the shim of AmqpSettings.Clone()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpSettings.Constructor">
            <summary>Sets the shim of AmqpSettings.AmqpSettings()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpSettings.DefaultLinkCreditGet">
            <summary>Sets the shim of AmqpSettings.get_DefaultLinkCredit()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpSettings.DefaultLinkCreditSetUInt32">
            <summary>Sets the shim of AmqpSettings.set_DefaultLinkCredit(UInt32 value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpSettings.GetDefaultHeader">
            <summary>Sets the shim of AmqpSettings.GetDefaultHeader()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpSettings.GetDefaultProvider">
            <summary>Sets the shim of AmqpSettings.GetDefaultProvider()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpSettings.GetSupportedHeaderProtocolHeader">
            <summary>Sets the shim of AmqpSettings.GetSupportedHeader(ProtocolHeader requestedHeader)</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.ShimAmqpSettings.GetTransportProviderOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0})">
            <summary>Sets the shim of AmqpSettings.GetTransportProvider()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpSettings.MaxConcurrentConnectionsGet">
            <summary>Sets the shim of AmqpSettings.get_MaxConcurrentConnections()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpSettings.MaxConcurrentConnectionsSetInt32">
            <summary>Sets the shim of AmqpSettings.set_MaxConcurrentConnections(Int32 value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpSettings.MaxLinksPerSessionGet">
            <summary>Sets the shim of AmqpSettings.get_MaxLinksPerSession()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpSettings.MaxLinksPerSessionSetInt32">
            <summary>Sets the shim of AmqpSettings.set_MaxLinksPerSession(Int32 value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpSettings.RequireSecureTransportGet">
            <summary>Sets the shim of AmqpSettings.get_RequireSecureTransport()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpSettings.RequireSecureTransportSetBoolean">
            <summary>Sets the shim of AmqpSettings.set_RequireSecureTransport(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpSettings.RuntimeProviderGet">
            <summary>Sets the shim of AmqpSettings.get_RuntimeProvider()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpSettings.RuntimeProviderSetIRuntimeProvider">
            <summary>Sets the shim of AmqpSettings.set_RuntimeProvider(IRuntimeProvider value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpSettings.TransportProvidersGet">
            <summary>Sets the shim of AmqpSettings.get_TransportProviders()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpSettings.TryGetTransportProviderProtocolHeaderTransportProviderOut">
            <summary>Sets the shim of AmqpSettings.TryGetTransportProvider(ProtocolHeader header, TransportProvider&amp; provider)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpSettings.ValidateInitiatorSettings">
            <summary>Sets the shim of AmqpSettings.ValidateInitiatorSettings()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpSettings.ValidateListenerSettings">
            <summary>Sets the shim of AmqpSettings.ValidateListenerSettings()</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Fakes.ShimAmqpVersion">
            <summary>Shim type of Microsoft.Azure.Amqp.AmqpVersion</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.ShimAmqpVersion.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Fakes.ShimAmqpVersion.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.ShimAmqpVersion.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.ShimAmqpVersion.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAmqpVersion.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Fakes.ShimAsyncIO">
            <summary>Shim type of Microsoft.Azure.Amqp.AsyncIO</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.ShimAsyncIO.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.ShimAsyncIO.#ctor(Microsoft.Azure.Amqp.AsyncIO)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAsyncIO.AbortInternal">
            <summary>Sets the shim of AsyncIO.AbortInternal()</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Fakes.ShimAsyncIO.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAsyncIO.AllInstances.AbortInternal">
            <summary>Sets the shim of AsyncIO.AbortInternal()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAsyncIO.AllInstances.CloseInternal">
            <summary>Sets the shim of AsyncIO.CloseInternal()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAsyncIO.AllInstances.OnCloseTimeSpan">
            <summary>Sets the shim of AsyncIO.OnClose(TimeSpan timeout)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAsyncIO.AllInstances.OnOpenTimeSpan">
            <summary>Sets the shim of AsyncIO.OnOpen(TimeSpan timeout)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAsyncIO.AllInstances.OpenInternal">
            <summary>Sets the shim of AsyncIO.OpenInternal()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAsyncIO.AllInstances.TransportGet">
            <summary>Sets the shim of AsyncIO.get_Transport()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAsyncIO.AllInstances.WriteBufferByteBuffer">
            <summary>Sets the shim of AsyncIO.WriteBuffer(ByteBuffer buffer)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAsyncIO.AllInstances.WriteBufferIListOfByteBuffer">
            <summary>Sets the shim of AsyncIO.WriteBuffer(IList`1&lt;ByteBuffer&gt; buffers)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAsyncIO.AllInstances.WriteBufferQueueSizeGet">
            <summary>Sets the shim of AsyncIO.get_WriteBufferQueueSize()</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.ShimAsyncIO.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.ShimAsyncIO.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAsyncIO.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAsyncIO.CloseInternal">
            <summary>Sets the shim of AsyncIO.CloseInternal()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAsyncIO.ConstructorIIoHandlerInt32Int32Int32TransportBaseBoolean">
            <summary>Sets the shim of AsyncIO.AsyncIO(IIoHandler parent, Int32 maxFrameSize, Int32 writeQueueFullLimit, Int32 writeQueueEmptyLimit, TransportBase transport, Boolean isInitiator)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAsyncIO.OnCloseTimeSpan">
            <summary>Sets the shim of AsyncIO.OnClose(TimeSpan timeout)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAsyncIO.OnOpenTimeSpan">
            <summary>Sets the shim of AsyncIO.OnOpen(TimeSpan timeout)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAsyncIO.OpenInternal">
            <summary>Sets the shim of AsyncIO.OpenInternal()</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Fakes.ShimAsyncIO.ShimAsyncBufferReader">
            <summary>Shim type of Microsoft.Azure.Amqp.AsyncIO+AsyncBufferReader</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.ShimAsyncIO.ShimAsyncBufferReader.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.ShimAsyncIO.ShimAsyncBufferReader.#ctor(Microsoft.Azure.Amqp.AsyncIO.AsyncBufferReader)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Fakes.ShimAsyncIO.ShimAsyncBufferReader.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAsyncIO.ShimAsyncBufferReader.AllInstances.HandleReadCompleteTransportAsyncCallbackArgs">
            <summary>Sets the shim of AsyncBufferReader.HandleReadComplete(TransportAsyncCallbackArgs args)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAsyncIO.ShimAsyncBufferReader.AllInstances.ReadBufferTransportAsyncCallbackArgs">
            <summary>Sets the shim of AsyncBufferReader.ReadBuffer(TransportAsyncCallbackArgs args)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAsyncIO.ShimAsyncBufferReader.AllInstances.ReadTransportAsyncCallbackArgs">
            <summary>Sets the shim of AsyncBufferReader.Read(TransportAsyncCallbackArgs args)</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.ShimAsyncIO.ShimAsyncBufferReader.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.ShimAsyncIO.ShimAsyncBufferReader.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAsyncIO.ShimAsyncBufferReader.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAsyncIO.ShimAsyncBufferReader.ConstructorTransportBase">
            <summary>Sets the shim of AsyncBufferReader.AsyncBufferReader(TransportBase transport)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAsyncIO.ShimAsyncBufferReader.HandleReadCompleteTransportAsyncCallbackArgs">
            <summary>Sets the shim of AsyncBufferReader.HandleReadComplete(TransportAsyncCallbackArgs args)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAsyncIO.ShimAsyncBufferReader.OnReadCompleteTransportAsyncCallbackArgs">
            <summary>Sets the shim of AsyncBufferReader.OnReadComplete(TransportAsyncCallbackArgs args)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAsyncIO.ShimAsyncBufferReader.ReadBufferTransportAsyncCallbackArgs">
            <summary>Sets the shim of AsyncBufferReader.ReadBuffer(TransportAsyncCallbackArgs args)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAsyncIO.ShimAsyncBufferReader.ReadTransportAsyncCallbackArgs">
            <summary>Sets the shim of AsyncBufferReader.Read(TransportAsyncCallbackArgs args)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAsyncIO.ShimAsyncBufferReader.StaticConstructor">
            <summary>Sets the shim of AsyncBufferReader.AsyncBufferReader()</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Fakes.ShimAsyncIO.ShimAsyncBufferWriter">
            <summary>Shim type of Microsoft.Azure.Amqp.AsyncIO+AsyncBufferWriter</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.ShimAsyncIO.ShimAsyncBufferWriter.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.ShimAsyncIO.ShimAsyncBufferWriter.#ctor(Microsoft.Azure.Amqp.AsyncIO.AsyncBufferWriter)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Fakes.ShimAsyncIO.ShimAsyncBufferWriter.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAsyncIO.ShimAsyncBufferWriter.AllInstances.HandleWriteCompleteTransportAsyncCallbackArgs">
            <summary>Sets the shim of AsyncBufferWriter.HandleWriteComplete(TransportAsyncCallbackArgs args)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAsyncIO.ShimAsyncBufferWriter.AllInstances.WriteBufferTransportAsyncCallbackArgs">
            <summary>Sets the shim of AsyncBufferWriter.WriteBuffer(TransportAsyncCallbackArgs args)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAsyncIO.ShimAsyncBufferWriter.AllInstances.WriteTransportAsyncCallbackArgs">
            <summary>Sets the shim of AsyncBufferWriter.Write(TransportAsyncCallbackArgs args)</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.ShimAsyncIO.ShimAsyncBufferWriter.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.ShimAsyncIO.ShimAsyncBufferWriter.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAsyncIO.ShimAsyncBufferWriter.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAsyncIO.ShimAsyncBufferWriter.ConstructorTransportBase">
            <summary>Sets the shim of AsyncBufferWriter.AsyncBufferWriter(TransportBase transport)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAsyncIO.ShimAsyncBufferWriter.HandleWriteCompleteTransportAsyncCallbackArgs">
            <summary>Sets the shim of AsyncBufferWriter.HandleWriteComplete(TransportAsyncCallbackArgs args)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAsyncIO.ShimAsyncBufferWriter.OnWriteCompleteTransportAsyncCallbackArgs">
            <summary>Sets the shim of AsyncBufferWriter.OnWriteComplete(TransportAsyncCallbackArgs args)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAsyncIO.ShimAsyncBufferWriter.StaticConstructor">
            <summary>Sets the shim of AsyncBufferWriter.AsyncBufferWriter()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAsyncIO.ShimAsyncBufferWriter.WriteBufferTransportAsyncCallbackArgs">
            <summary>Sets the shim of AsyncBufferWriter.WriteBuffer(TransportAsyncCallbackArgs args)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAsyncIO.ShimAsyncBufferWriter.WriteTransportAsyncCallbackArgs">
            <summary>Sets the shim of AsyncBufferWriter.Write(TransportAsyncCallbackArgs args)</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Fakes.ShimAsyncIO.ShimAsyncFrameWriter">
            <summary>Shim type of Microsoft.Azure.Amqp.AsyncIO+AsyncFrameWriter</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.ShimAsyncIO.ShimAsyncFrameWriter.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.ShimAsyncIO.ShimAsyncFrameWriter.#ctor(Microsoft.Azure.Amqp.AsyncIO.AsyncFrameWriter)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Fakes.ShimAsyncIO.ShimAsyncFrameWriter.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAsyncIO.ShimAsyncFrameWriter.AllInstances.WriteBufferIListOfByteBuffer">
            <summary>Sets the shim of AsyncFrameWriter.WriteBuffer(IList`1&lt;ByteBuffer&gt; buffers)</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.ShimAsyncIO.ShimAsyncFrameWriter.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.ShimAsyncIO.ShimAsyncFrameWriter.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAsyncIO.ShimAsyncFrameWriter.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAsyncIO.ShimAsyncFrameWriter.ConstructorTransportBaseInt32Int32IIoHandler">
            <summary>Sets the shim of AsyncFrameWriter.AsyncFrameWriter(TransportBase transport, Int32 writeQueueFullLimit, Int32 writeQueueEmptyLimit, IIoHandler parent)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAsyncIO.ShimAsyncFrameWriter.WriteBufferIListOfByteBuffer">
            <summary>Sets the shim of AsyncFrameWriter.WriteBuffer(IList`1&lt;ByteBuffer&gt; buffers)</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Fakes.ShimAsyncIO.ShimAsyncWriter">
            <summary>Shim type of Microsoft.Azure.Amqp.AsyncIO+AsyncWriter</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.ShimAsyncIO.ShimAsyncWriter.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.ShimAsyncIO.ShimAsyncWriter.#ctor(Microsoft.Azure.Amqp.AsyncIO.AsyncWriter)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Fakes.ShimAsyncIO.ShimAsyncWriter.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAsyncIO.ShimAsyncWriter.AllInstances.BufferQueueSizeGet">
            <summary>Sets the shim of AsyncWriter.get_BufferQueueSize()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAsyncIO.ShimAsyncWriter.AllInstances.ContinueWrite">
            <summary>Sets the shim of AsyncWriter.ContinueWrite()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAsyncIO.ShimAsyncWriter.AllInstances.EnqueueBufferByteBuffer">
            <summary>Sets the shim of AsyncWriter.EnqueueBuffer(ByteBuffer buffer)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAsyncIO.ShimAsyncWriter.AllInstances.HandleWriteBufferCompleteTransportAsyncCallbackArgs">
            <summary>Sets the shim of AsyncWriter.HandleWriteBufferComplete(TransportAsyncCallbackArgs args)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAsyncIO.ShimAsyncWriter.AllInstances.IssueClose">
            <summary>Sets the shim of AsyncWriter.IssueClose()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAsyncIO.ShimAsyncWriter.AllInstances.OnBufferDequeuedInt32">
            <summary>Sets the shim of AsyncWriter.OnBufferDequeued(Int32 size)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAsyncIO.ShimAsyncWriter.AllInstances.SyncRootGet">
            <summary>Sets the shim of AsyncWriter.get_SyncRoot()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAsyncIO.ShimAsyncWriter.AllInstances.WriteBufferByteBuffer">
            <summary>Sets the shim of AsyncWriter.WriteBuffer(ByteBuffer buffer)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAsyncIO.ShimAsyncWriter.AllInstances.WriteBufferIListOfByteBuffer">
            <summary>Sets the shim of AsyncWriter.WriteBuffer(IList`1&lt;ByteBuffer&gt; buffers)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAsyncIO.ShimAsyncWriter.AllInstances.WriteCore">
            <summary>Sets the shim of AsyncWriter.WriteCore()</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.ShimAsyncIO.ShimAsyncWriter.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.ShimAsyncIO.ShimAsyncWriter.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAsyncIO.ShimAsyncWriter.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAsyncIO.ShimAsyncWriter.BufferQueueSizeGet">
            <summary>Sets the shim of AsyncWriter.get_BufferQueueSize()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAsyncIO.ShimAsyncWriter.ConstructorTransportBaseInt32Int32IIoHandler">
            <summary>Sets the shim of AsyncWriter.AsyncWriter(TransportBase transport, Int32 writeQueueFullLimit, Int32 writeQueueEmptyLimit, IIoHandler parent)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAsyncIO.ShimAsyncWriter.ContinueWrite">
            <summary>Sets the shim of AsyncWriter.ContinueWrite()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAsyncIO.ShimAsyncWriter.EnqueueBufferByteBuffer">
            <summary>Sets the shim of AsyncWriter.EnqueueBuffer(ByteBuffer buffer)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAsyncIO.ShimAsyncWriter.HandleWriteBufferCompleteTransportAsyncCallbackArgs">
            <summary>Sets the shim of AsyncWriter.HandleWriteBufferComplete(TransportAsyncCallbackArgs args)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAsyncIO.ShimAsyncWriter.IssueClose">
            <summary>Sets the shim of AsyncWriter.IssueClose()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAsyncIO.ShimAsyncWriter.OnBufferDequeuedInt32">
            <summary>Sets the shim of AsyncWriter.OnBufferDequeued(Int32 size)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAsyncIO.ShimAsyncWriter.StaticConstructor">
            <summary>Sets the shim of AsyncWriter.AsyncWriter()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAsyncIO.ShimAsyncWriter.SyncRootGet">
            <summary>Sets the shim of AsyncWriter.get_SyncRoot()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAsyncIO.ShimAsyncWriter.WriteBufferByteBuffer">
            <summary>Sets the shim of AsyncWriter.WriteBuffer(ByteBuffer buffer)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAsyncIO.ShimAsyncWriter.WriteBufferIListOfByteBuffer">
            <summary>Sets the shim of AsyncWriter.WriteBuffer(IList`1&lt;ByteBuffer&gt; buffers)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAsyncIO.ShimAsyncWriter.WriteCompleteCallbackTransportAsyncCallbackArgs">
            <summary>Sets the shim of AsyncWriter.WriteCompleteCallback(TransportAsyncCallbackArgs args)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAsyncIO.ShimAsyncWriter.WriteCore">
            <summary>Sets the shim of AsyncWriter.WriteCore()</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Fakes.ShimAsyncIO.ShimFrameBufferReader">
            <summary>Shim type of Microsoft.Azure.Amqp.AsyncIO+FrameBufferReader</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.ShimAsyncIO.ShimFrameBufferReader.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.ShimAsyncIO.ShimFrameBufferReader.#ctor(Microsoft.Azure.Amqp.AsyncIO.FrameBufferReader)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Fakes.ShimAsyncIO.ShimFrameBufferReader.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAsyncIO.ShimFrameBufferReader.AllInstances.HandleReadCompleteTransportAsyncCallbackArgs">
            <summary>Sets the shim of FrameBufferReader.HandleReadComplete(TransportAsyncCallbackArgs args)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAsyncIO.ShimFrameBufferReader.AllInstances.ReadCoreTransportAsyncCallbackArgs">
            <summary>Sets the shim of FrameBufferReader.ReadCore(TransportAsyncCallbackArgs args)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAsyncIO.ShimFrameBufferReader.AllInstances.ReadFrame">
            <summary>Sets the shim of FrameBufferReader.ReadFrame()</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.ShimAsyncIO.ShimFrameBufferReader.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.ShimAsyncIO.ShimFrameBufferReader.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAsyncIO.ShimFrameBufferReader.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAsyncIO.ShimFrameBufferReader.ConstructorIIoHandlerTransportBaseInt32">
            <summary>Sets the shim of FrameBufferReader.FrameBufferReader(IIoHandler parent, TransportBase transport, Int32 maxFrameSize)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAsyncIO.ShimFrameBufferReader.HandleReadCompleteTransportAsyncCallbackArgs">
            <summary>Sets the shim of FrameBufferReader.HandleReadComplete(TransportAsyncCallbackArgs args)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAsyncIO.ShimFrameBufferReader.OnReadFrameCompleteTransportAsyncCallbackArgs">
            <summary>Sets the shim of FrameBufferReader.OnReadFrameComplete(TransportAsyncCallbackArgs args)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAsyncIO.ShimFrameBufferReader.OnReadSizeCompleteTransportAsyncCallbackArgs">
            <summary>Sets the shim of FrameBufferReader.OnReadSizeComplete(TransportAsyncCallbackArgs args)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAsyncIO.ShimFrameBufferReader.ReadCoreTransportAsyncCallbackArgs">
            <summary>Sets the shim of FrameBufferReader.ReadCore(TransportAsyncCallbackArgs args)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAsyncIO.ShimFrameBufferReader.ReadFrame">
            <summary>Sets the shim of FrameBufferReader.ReadFrame()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAsyncIO.ShimFrameBufferReader.StaticConstructor">
            <summary>Sets the shim of FrameBufferReader.FrameBufferReader()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAsyncIO.TransportGet">
            <summary>Sets the shim of AsyncIO.get_Transport()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAsyncIO.WriteBufferByteBuffer">
            <summary>Sets the shim of AsyncIO.WriteBuffer(ByteBuffer buffer)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAsyncIO.WriteBufferIListOfByteBuffer">
            <summary>Sets the shim of AsyncIO.WriteBuffer(IList`1&lt;ByteBuffer&gt; buffers)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimAsyncIO.WriteBufferQueueSizeGet">
            <summary>Sets the shim of AsyncIO.get_WriteBufferQueueSize()</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Fakes.ShimBufferListStream">
            <summary>Shim type of Microsoft.Azure.Amqp.BufferListStream</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.ShimBufferListStream.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.ShimBufferListStream.#ctor(Microsoft.Azure.Amqp.BufferListStream)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimBufferListStream.AdvanceInt32Int32">
            <summary>Sets the shim of BufferListStream.Advance(Int32 count, Int32 segmentCount)</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Fakes.ShimBufferListStream.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimBufferListStream.AllInstances.AdvanceInt32Int32">
            <summary>Sets the shim of BufferListStream.Advance(Int32 count, Int32 segmentCount)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimBufferListStream.AllInstances.CanReadGet">
            <summary>Sets the shim of BufferListStream.get_CanRead()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimBufferListStream.AllInstances.CanSeekGet">
            <summary>Sets the shim of BufferListStream.get_CanSeek()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimBufferListStream.AllInstances.CanWriteGet">
            <summary>Sets the shim of BufferListStream.get_CanWrite()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimBufferListStream.AllInstances.Clone">
            <summary>Sets the shim of BufferListStream.Clone()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimBufferListStream.AllInstances.DisposeBoolean">
            <summary>Sets the shim of BufferListStream.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimBufferListStream.AllInstances.Flush">
            <summary>Sets the shim of BufferListStream.Flush()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimBufferListStream.AllInstances.LengthGet">
            <summary>Sets the shim of BufferListStream.get_Length()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimBufferListStream.AllInstances.PositionGet">
            <summary>Sets the shim of BufferListStream.get_Position()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimBufferListStream.AllInstances.PositionSetInt64">
            <summary>Sets the shim of BufferListStream.set_Position(Int64 value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimBufferListStream.AllInstances.ReadBuffersInt32BooleanBooleanOut">
            <summary>Sets the shim of BufferListStream.ReadBuffers(Int32 count, Boolean advance, Boolean&amp; more)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimBufferListStream.AllInstances.ReadByte">
            <summary>Sets the shim of BufferListStream.ReadByte()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimBufferListStream.AllInstances.ReadByteArrayInt32Int32">
            <summary>Sets the shim of BufferListStream.Read(Byte[] buffer, Int32 offset, Int32 count)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimBufferListStream.AllInstances.ReadBytesInt32">
            <summary>Sets the shim of BufferListStream.ReadBytes(Int32 count)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimBufferListStream.AllInstances.SeekInt64SeekOrigin">
            <summary>Sets the shim of BufferListStream.Seek(Int64 offset, SeekOrigin origin)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimBufferListStream.AllInstances.SetLengthInt64">
            <summary>Sets the shim of BufferListStream.SetLength(Int64 value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimBufferListStream.AllInstances.SetPositionInt64">
            <summary>Sets the shim of BufferListStream.SetPosition(Int64 pos)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimBufferListStream.AllInstances.ThrowIfDisposed">
            <summary>Sets the shim of BufferListStream.ThrowIfDisposed()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimBufferListStream.AllInstances.WriteByteArrayInt32Int32">
            <summary>Sets the shim of BufferListStream.Write(Byte[] buffer, Int32 offset, Int32 count)</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.ShimBufferListStream.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.ShimBufferListStream.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimBufferListStream.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.ShimBufferListStream.Bind(System.ICloneable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.ShimBufferListStream.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimBufferListStream.CanReadGet">
            <summary>Sets the shim of BufferListStream.get_CanRead()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimBufferListStream.CanSeekGet">
            <summary>Sets the shim of BufferListStream.get_CanSeek()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimBufferListStream.CanWriteGet">
            <summary>Sets the shim of BufferListStream.get_CanWrite()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimBufferListStream.Clone">
            <summary>Sets the shim of BufferListStream.Clone()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimBufferListStream.ConstructorIListOfArraySegmentOfByte">
            <summary>Sets the shim of BufferListStream.BufferListStream(IList`1&lt;ArraySegment`1&lt;Byte&gt;&gt; arraySegments)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimBufferListStream.CreateStreamInt32">
            <summary>Sets the shim of BufferListStream.Create(Stream stream, Int32 segmentSize)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimBufferListStream.CreateStreamInt32Boolean">
            <summary>Sets the shim of BufferListStream.Create(Stream stream, Int32 segmentSize, Boolean forceCopyStream)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimBufferListStream.DisposeBoolean">
            <summary>Sets the shim of BufferListStream.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimBufferListStream.Flush">
            <summary>Sets the shim of BufferListStream.Flush()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimBufferListStream.LengthGet">
            <summary>Sets the shim of BufferListStream.get_Length()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimBufferListStream.PositionGet">
            <summary>Sets the shim of BufferListStream.get_Position()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimBufferListStream.PositionSetInt64">
            <summary>Sets the shim of BufferListStream.set_Position(Int64 value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimBufferListStream.ReadBuffersInt32BooleanBooleanOut">
            <summary>Sets the shim of BufferListStream.ReadBuffers(Int32 count, Boolean advance, Boolean&amp; more)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimBufferListStream.ReadByte">
            <summary>Sets the shim of BufferListStream.ReadByte()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimBufferListStream.ReadByteArrayInt32Int32">
            <summary>Sets the shim of BufferListStream.Read(Byte[] buffer, Int32 offset, Int32 count)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimBufferListStream.ReadBytesInt32">
            <summary>Sets the shim of BufferListStream.ReadBytes(Int32 count)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimBufferListStream.ReadStreamStreamInt32Int32Out">
            <summary>Sets the shim of BufferListStream.ReadStream(Stream stream, Int32 segmentSize, Int32&amp; length)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimBufferListStream.SeekInt64SeekOrigin">
            <summary>Sets the shim of BufferListStream.Seek(Int64 offset, SeekOrigin origin)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimBufferListStream.SetLengthInt64">
            <summary>Sets the shim of BufferListStream.SetLength(Int64 value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimBufferListStream.SetPositionInt64">
            <summary>Sets the shim of BufferListStream.SetPosition(Int64 pos)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimBufferListStream.ThrowIfDisposed">
            <summary>Sets the shim of BufferListStream.ThrowIfDisposed()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimBufferListStream.WriteByteArrayInt32Int32">
            <summary>Sets the shim of BufferListStream.Write(Byte[] buffer, Int32 offset, Int32 count)</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Fakes.ShimByteBuffer">
            <summary>Shim type of Microsoft.Azure.Amqp.ByteBuffer</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.ShimByteBuffer.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.ShimByteBuffer.#ctor(Microsoft.Azure.Amqp.ByteBuffer)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimByteBuffer.AddReference">
            <summary>Sets the shim of ByteBuffer.AddReference()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimByteBuffer.AdjustPositionInt32Int32">
            <summary>Sets the shim of ByteBuffer.AdjustPosition(Int32 offset, Int32 length)</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Fakes.ShimByteBuffer.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimByteBuffer.AllInstances.AddReference">
            <summary>Sets the shim of ByteBuffer.AddReference()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimByteBuffer.AllInstances.AdjustPositionInt32Int32">
            <summary>Sets the shim of ByteBuffer.AdjustPosition(Int32 offset, Int32 length)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimByteBuffer.AllInstances.AppendInt32">
            <summary>Sets the shim of ByteBuffer.Append(Int32 size)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimByteBuffer.AllInstances.BufferGet">
            <summary>Sets the shim of ByteBuffer.get_Buffer()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimByteBuffer.AllInstances.CapacityGet">
            <summary>Sets the shim of ByteBuffer.get_Capacity()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimByteBuffer.AllInstances.Clone">
            <summary>Sets the shim of ByteBuffer.Clone()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimByteBuffer.AllInstances.CompleteInt32">
            <summary>Sets the shim of ByteBuffer.Complete(Int32 size)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimByteBuffer.AllInstances.Dispose">
            <summary>Sets the shim of ByteBuffer.Dispose()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimByteBuffer.AllInstances.LengthGet">
            <summary>Sets the shim of ByteBuffer.get_Length()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimByteBuffer.AllInstances.OffsetGet">
            <summary>Sets the shim of ByteBuffer.get_Offset()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimByteBuffer.AllInstances.RemoveReference">
            <summary>Sets the shim of ByteBuffer.RemoveReference()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimByteBuffer.AllInstances.Reset">
            <summary>Sets the shim of ByteBuffer.Reset()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimByteBuffer.AllInstances.SeekInt32">
            <summary>Sets the shim of ByteBuffer.Seek(Int32 seekPosition)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimByteBuffer.AllInstances.SizeGet">
            <summary>Sets the shim of ByteBuffer.get_Size()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimByteBuffer.AllInstances.ValidateBooleanInt32">
            <summary>Sets the shim of ByteBuffer.Validate(Boolean write, Int32 dataSize)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimByteBuffer.AllInstances.WritePosGet">
            <summary>Sets the shim of ByteBuffer.get_WritePos()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimByteBuffer.AppendInt32">
            <summary>Sets the shim of ByteBuffer.Append(Int32 size)</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.ShimByteBuffer.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.ShimByteBuffer.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimByteBuffer.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.ShimByteBuffer.Bind(System.ICloneable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.ShimByteBuffer.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimByteBuffer.BufferGet">
            <summary>Sets the shim of ByteBuffer.get_Buffer()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimByteBuffer.CapacityGet">
            <summary>Sets the shim of ByteBuffer.get_Capacity()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimByteBuffer.Clone">
            <summary>Sets the shim of ByteBuffer.Clone()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimByteBuffer.CompleteInt32">
            <summary>Sets the shim of ByteBuffer.Complete(Int32 size)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimByteBuffer.ConstructorArraySegmentOfByte">
            <summary>Sets the shim of ByteBuffer.ByteBuffer(ArraySegment`1&lt;Byte&gt; array)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimByteBuffer.ConstructorByteArray">
            <summary>Sets the shim of ByteBuffer.ByteBuffer(Byte[] buffer)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimByteBuffer.ConstructorByteArrayBoolean">
            <summary>Sets the shim of ByteBuffer.ByteBuffer(Byte[] buffer, Boolean autoGrow)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimByteBuffer.ConstructorByteArrayInt32Int32">
            <summary>Sets the shim of ByteBuffer.ByteBuffer(Byte[] buffer, Int32 offset, Int32 count)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimByteBuffer.ConstructorInt32Boolean">
            <summary>Sets the shim of ByteBuffer.ByteBuffer(Int32 size, Boolean autoGrow)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimByteBuffer.ConstructorInt32BooleanBoolean">
            <summary>Sets the shim of ByteBuffer.ByteBuffer(Int32 size, Boolean autoGrow, Boolean isTransportBuffer)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimByteBuffer.Dispose">
            <summary>Sets the shim of ByteBuffer.Dispose()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimByteBuffer.InitBufferManagers">
            <summary>Sets the shim of ByteBuffer.InitBufferManagers()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimByteBuffer.LengthGet">
            <summary>Sets the shim of ByteBuffer.get_Length()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimByteBuffer.OffsetGet">
            <summary>Sets the shim of ByteBuffer.get_Offset()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimByteBuffer.RemoveReference">
            <summary>Sets the shim of ByteBuffer.RemoveReference()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimByteBuffer.Reset">
            <summary>Sets the shim of ByteBuffer.Reset()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimByteBuffer.SeekInt32">
            <summary>Sets the shim of ByteBuffer.Seek(Int32 seekPosition)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimByteBuffer.SizeGet">
            <summary>Sets the shim of ByteBuffer.get_Size()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimByteBuffer.StaticConstructor">
            <summary>Sets the shim of ByteBuffer.ByteBuffer()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimByteBuffer.ValidateBooleanInt32">
            <summary>Sets the shim of ByteBuffer.Validate(Boolean write, Int32 dataSize)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimByteBuffer.WritePosGet">
            <summary>Sets the shim of ByteBuffer.get_WritePos()</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Fakes.ShimCbsConstants">
            <summary>Shim type of Microsoft.Azure.Amqp.CbsConstants</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.ShimCbsConstants.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.ShimCbsConstants.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.ShimCbsConstants.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimCbsConstants.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Fakes.ShimCbsConstants.ShimPutToken">
            <summary>Shim type of Microsoft.Azure.Amqp.CbsConstants+PutToken</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.ShimCbsConstants.ShimPutToken.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.ShimCbsConstants.ShimPutToken.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.ShimCbsConstants.ShimPutToken.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimCbsConstants.ShimPutToken.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimCbsConstants.StaticConstructor">
            <summary>Sets the shim of CbsConstants.CbsConstants()</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Fakes.ShimCbsToken">
            <summary>Shim type of Microsoft.Azure.Amqp.CbsToken</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.ShimCbsToken.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.ShimCbsToken.#ctor(Microsoft.Azure.Amqp.CbsToken)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Fakes.ShimCbsToken.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimCbsToken.AllInstances.ExpiresAtUtcGet">
            <summary>Sets the shim of CbsToken.get_ExpiresAtUtc()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimCbsToken.AllInstances.ExpiresAtUtcSetDateTime">
            <summary>Sets the shim of CbsToken.set_ExpiresAtUtc(DateTime value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimCbsToken.AllInstances.TokenTypeGet">
            <summary>Sets the shim of CbsToken.get_TokenType()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimCbsToken.AllInstances.TokenTypeSetString">
            <summary>Sets the shim of CbsToken.set_TokenType(String value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimCbsToken.AllInstances.TokenValueGet">
            <summary>Sets the shim of CbsToken.get_TokenValue()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimCbsToken.AllInstances.TokenValueSetObject">
            <summary>Sets the shim of CbsToken.set_TokenValue(Object value)</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.ShimCbsToken.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.ShimCbsToken.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimCbsToken.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimCbsToken.ConstructorObjectStringDateTime">
            <summary>Sets the shim of CbsToken.CbsToken(Object tokenValue, String tokenType, DateTime expiresAtUtc)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimCbsToken.ExpiresAtUtcGet">
            <summary>Sets the shim of CbsToken.get_ExpiresAtUtc()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimCbsToken.ExpiresAtUtcSetDateTime">
            <summary>Sets the shim of CbsToken.set_ExpiresAtUtc(DateTime value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimCbsToken.TokenTypeGet">
            <summary>Sets the shim of CbsToken.get_TokenType()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimCbsToken.TokenTypeSetString">
            <summary>Sets the shim of CbsToken.set_TokenType(String value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimCbsToken.TokenValueGet">
            <summary>Sets the shim of CbsToken.get_TokenValue()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimCbsToken.TokenValueSetObject">
            <summary>Sets the shim of CbsToken.set_TokenValue(Object value)</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Fakes.ShimDelivery">
            <summary>Shim type of Microsoft.Azure.Amqp.Delivery</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.ShimDelivery.#ctor(Microsoft.Azure.Amqp.Delivery)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimDelivery.AddDeliveryRefDeliveryRefDelivery">
            <summary>Sets the shim of Delivery.Add(Delivery&amp; first, Delivery&amp; last, Delivery delivery)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimDelivery.AddPayloadByteBufferBoolean">
            <summary>Sets the shim of Delivery.AddPayload(ByteBuffer payload, Boolean isLast)</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Fakes.ShimDelivery.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimDelivery.AllInstances.AddPayloadByteBufferBoolean">
            <summary>Sets the shim of Delivery.AddPayload(ByteBuffer payload, Boolean isLast)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimDelivery.AllInstances.BatchableGet">
            <summary>Sets the shim of Delivery.get_Batchable()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimDelivery.AllInstances.BatchableSetBoolean">
            <summary>Sets the shim of Delivery.set_Batchable(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimDelivery.AllInstances.BytesTransferedGet">
            <summary>Sets the shim of Delivery.get_BytesTransfered()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimDelivery.AllInstances.BytesTransferedSetInt64">
            <summary>Sets the shim of Delivery.set_BytesTransfered(Int64 value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimDelivery.AllInstances.CompletePayloadInt32">
            <summary>Sets the shim of Delivery.CompletePayload(Int32 payloadSize)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimDelivery.AllInstances.DeliveryIdGet">
            <summary>Sets the shim of Delivery.get_DeliveryId()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimDelivery.AllInstances.DeliveryIdSetSequenceNumber">
            <summary>Sets the shim of Delivery.set_DeliveryId(SequenceNumber value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimDelivery.AllInstances.DeliveryTagGet">
            <summary>Sets the shim of Delivery.get_DeliveryTag()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimDelivery.AllInstances.DeliveryTagSetArraySegmentOfByte">
            <summary>Sets the shim of Delivery.set_DeliveryTag(ArraySegment`1&lt;Byte&gt; value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimDelivery.AllInstances.Dispose">
            <summary>Sets the shim of Delivery.Dispose()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimDelivery.AllInstances.DisposeBoolean">
            <summary>Sets the shim of Delivery.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimDelivery.AllInstances.LinkGet">
            <summary>Sets the shim of Delivery.get_Link()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimDelivery.AllInstances.LinkSetAmqpLink">
            <summary>Sets the shim of Delivery.set_Link(AmqpLink value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimDelivery.AllInstances.MessageFormatGet">
            <summary>Sets the shim of Delivery.get_MessageFormat()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimDelivery.AllInstances.MessageFormatSetNullableOfUInt32">
            <summary>Sets the shim of Delivery.set_MessageFormat(Nullable`1&lt;UInt32&gt; value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimDelivery.AllInstances.NextGet">
            <summary>Sets the shim of Delivery.get_Next()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimDelivery.AllInstances.NextSetDelivery">
            <summary>Sets the shim of Delivery.set_Next(Delivery value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimDelivery.AllInstances.PrepareForSend">
            <summary>Sets the shim of Delivery.PrepareForSend()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimDelivery.AllInstances.PreviousGet">
            <summary>Sets the shim of Delivery.get_Previous()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimDelivery.AllInstances.PreviousSetDelivery">
            <summary>Sets the shim of Delivery.set_Previous(Delivery value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimDelivery.AllInstances.RawByteBuffersGet">
            <summary>Sets the shim of Delivery.get_RawByteBuffers()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimDelivery.AllInstances.RawByteBuffersSetListOfByteBuffer">
            <summary>Sets the shim of Delivery.set_RawByteBuffers(List`1&lt;ByteBuffer&gt; value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimDelivery.AllInstances.SettledGet">
            <summary>Sets the shim of Delivery.get_Settled()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimDelivery.AllInstances.SettledSetBoolean">
            <summary>Sets the shim of Delivery.set_Settled(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimDelivery.AllInstances.StateChangedGet">
            <summary>Sets the shim of Delivery.get_StateChanged()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimDelivery.AllInstances.StateChangedSetBoolean">
            <summary>Sets the shim of Delivery.set_StateChanged(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimDelivery.AllInstances.StateGet">
            <summary>Sets the shim of Delivery.get_State()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimDelivery.AllInstances.StateSetDeliveryState">
            <summary>Sets the shim of Delivery.set_State(DeliveryState value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimDelivery.AllInstances.TxnIdGet">
            <summary>Sets the shim of Delivery.get_TxnId()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimDelivery.AllInstances.TxnIdSetArraySegmentOfByte">
            <summary>Sets the shim of Delivery.set_TxnId(ArraySegment`1&lt;Byte&gt; value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimDelivery.BatchableGet">
            <summary>Sets the shim of Delivery.get_Batchable()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimDelivery.BatchableSetBoolean">
            <summary>Sets the shim of Delivery.set_Batchable(Boolean value)</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.ShimDelivery.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.ShimDelivery.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimDelivery.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.ShimDelivery.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimDelivery.BytesTransferedGet">
            <summary>Sets the shim of Delivery.get_BytesTransfered()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimDelivery.BytesTransferedSetInt64">
            <summary>Sets the shim of Delivery.set_BytesTransfered(Int64 value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimDelivery.CompletePayloadInt32">
            <summary>Sets the shim of Delivery.CompletePayload(Int32 payloadSize)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimDelivery.Constructor">
            <summary>Sets the shim of Delivery.Delivery()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimDelivery.DeliveryIdGet">
            <summary>Sets the shim of Delivery.get_DeliveryId()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimDelivery.DeliveryIdSetSequenceNumber">
            <summary>Sets the shim of Delivery.set_DeliveryId(SequenceNumber value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimDelivery.DeliveryTagGet">
            <summary>Sets the shim of Delivery.get_DeliveryTag()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimDelivery.DeliveryTagSetArraySegmentOfByte">
            <summary>Sets the shim of Delivery.set_DeliveryTag(ArraySegment`1&lt;Byte&gt; value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimDelivery.Dispose">
            <summary>Sets the shim of Delivery.Dispose()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimDelivery.DisposeBoolean">
            <summary>Sets the shim of Delivery.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimDelivery.LinkGet">
            <summary>Sets the shim of Delivery.get_Link()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimDelivery.LinkSetAmqpLink">
            <summary>Sets the shim of Delivery.set_Link(AmqpLink value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimDelivery.MessageFormatGet">
            <summary>Sets the shim of Delivery.get_MessageFormat()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimDelivery.MessageFormatSetNullableOfUInt32">
            <summary>Sets the shim of Delivery.set_MessageFormat(Nullable`1&lt;UInt32&gt; value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimDelivery.NextGet">
            <summary>Sets the shim of Delivery.get_Next()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimDelivery.NextSetDelivery">
            <summary>Sets the shim of Delivery.set_Next(Delivery value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimDelivery.PrepareForSend">
            <summary>Sets the shim of Delivery.PrepareForSend()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimDelivery.PreviousGet">
            <summary>Sets the shim of Delivery.get_Previous()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimDelivery.PreviousSetDelivery">
            <summary>Sets the shim of Delivery.set_Previous(Delivery value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimDelivery.RawByteBuffersGet">
            <summary>Sets the shim of Delivery.get_RawByteBuffers()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimDelivery.RawByteBuffersSetListOfByteBuffer">
            <summary>Sets the shim of Delivery.set_RawByteBuffers(List`1&lt;ByteBuffer&gt; value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimDelivery.RemoveDeliveryRefDeliveryRefDelivery">
            <summary>Sets the shim of Delivery.Remove(Delivery&amp; first, Delivery&amp; last, Delivery delivery)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimDelivery.SettledGet">
            <summary>Sets the shim of Delivery.get_Settled()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimDelivery.SettledSetBoolean">
            <summary>Sets the shim of Delivery.set_Settled(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimDelivery.StateChangedGet">
            <summary>Sets the shim of Delivery.get_StateChanged()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimDelivery.StateChangedSetBoolean">
            <summary>Sets the shim of Delivery.set_StateChanged(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimDelivery.StateGet">
            <summary>Sets the shim of Delivery.get_State()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimDelivery.StateSetDeliveryState">
            <summary>Sets the shim of Delivery.set_State(DeliveryState value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimDelivery.TxnIdGet">
            <summary>Sets the shim of Delivery.get_TxnId()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimDelivery.TxnIdSetArraySegmentOfByte">
            <summary>Sets the shim of Delivery.set_TxnId(ArraySegment`1&lt;Byte&gt; value)</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Fakes.ShimExtensions">
            <summary>Shim type of Microsoft.Azure.Amqp.Extensions</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.ShimExtensions.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimExtensions.AbortedTransfer">
            <summary>Sets the shim of Extensions.Aborted(Transfer transfer)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimExtensions.AbsoluteExpiryTimeProperties">
            <summary>Sets the shim of Extensions.AbsoluteExpiryTime(Properties properties)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimExtensions.AddPropertyAttachAmqpSymbolObject">
            <summary>Sets the shim of Extensions.AddProperty(Attach attach, AmqpSymbol symbol, Object value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimExtensions.AddPropertyOpenAmqpSymbolObject">
            <summary>Sets the shim of Extensions.AddProperty(Open open, AmqpSymbol symbol, Object value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimExtensions.AddressAttach">
            <summary>Sets the shim of Extensions.Address(Attach attach)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimExtensions.AddressAttachBoolean">
            <summary>Sets the shim of Extensions.Address(Attach attach, Boolean role)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimExtensions.BatchableDisposition">
            <summary>Sets the shim of Extensions.Batchable(Disposition disposition)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimExtensions.BatchableTransfer">
            <summary>Sets the shim of Extensions.Batchable(Transfer transfer)</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.ShimExtensions.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.ShimExtensions.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimExtensions.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimExtensions.ChannelMaxOpen">
            <summary>Sets the shim of Extensions.ChannelMax(Open open)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimExtensions.CloneAmqpLinkSettingsBoolean">
            <summary>Sets the shim of Extensions.Clone(AmqpLinkSettings settings, Boolean deepClone)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimExtensions.CloneAttach">
            <summary>Sets the shim of Extensions.Clone(Attach attach)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimExtensions.CloneSource">
            <summary>Sets the shim of Extensions.Clone(Source source)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimExtensions.CloneTarget">
            <summary>Sets the shim of Extensions.Clone(Target target)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimExtensions.ClosedDetach">
            <summary>Sets the shim of Extensions.Closed(Detach detach)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimExtensions.CreationTimeProperties">
            <summary>Sets the shim of Extensions.CreationTime(Properties properties)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimExtensions.DeliveryCountHeader">
            <summary>Sets the shim of Extensions.DeliveryCount(Header header)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimExtensions.DurableHeader">
            <summary>Sets the shim of Extensions.Durable(Header header)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimExtensions.DurableSource">
            <summary>Sets the shim of Extensions.Durable(Source source)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimExtensions.DurableTarget">
            <summary>Sets the shim of Extensions.Durable(Target target)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimExtensions.DynamicAttach">
            <summary>Sets the shim of Extensions.Dynamic(Attach attach)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimExtensions.DynamicSource">
            <summary>Sets the shim of Extensions.Dynamic(Source source)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimExtensions.DynamicTarget">
            <summary>Sets the shim of Extensions.Dynamic(Target target)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimExtensions.EchoFlow">
            <summary>Sets the shim of Extensions.Echo(Flow flow)</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.ShimExtensions.ExtractSettingPropertyValueOrDefaultOf1AmqpLinkAmqpSymbolM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Microsoft.Azure.Amqp.AmqpLink,Microsoft.Azure.Amqp.Encoding.AmqpSymbol,``0,``0})">
            <summary>Sets the shim of Extensions.ExtractSettingPropertyValueOrDefault(AmqpLink thisPtr, AmqpSymbol key, !!0 defaultValue)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimExtensions.FirstAcquirerHeader">
            <summary>Sets the shim of Extensions.FirstAcquirer(Header header)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimExtensions.GetClonesIEnumerableOfByteBuffer">
            <summary>Sets the shim of Extensions.GetClones(IEnumerable`1&lt;ByteBuffer&gt; buffers)</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.ShimExtensions.GetSettingPropertyOrDefaultOf1AmqpLinkAmqpSymbolM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Microsoft.Azure.Amqp.AmqpLink,Microsoft.Azure.Amqp.Encoding.AmqpSymbol,``0,``0})">
            <summary>Sets the shim of Extensions.GetSettingPropertyOrDefault(AmqpLink thisPtr, AmqpSymbol key, !!0 defaultValue)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimExtensions.GetStringArraySegmentOfByte">
            <summary>Sets the shim of Extensions.GetString(ArraySegment`1&lt;Byte&gt; binary)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimExtensions.GroupSequenceProperties">
            <summary>Sets the shim of Extensions.GroupSequence(Properties properties)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimExtensions.HandleMaxBegin">
            <summary>Sets the shim of Extensions.HandleMax(Begin begin)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimExtensions.IdleTimeOutOpen">
            <summary>Sets the shim of Extensions.IdleTimeOut(Open open)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimExtensions.IncomingWindowBegin">
            <summary>Sets the shim of Extensions.IncomingWindow(Begin begin)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimExtensions.IncompleteUnsettledAttach">
            <summary>Sets the shim of Extensions.IncompleteUnsettled(Attach attach)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimExtensions.IsReceivedDeliveryStateDelivery">
            <summary>Sets the shim of Extensions.IsReceivedDeliveryState(Delivery delivery)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimExtensions.IsReceiverAttach">
            <summary>Sets the shim of Extensions.IsReceiver(Attach attach)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimExtensions.LinkCreditFlow">
            <summary>Sets the shim of Extensions.LinkCredit(Flow flow)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimExtensions.MaxFrameSizeOpen">
            <summary>Sets the shim of Extensions.MaxFrameSize(Open open)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimExtensions.MaxMessageSizeAttach">
            <summary>Sets the shim of Extensions.MaxMessageSize(Attach attach)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimExtensions.MoreTransfer">
            <summary>Sets the shim of Extensions.More(Transfer transfer)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimExtensions.OutgoingWindowBegin">
            <summary>Sets the shim of Extensions.OutgoingWindow(Begin begin)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimExtensions.PriorityHeader">
            <summary>Sets the shim of Extensions.Priority(Header header)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimExtensions.RemoteChannelBegin">
            <summary>Sets the shim of Extensions.RemoteChannel(Begin begin)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimExtensions.ResumeTransfer">
            <summary>Sets the shim of Extensions.Resume(Transfer transfer)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimExtensions.SettleTypeAttach">
            <summary>Sets the shim of Extensions.SettleType(Attach attach)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimExtensions.SettledDisposition">
            <summary>Sets the shim of Extensions.Settled(Disposition disposition)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimExtensions.SettledTransfer">
            <summary>Sets the shim of Extensions.Settled(Transfer transfer)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimExtensions.TerminusAttach">
            <summary>Sets the shim of Extensions.Terminus(Attach attach)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimExtensions.ToByteBufferArrayArraySegmentOfByteArray">
            <summary>Sets the shim of Extensions.ToByteBufferArray(ArraySegment`1&lt;Byte&gt;[] bufferList)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimExtensions.TrackingIdProperties">
            <summary>Sets the shim of Extensions.TrackingId(Properties properties)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimExtensions.TransactionalDelivery">
            <summary>Sets the shim of Extensions.Transactional(Delivery delivery)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimExtensions.TtlHeader">
            <summary>Sets the shim of Extensions.Ttl(Header header)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimExtensions.UpsertPropertyAttachAmqpSymbolObject">
            <summary>Sets the shim of Extensions.UpsertProperty(Attach attach, AmqpSymbol symbol, Object value)</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.ShimExtensions.UpsertPropertyIfNotDefaultOf1AttachAmqpSymbolM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{Microsoft.Azure.Amqp.Framing.Attach,Microsoft.Azure.Amqp.Encoding.AmqpSymbol,``0})">
            <summary>Sets the shim of Extensions.UpsertPropertyIfNotDefault(Attach attach, AmqpSymbol symbol, !!0 value)</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Fakes.ShimFaultTolerantAmqpObject`1">
            <summary>Shim type of Microsoft.Azure.Amqp.FaultTolerantAmqpObject`1</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.ShimFaultTolerantAmqpObject`1.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.ShimFaultTolerantAmqpObject`1.#ctor(Microsoft.Azure.Amqp.FaultTolerantAmqpObject{`0})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Fakes.ShimFaultTolerantAmqpObject`1.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimFaultTolerantAmqpObject`1.AllInstances.OnCreateAsyncTimeSpan">
            <summary>Sets the shim of FaultTolerantAmqpObject`1.OnCreateAsync(TimeSpan timeout)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimFaultTolerantAmqpObject`1.AllInstances.OnObjectClosedObjectEventArgs">
            <summary>Sets the shim of FaultTolerantAmqpObject`1.OnObjectClosed(Object sender, EventArgs e)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimFaultTolerantAmqpObject`1.AllInstances.OnSafeCloseT0">
            <summary>Sets the shim of FaultTolerantAmqpObject`1.OnSafeClose(!0 value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimFaultTolerantAmqpObject`1.AllInstances.TryGetOpenedObjectT0Out">
            <summary>Sets the shim of FaultTolerantAmqpObject`1.TryGetOpenedObject(!0&amp; openedAmqpObject)</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.ShimFaultTolerantAmqpObject`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.ShimFaultTolerantAmqpObject`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimFaultTolerantAmqpObject`1.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.ShimFaultTolerantAmqpObject`1.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimFaultTolerantAmqpObject`1.ConstructorFuncOfTimeSpanTaskOfT0ActionOfT0">
            <summary>Sets the shim of FaultTolerantAmqpObject`1.FaultTolerantAmqpObject`1(Func`2&lt;TimeSpan,Task`1&lt;!0&gt;&gt; createObjectAsync, Action`1&lt;!0&gt; closeObject)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimFaultTolerantAmqpObject`1.OnCreateAsyncTimeSpan">
            <summary>Sets the shim of FaultTolerantAmqpObject`1.OnCreateAsync(TimeSpan timeout)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimFaultTolerantAmqpObject`1.OnObjectClosedObjectEventArgs">
            <summary>Sets the shim of FaultTolerantAmqpObject`1.OnObjectClosed(Object sender, EventArgs e)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimFaultTolerantAmqpObject`1.OnSafeCloseT0">
            <summary>Sets the shim of FaultTolerantAmqpObject`1.OnSafeClose(!0 value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimFaultTolerantAmqpObject`1.TryGetOpenedObjectT0Out">
            <summary>Sets the shim of FaultTolerantAmqpObject`1.TryGetOpenedObject(!0&amp; openedAmqpObject)</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Fakes.ShimHandleTable`1">
            <summary>Shim type of Microsoft.Azure.Amqp.HandleTable`1</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.ShimHandleTable`1.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.ShimHandleTable`1.#ctor(Microsoft.Azure.Amqp.HandleTable{`0})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimHandleTable`1.AddT0">
            <summary>Sets the shim of HandleTable`1.Add(!0 value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimHandleTable`1.AddUInt32T0">
            <summary>Sets the shim of HandleTable`1.Add(UInt32 handle, !0 value)</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Fakes.ShimHandleTable`1.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimHandleTable`1.AllInstances.AddT0">
            <summary>Sets the shim of HandleTable`1.Add(!0 value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimHandleTable`1.AllInstances.AddUInt32T0">
            <summary>Sets the shim of HandleTable`1.Add(UInt32 handle, !0 value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimHandleTable`1.AllInstances.Clear">
            <summary>Sets the shim of HandleTable`1.Clear()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimHandleTable`1.AllInstances.GetSafeEnumerator">
            <summary>Sets the shim of HandleTable`1.GetSafeEnumerator()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimHandleTable`1.AllInstances.GrowHandleArrayInt32">
            <summary>Sets the shim of HandleTable`1.GrowHandleArray(Int32 capacity)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimHandleTable`1.AllInstances.RemoveUInt32">
            <summary>Sets the shim of HandleTable`1.Remove(UInt32 handle)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimHandleTable`1.AllInstances.SetMaxHandleUInt32">
            <summary>Sets the shim of HandleTable`1.SetMaxHandle(UInt32 maxHandle)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimHandleTable`1.AllInstances.TryGetObjectUInt32T0Out">
            <summary>Sets the shim of HandleTable`1.TryGetObject(UInt32 handle, !0&amp; value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimHandleTable`1.AllInstances.ValuesGet">
            <summary>Sets the shim of HandleTable`1.get_Values()</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.ShimHandleTable`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.ShimHandleTable`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimHandleTable`1.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimHandleTable`1.Clear">
            <summary>Sets the shim of HandleTable`1.Clear()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimHandleTable`1.ConstructorUInt32">
            <summary>Sets the shim of HandleTable`1.HandleTable`1(UInt32 maxHandle)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimHandleTable`1.GetSafeEnumerator">
            <summary>Sets the shim of HandleTable`1.GetSafeEnumerator()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimHandleTable`1.GrowHandleArrayInt32">
            <summary>Sets the shim of HandleTable`1.GrowHandleArray(Int32 capacity)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimHandleTable`1.RemoveUInt32">
            <summary>Sets the shim of HandleTable`1.Remove(UInt32 handle)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimHandleTable`1.SetMaxHandleUInt32">
            <summary>Sets the shim of HandleTable`1.SetMaxHandle(UInt32 maxHandle)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimHandleTable`1.TryGetObjectUInt32T0Out">
            <summary>Sets the shim of HandleTable`1.TryGetObject(UInt32 handle, !0&amp; value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimHandleTable`1.UpperPowerOfTwoInt32Int32">
            <summary>Sets the shim of HandleTable`1.UpperPowerOfTwo(Int32 from, Int32 num)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimHandleTable`1.ValuesGet">
            <summary>Sets the shim of HandleTable`1.get_Values()</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Fakes.ShimOpenEventArgs">
            <summary>Shim type of Microsoft.Azure.Amqp.OpenEventArgs</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.ShimOpenEventArgs.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.ShimOpenEventArgs.#ctor(Microsoft.Azure.Amqp.OpenEventArgs)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Fakes.ShimOpenEventArgs.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimOpenEventArgs.AllInstances.CommandGet">
            <summary>Sets the shim of OpenEventArgs.get_Command()</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.ShimOpenEventArgs.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.ShimOpenEventArgs.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimOpenEventArgs.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimOpenEventArgs.CommandGet">
            <summary>Sets the shim of OpenEventArgs.get_Command()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimOpenEventArgs.ConstructorPerformative">
            <summary>Sets the shim of OpenEventArgs.OpenEventArgs(Performative command)</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Fakes.ShimReceivingAmqpLink">
            <summary>Shim type of Microsoft.Azure.Amqp.ReceivingAmqpLink</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.ShimReceivingAmqpLink.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.ShimReceivingAmqpLink.#ctor(Microsoft.Azure.Amqp.ReceivingAmqpLink)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimReceivingAmqpLink.AbortInternal">
            <summary>Sets the shim of ReceivingAmqpLink.AbortInternal()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimReceivingAmqpLink.AcceptMessageAmqpMessageBoolean">
            <summary>Sets the shim of ReceivingAmqpLink.AcceptMessage(AmqpMessage message, Boolean batchable)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimReceivingAmqpLink.AcceptMessageAmqpMessageBooleanBoolean">
            <summary>Sets the shim of ReceivingAmqpLink.AcceptMessage(AmqpMessage message, Boolean settled, Boolean batchable)</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Fakes.ShimReceivingAmqpLink.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimReceivingAmqpLink.AllInstances.AbortInternal">
            <summary>Sets the shim of ReceivingAmqpLink.AbortInternal()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimReceivingAmqpLink.AllInstances.AcceptMessageAmqpMessageBoolean">
            <summary>Sets the shim of ReceivingAmqpLink.AcceptMessage(AmqpMessage message, Boolean batchable)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimReceivingAmqpLink.AllInstances.AcceptMessageAmqpMessageBooleanBoolean">
            <summary>Sets the shim of ReceivingAmqpLink.AcceptMessage(AmqpMessage message, Boolean settled, Boolean batchable)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimReceivingAmqpLink.AllInstances.AvgMessageSizeGet">
            <summary>Sets the shim of ReceivingAmqpLink.get_AvgMessageSize()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimReceivingAmqpLink.AllInstances.BeginDisposeMessageArraySegmentOfByteOutcomeBooleanTimeSpanAsyncCallbackObject">
            <summary>Sets the shim of ReceivingAmqpLink.BeginDisposeMessage(ArraySegment`1&lt;Byte&gt; deliveryTag, Outcome outcome, Boolean batchable, TimeSpan timeout, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimReceivingAmqpLink.AllInstances.BeginReceiveMessageTimeSpanAsyncCallbackObject">
            <summary>Sets the shim of ReceivingAmqpLink.BeginReceiveMessage(TimeSpan timeout, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimReceivingAmqpLink.AllInstances.BeginReceiveMessagesInt32TimeSpanAsyncCallbackObject">
            <summary>Sets the shim of ReceivingAmqpLink.BeginReceiveMessages(Int32 messageCount, TimeSpan timeout, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimReceivingAmqpLink.AllInstances.BeginReceiveMessagesInt32TimeSpanTimeSpanAsyncCallbackObject">
            <summary>Sets the shim of ReceivingAmqpLink.BeginReceiveMessages(Int32 messageCount, TimeSpan batchWaitTimeout, TimeSpan timeout, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimReceivingAmqpLink.AllInstances.BeginReceiveRemoteMessagesInt32TimeSpanTimeSpanAsyncCallbackObject">
            <summary>Sets the shim of ReceivingAmqpLink.BeginReceiveRemoteMessages(Int32 messageCount, TimeSpan batchWaitTimeout, TimeSpan timeout, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimReceivingAmqpLink.AllInstances.CancelPendingOperationsBooleanQueueOfAmqpMessageOut">
            <summary>Sets the shim of ReceivingAmqpLink.CancelPendingOperations(Boolean aborted, Queue`1&lt;AmqpMessage&gt;&amp; messagesToRelease)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimReceivingAmqpLink.AllInstances.CloseInternal">
            <summary>Sets the shim of ReceivingAmqpLink.CloseInternal()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimReceivingAmqpLink.AllInstances.CreateDeliveryTransferDeliveryOut">
            <summary>Sets the shim of ReceivingAmqpLink.CreateDelivery(Transfer transfer, Delivery&amp; delivery)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimReceivingAmqpLink.AllInstances.DisposeMessageAmqpMessageDeliveryStateBooleanBoolean">
            <summary>Sets the shim of ReceivingAmqpLink.DisposeMessage(AmqpMessage message, DeliveryState state, Boolean settled, Boolean batchable)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimReceivingAmqpLink.AllInstances.DisposeMessageAsyncArraySegmentOfByteOutcomeBooleanTimeSpan">
            <summary>Sets the shim of ReceivingAmqpLink.DisposeMessageAsync(ArraySegment`1&lt;Byte&gt; deliveryTag, Outcome outcome, Boolean batchable, TimeSpan timeout)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimReceivingAmqpLink.AllInstances.EndDisposeMessageIAsyncResult">
            <summary>Sets the shim of ReceivingAmqpLink.EndDisposeMessage(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimReceivingAmqpLink.AllInstances.EndReceiveMessageIAsyncResultAmqpMessageOut">
            <summary>Sets the shim of ReceivingAmqpLink.EndReceiveMessage(IAsyncResult result, AmqpMessage&amp; message)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimReceivingAmqpLink.AllInstances.EndReceiveMessagesIAsyncResultIEnumerableOfAmqpMessageOut">
            <summary>Sets the shim of ReceivingAmqpLink.EndReceiveMessages(IAsyncResult result, IEnumerable`1&lt;AmqpMessage&gt;&amp; messages)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimReceivingAmqpLink.AllInstances.GetOnDemandReceiveCredit">
            <summary>Sets the shim of ReceivingAmqpLink.GetOnDemandReceiveCredit()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimReceivingAmqpLink.AllInstances.MessageQueueCountGet">
            <summary>Sets the shim of ReceivingAmqpLink.get_MessageQueueCount()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimReceivingAmqpLink.AllInstances.MessageQueueSizeGet">
            <summary>Sets the shim of ReceivingAmqpLink.get_MessageQueueSize()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimReceivingAmqpLink.AllInstances.ModifyMessageAmqpMessageBooleanBooleanFields">
            <summary>Sets the shim of ReceivingAmqpLink.ModifyMessage(AmqpMessage message, Boolean deliveryFailed, Boolean deliverElseWhere, Fields messageAttributes)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimReceivingAmqpLink.AllInstances.OnCreditAvailableInt32UInt32BooleanArraySegmentOfByte">
            <summary>Sets the shim of ReceivingAmqpLink.OnCreditAvailable(Int32 session, UInt32 link, Boolean drain, ArraySegment`1&lt;Byte&gt; txnId)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimReceivingAmqpLink.AllInstances.OnDisposeDeliveryInternalDelivery">
            <summary>Sets the shim of ReceivingAmqpLink.OnDisposeDeliveryInternal(Delivery delivery)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimReceivingAmqpLink.AllInstances.OnProcessTransferDeliveryTransferFrame">
            <summary>Sets the shim of ReceivingAmqpLink.OnProcessTransfer(Delivery delivery, Transfer transfer, Frame frame)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimReceivingAmqpLink.AllInstances.OnReceiveMessageAmqpMessage">
            <summary>Sets the shim of ReceivingAmqpLink.OnReceiveMessage(AmqpMessage message)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimReceivingAmqpLink.AllInstances.OnReceiveStateOpenSentAttach">
            <summary>Sets the shim of ReceivingAmqpLink.OnReceiveStateOpenSent(Attach attach)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimReceivingAmqpLink.AllInstances.OpenInternal">
            <summary>Sets the shim of ReceivingAmqpLink.OpenInternal()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimReceivingAmqpLink.AllInstances.ReceiveMessageAsyncTimeSpan">
            <summary>Sets the shim of ReceivingAmqpLink.ReceiveMessageAsync(TimeSpan timeout)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimReceivingAmqpLink.AllInstances.RegisterMessageListenerActionOfAmqpMessage">
            <summary>Sets the shim of ReceivingAmqpLink.RegisterMessageListener(Action`1&lt;AmqpMessage&gt; messageListener)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimReceivingAmqpLink.AllInstances.RejectMessageAmqpMessageException">
            <summary>Sets the shim of ReceivingAmqpLink.RejectMessage(AmqpMessage message, Exception exception)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimReceivingAmqpLink.AllInstances.ReleaseMessageAmqpMessage">
            <summary>Sets the shim of ReceivingAmqpLink.ReleaseMessage(AmqpMessage message)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimReceivingAmqpLink.AllInstances.SetCacheSizeInBytesNullableOfInt64">
            <summary>Sets the shim of ReceivingAmqpLink.SetCacheSizeInBytes(Nullable`1&lt;Int64&gt; cacheSizeInBytes)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimReceivingAmqpLink.AllInstances.TotalCacheSizeInBytesGet">
            <summary>Sets the shim of ReceivingAmqpLink.get_TotalCacheSizeInBytes()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimReceivingAmqpLink.AvgMessageSizeGet">
            <summary>Sets the shim of ReceivingAmqpLink.get_AvgMessageSize()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimReceivingAmqpLink.BeginDisposeMessageArraySegmentOfByteOutcomeBooleanTimeSpanAsyncCallbackObject">
            <summary>Sets the shim of ReceivingAmqpLink.BeginDisposeMessage(ArraySegment`1&lt;Byte&gt; deliveryTag, Outcome outcome, Boolean batchable, TimeSpan timeout, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimReceivingAmqpLink.BeginReceiveMessageTimeSpanAsyncCallbackObject">
            <summary>Sets the shim of ReceivingAmqpLink.BeginReceiveMessage(TimeSpan timeout, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimReceivingAmqpLink.BeginReceiveMessagesInt32TimeSpanAsyncCallbackObject">
            <summary>Sets the shim of ReceivingAmqpLink.BeginReceiveMessages(Int32 messageCount, TimeSpan timeout, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimReceivingAmqpLink.BeginReceiveMessagesInt32TimeSpanTimeSpanAsyncCallbackObject">
            <summary>Sets the shim of ReceivingAmqpLink.BeginReceiveMessages(Int32 messageCount, TimeSpan batchWaitTimeout, TimeSpan timeout, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimReceivingAmqpLink.BeginReceiveRemoteMessagesInt32TimeSpanTimeSpanAsyncCallbackObject">
            <summary>Sets the shim of ReceivingAmqpLink.BeginReceiveRemoteMessages(Int32 messageCount, TimeSpan batchWaitTimeout, TimeSpan timeout, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.ShimReceivingAmqpLink.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.ShimReceivingAmqpLink.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimReceivingAmqpLink.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.ShimReceivingAmqpLink.Bind(Microsoft.Azure.Amqp.IWorkDelegate{Microsoft.Azure.Amqp.Delivery})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimReceivingAmqpLink.CancelPendingOperationsBooleanQueueOfAmqpMessageOut">
            <summary>Sets the shim of ReceivingAmqpLink.CancelPendingOperations(Boolean aborted, Queue`1&lt;AmqpMessage&gt;&amp; messagesToRelease)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimReceivingAmqpLink.CloseInternal">
            <summary>Sets the shim of ReceivingAmqpLink.CloseInternal()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimReceivingAmqpLink.ConstructorAmqpLinkSettings">
            <summary>Sets the shim of ReceivingAmqpLink.ReceivingAmqpLink(AmqpLinkSettings settings)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimReceivingAmqpLink.ConstructorAmqpSessionAmqpLinkSettings">
            <summary>Sets the shim of ReceivingAmqpLink.ReceivingAmqpLink(AmqpSession session, AmqpLinkSettings settings)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimReceivingAmqpLink.CreateDeliveryTransferDeliveryOut">
            <summary>Sets the shim of ReceivingAmqpLink.CreateDelivery(Transfer transfer, Delivery&amp; delivery)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimReceivingAmqpLink.DisposeMessageAmqpMessageDeliveryStateBooleanBoolean">
            <summary>Sets the shim of ReceivingAmqpLink.DisposeMessage(AmqpMessage message, DeliveryState state, Boolean settled, Boolean batchable)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimReceivingAmqpLink.DisposeMessageAsyncArraySegmentOfByteOutcomeBooleanTimeSpan">
            <summary>Sets the shim of ReceivingAmqpLink.DisposeMessageAsync(ArraySegment`1&lt;Byte&gt; deliveryTag, Outcome outcome, Boolean batchable, TimeSpan timeout)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimReceivingAmqpLink.EndDisposeMessageIAsyncResult">
            <summary>Sets the shim of ReceivingAmqpLink.EndDisposeMessage(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimReceivingAmqpLink.EndReceiveMessageIAsyncResultAmqpMessageOut">
            <summary>Sets the shim of ReceivingAmqpLink.EndReceiveMessage(IAsyncResult result, AmqpMessage&amp; message)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimReceivingAmqpLink.EndReceiveMessagesIAsyncResultIEnumerableOfAmqpMessageOut">
            <summary>Sets the shim of ReceivingAmqpLink.EndReceiveMessages(IAsyncResult result, IEnumerable`1&lt;AmqpMessage&gt;&amp; messages)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimReceivingAmqpLink.GetOnDemandReceiveCredit">
            <summary>Sets the shim of ReceivingAmqpLink.GetOnDemandReceiveCredit()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimReceivingAmqpLink.MessageQueueCountGet">
            <summary>Sets the shim of ReceivingAmqpLink.get_MessageQueueCount()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimReceivingAmqpLink.MessageQueueSizeGet">
            <summary>Sets the shim of ReceivingAmqpLink.get_MessageQueueSize()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimReceivingAmqpLink.ModifyMessageAmqpMessageBooleanBooleanFields">
            <summary>Sets the shim of ReceivingAmqpLink.ModifyMessage(AmqpMessage message, Boolean deliveryFailed, Boolean deliverElseWhere, Fields messageAttributes)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimReceivingAmqpLink.OnCreditAvailableInt32UInt32BooleanArraySegmentOfByte">
            <summary>Sets the shim of ReceivingAmqpLink.OnCreditAvailable(Int32 session, UInt32 link, Boolean drain, ArraySegment`1&lt;Byte&gt; txnId)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimReceivingAmqpLink.OnDisposeDeliveryInternalDelivery">
            <summary>Sets the shim of ReceivingAmqpLink.OnDisposeDeliveryInternal(Delivery delivery)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimReceivingAmqpLink.OnProcessTransferDeliveryTransferFrame">
            <summary>Sets the shim of ReceivingAmqpLink.OnProcessTransfer(Delivery delivery, Transfer transfer, Frame frame)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimReceivingAmqpLink.OnReceiveMessageAmqpMessage">
            <summary>Sets the shim of ReceivingAmqpLink.OnReceiveMessage(AmqpMessage message)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimReceivingAmqpLink.OnReceiveStateOpenSentAttach">
            <summary>Sets the shim of ReceivingAmqpLink.OnReceiveStateOpenSent(Attach attach)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimReceivingAmqpLink.OpenInternal">
            <summary>Sets the shim of ReceivingAmqpLink.OpenInternal()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimReceivingAmqpLink.ReceiveMessageAsyncTimeSpan">
            <summary>Sets the shim of ReceivingAmqpLink.ReceiveMessageAsync(TimeSpan timeout)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimReceivingAmqpLink.RegisterMessageListenerActionOfAmqpMessage">
            <summary>Sets the shim of ReceivingAmqpLink.RegisterMessageListener(Action`1&lt;AmqpMessage&gt; messageListener)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimReceivingAmqpLink.RejectMessageAmqpMessageException">
            <summary>Sets the shim of ReceivingAmqpLink.RejectMessage(AmqpMessage message, Exception exception)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimReceivingAmqpLink.ReleaseMessageAmqpMessage">
            <summary>Sets the shim of ReceivingAmqpLink.ReleaseMessage(AmqpMessage message)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimReceivingAmqpLink.SetCacheSizeInBytesNullableOfInt64">
            <summary>Sets the shim of ReceivingAmqpLink.SetCacheSizeInBytes(Nullable`1&lt;Int64&gt; cacheSizeInBytes)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimReceivingAmqpLink.StaticConstructor">
            <summary>Sets the shim of ReceivingAmqpLink.ReceivingAmqpLink()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimReceivingAmqpLink.TotalCacheSizeInBytesGet">
            <summary>Sets the shim of ReceivingAmqpLink.get_TotalCacheSizeInBytes()</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Fakes.ShimRequestResponseAmqpLink">
            <summary>Shim type of Microsoft.Azure.Amqp.RequestResponseAmqpLink</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.ShimRequestResponseAmqpLink.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.ShimRequestResponseAmqpLink.#ctor(Microsoft.Azure.Amqp.RequestResponseAmqpLink)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimRequestResponseAmqpLink.AbortInternal">
            <summary>Sets the shim of RequestResponseAmqpLink.AbortInternal()</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Fakes.ShimRequestResponseAmqpLink.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimRequestResponseAmqpLink.AllInstances.AbortInternal">
            <summary>Sets the shim of RequestResponseAmqpLink.AbortInternal()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimRequestResponseAmqpLink.AllInstances.BeginRequestAmqpMessageTimeSpanAsyncCallbackObject">
            <summary>Sets the shim of RequestResponseAmqpLink.BeginRequest(AmqpMessage request, TimeSpan timeout, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimRequestResponseAmqpLink.AllInstances.CloseInternal">
            <summary>Sets the shim of RequestResponseAmqpLink.CloseInternal()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimRequestResponseAmqpLink.AllInstances.EndRequestIAsyncResult">
            <summary>Sets the shim of RequestResponseAmqpLink.EndRequest(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimRequestResponseAmqpLink.AllInstances.NameGet">
            <summary>Sets the shim of RequestResponseAmqpLink.get_Name()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimRequestResponseAmqpLink.AllInstances.NameSetString">
            <summary>Sets the shim of RequestResponseAmqpLink.set_Name(String value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimRequestResponseAmqpLink.AllInstances.OnLinkClosedObjectEventArgs">
            <summary>Sets the shim of RequestResponseAmqpLink.OnLinkClosed(Object sender, EventArgs e)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimRequestResponseAmqpLink.AllInstances.OnResponseMessageAmqpMessage">
            <summary>Sets the shim of RequestResponseAmqpLink.OnResponseMessage(AmqpMessage response)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimRequestResponseAmqpLink.AllInstances.OpenInternal">
            <summary>Sets the shim of RequestResponseAmqpLink.OpenInternal()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimRequestResponseAmqpLink.AllInstances.ReceivingLinkGet">
            <summary>Sets the shim of RequestResponseAmqpLink.get_ReceivingLink()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimRequestResponseAmqpLink.AllInstances.RequestAsyncAmqpMessageTimeSpan">
            <summary>Sets the shim of RequestResponseAmqpLink.RequestAsync(AmqpMessage request, TimeSpan timeout)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimRequestResponseAmqpLink.AllInstances.RequestPropertiesGet">
            <summary>Sets the shim of RequestResponseAmqpLink.get_RequestProperties()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimRequestResponseAmqpLink.AllInstances.SendPropertiesFields">
            <summary>Sets the shim of RequestResponseAmqpLink.SendProperties(Fields fields)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimRequestResponseAmqpLink.AllInstances.SendingLinkGet">
            <summary>Sets the shim of RequestResponseAmqpLink.get_SendingLink()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimRequestResponseAmqpLink.AllInstances.SessionGet">
            <summary>Sets the shim of RequestResponseAmqpLink.get_Session()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimRequestResponseAmqpLink.BeginRequestAmqpMessageTimeSpanAsyncCallbackObject">
            <summary>Sets the shim of RequestResponseAmqpLink.BeginRequest(AmqpMessage request, TimeSpan timeout, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.ShimRequestResponseAmqpLink.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.ShimRequestResponseAmqpLink.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimRequestResponseAmqpLink.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimRequestResponseAmqpLink.CloseInternal">
            <summary>Sets the shim of RequestResponseAmqpLink.CloseInternal()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimRequestResponseAmqpLink.ConstructorStringAmqpSessionStringFields">
            <summary>Sets the shim of RequestResponseAmqpLink.RequestResponseAmqpLink(String type, AmqpSession session, String address, Fields properties)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimRequestResponseAmqpLink.ConstructorStringStringAmqpSessionString">
            <summary>Sets the shim of RequestResponseAmqpLink.RequestResponseAmqpLink(String type, String name, AmqpSession session, String address)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimRequestResponseAmqpLink.ConstructorStringStringAmqpSessionStringFields">
            <summary>Sets the shim of RequestResponseAmqpLink.RequestResponseAmqpLink(String type, String name, AmqpSession session, String address, Fields properties)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimRequestResponseAmqpLink.EndRequestIAsyncResult">
            <summary>Sets the shim of RequestResponseAmqpLink.EndRequest(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimRequestResponseAmqpLink.NameGet">
            <summary>Sets the shim of RequestResponseAmqpLink.get_Name()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimRequestResponseAmqpLink.NameSetString">
            <summary>Sets the shim of RequestResponseAmqpLink.set_Name(String value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimRequestResponseAmqpLink.OnLinkClosedObjectEventArgs">
            <summary>Sets the shim of RequestResponseAmqpLink.OnLinkClosed(Object sender, EventArgs e)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimRequestResponseAmqpLink.OnOperationCompleteIAsyncResultBooleanBoolean">
            <summary>Sets the shim of RequestResponseAmqpLink.OnOperationComplete(IAsyncResult result, Boolean isSender, Boolean isOpen)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimRequestResponseAmqpLink.OnReceiverCloseIAsyncResult">
            <summary>Sets the shim of RequestResponseAmqpLink.OnReceiverClose(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimRequestResponseAmqpLink.OnReceiverOpenIAsyncResult">
            <summary>Sets the shim of RequestResponseAmqpLink.OnReceiverOpen(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimRequestResponseAmqpLink.OnResponseMessageAmqpMessage">
            <summary>Sets the shim of RequestResponseAmqpLink.OnResponseMessage(AmqpMessage response)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimRequestResponseAmqpLink.OnSenderCloseIAsyncResult">
            <summary>Sets the shim of RequestResponseAmqpLink.OnSenderClose(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimRequestResponseAmqpLink.OnSenderOpenIAsyncResult">
            <summary>Sets the shim of RequestResponseAmqpLink.OnSenderOpen(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimRequestResponseAmqpLink.OpenInternal">
            <summary>Sets the shim of RequestResponseAmqpLink.OpenInternal()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimRequestResponseAmqpLink.ReceivingLinkGet">
            <summary>Sets the shim of RequestResponseAmqpLink.get_ReceivingLink()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimRequestResponseAmqpLink.RequestAsyncAmqpMessageTimeSpan">
            <summary>Sets the shim of RequestResponseAmqpLink.RequestAsync(AmqpMessage request, TimeSpan timeout)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimRequestResponseAmqpLink.RequestPropertiesGet">
            <summary>Sets the shim of RequestResponseAmqpLink.get_RequestProperties()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimRequestResponseAmqpLink.SendPropertiesFields">
            <summary>Sets the shim of RequestResponseAmqpLink.SendProperties(Fields fields)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimRequestResponseAmqpLink.SendingLinkGet">
            <summary>Sets the shim of RequestResponseAmqpLink.get_SendingLink()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimRequestResponseAmqpLink.SessionGet">
            <summary>Sets the shim of RequestResponseAmqpLink.get_Session()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimRequestResponseAmqpLink.StaticConstructor">
            <summary>Sets the shim of RequestResponseAmqpLink.RequestResponseAmqpLink()</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Fakes.ShimSendingAmqpLink">
            <summary>Shim type of Microsoft.Azure.Amqp.SendingAmqpLink</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.ShimSendingAmqpLink.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.ShimSendingAmqpLink.#ctor(Microsoft.Azure.Amqp.SendingAmqpLink)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimSendingAmqpLink.AbortDeliveries">
            <summary>Sets the shim of SendingAmqpLink.AbortDeliveries()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimSendingAmqpLink.AbortInternal">
            <summary>Sets the shim of SendingAmqpLink.AbortInternal()</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Fakes.ShimSendingAmqpLink.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimSendingAmqpLink.AllInstances.AbortDeliveries">
            <summary>Sets the shim of SendingAmqpLink.AbortDeliveries()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimSendingAmqpLink.AllInstances.AbortInternal">
            <summary>Sets the shim of SendingAmqpLink.AbortInternal()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimSendingAmqpLink.AllInstances.AvailableGet">
            <summary>Sets the shim of SendingAmqpLink.get_Available()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimSendingAmqpLink.AllInstances.BeginSendMessageAmqpMessageArraySegmentOfByteArraySegmentOfByteTimeSpanAsyncCallbackObject">
            <summary>Sets the shim of SendingAmqpLink.BeginSendMessage(AmqpMessage message, ArraySegment`1&lt;Byte&gt; deliveryTag, ArraySegment`1&lt;Byte&gt; txnId, TimeSpan timeout, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimSendingAmqpLink.AllInstances.CloseInternal">
            <summary>Sets the shim of SendingAmqpLink.CloseInternal()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimSendingAmqpLink.AllInstances.CreateDeliveryTransferDeliveryOut">
            <summary>Sets the shim of SendingAmqpLink.CreateDelivery(Transfer transfer, Delivery&amp; delivery)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimSendingAmqpLink.AllInstances.EndSendMessageIAsyncResult">
            <summary>Sets the shim of SendingAmqpLink.EndSendMessage(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimSendingAmqpLink.AllInstances.MicrosoftAzureAmqpIWorkDelegateMicrosoftAzureAmqpAmqpMessageInvokeAmqpMessage">
            <summary>Sets the shim of SendingAmqpLink.Microsoft.Azure.Amqp.IWorkDelegate&lt;Microsoft.Azure.Amqp.AmqpMessage&gt;.Invoke(AmqpMessage message)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimSendingAmqpLink.AllInstances.OnCreditAvailableInt32UInt32BooleanArraySegmentOfByte">
            <summary>Sets the shim of SendingAmqpLink.OnCreditAvailable(Int32 session, UInt32 link, Boolean drain, ArraySegment`1&lt;Byte&gt; txnId)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimSendingAmqpLink.AllInstances.OnDisposeDeliveryInternalDelivery">
            <summary>Sets the shim of SendingAmqpLink.OnDisposeDeliveryInternal(Delivery delivery)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimSendingAmqpLink.AllInstances.OnProcessTransferDeliveryTransferFrame">
            <summary>Sets the shim of SendingAmqpLink.OnProcessTransfer(Delivery delivery, Transfer transfer, Frame frame)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimSendingAmqpLink.AllInstances.RegisterCreditListenerActionOfUInt32BooleanArraySegmentOfByte">
            <summary>Sets the shim of SendingAmqpLink.RegisterCreditListener(Action`3&lt;UInt32,Boolean,ArraySegment`1&lt;Byte&gt;&gt; creditListener)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimSendingAmqpLink.AllInstances.RegisterDispositionListenerActionOfDelivery">
            <summary>Sets the shim of SendingAmqpLink.RegisterDispositionListener(Action`1&lt;Delivery&gt; dispositionListener)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimSendingAmqpLink.AllInstances.SendMessageAsyncAmqpMessageArraySegmentOfByteArraySegmentOfByteTimeSpan">
            <summary>Sets the shim of SendingAmqpLink.SendMessageAsync(AmqpMessage message, ArraySegment`1&lt;Byte&gt; deliveryTag, ArraySegment`1&lt;Byte&gt; txnId, TimeSpan timeout)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimSendingAmqpLink.AllInstances.SendMessageInternalAmqpMessageArraySegmentOfByteArraySegmentOfByte">
            <summary>Sets the shim of SendingAmqpLink.SendMessageInternal(AmqpMessage message, ArraySegment`1&lt;Byte&gt; deliveryTag, ArraySegment`1&lt;Byte&gt; txnId)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimSendingAmqpLink.AllInstances.SendMessageNoWaitAmqpMessageArraySegmentOfByteArraySegmentOfByte">
            <summary>Sets the shim of SendingAmqpLink.SendMessageNoWait(AmqpMessage message, ArraySegment`1&lt;Byte&gt; deliveryTag, ArraySegment`1&lt;Byte&gt; txnId)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimSendingAmqpLink.AvailableGet">
            <summary>Sets the shim of SendingAmqpLink.get_Available()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimSendingAmqpLink.BeginSendMessageAmqpMessageArraySegmentOfByteArraySegmentOfByteTimeSpanAsyncCallbackObject">
            <summary>Sets the shim of SendingAmqpLink.BeginSendMessage(AmqpMessage message, ArraySegment`1&lt;Byte&gt; deliveryTag, ArraySegment`1&lt;Byte&gt; txnId, TimeSpan timeout, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.ShimSendingAmqpLink.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.ShimSendingAmqpLink.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimSendingAmqpLink.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.ShimSendingAmqpLink.Bind(Microsoft.Azure.Amqp.IWorkDelegate{Microsoft.Azure.Amqp.AmqpMessage})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.ShimSendingAmqpLink.Bind(Microsoft.Azure.Amqp.IWorkDelegate{Microsoft.Azure.Amqp.Delivery})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimSendingAmqpLink.CloseInternal">
            <summary>Sets the shim of SendingAmqpLink.CloseInternal()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimSendingAmqpLink.ConstructorAmqpLinkSettings">
            <summary>Sets the shim of SendingAmqpLink.SendingAmqpLink(AmqpLinkSettings settings)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimSendingAmqpLink.ConstructorAmqpSessionAmqpLinkSettings">
            <summary>Sets the shim of SendingAmqpLink.SendingAmqpLink(AmqpSession session, AmqpLinkSettings settings)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimSendingAmqpLink.CreateDeliveryTransferDeliveryOut">
            <summary>Sets the shim of SendingAmqpLink.CreateDelivery(Transfer transfer, Delivery&amp; delivery)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimSendingAmqpLink.EndSendMessageIAsyncResult">
            <summary>Sets the shim of SendingAmqpLink.EndSendMessage(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimSendingAmqpLink.MicrosoftAzureAmqpIWorkDelegateMicrosoftAzureAmqpAmqpMessageInvokeAmqpMessage">
            <summary>Sets the shim of SendingAmqpLink.Microsoft.Azure.Amqp.IWorkDelegate&lt;Microsoft.Azure.Amqp.AmqpMessage&gt;.Invoke(AmqpMessage message)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimSendingAmqpLink.OnCreditAvailableInt32UInt32BooleanArraySegmentOfByte">
            <summary>Sets the shim of SendingAmqpLink.OnCreditAvailable(Int32 session, UInt32 link, Boolean drain, ArraySegment`1&lt;Byte&gt; txnId)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimSendingAmqpLink.OnDisposeDeliveryInternalDelivery">
            <summary>Sets the shim of SendingAmqpLink.OnDisposeDeliveryInternal(Delivery delivery)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimSendingAmqpLink.OnProcessTransferDeliveryTransferFrame">
            <summary>Sets the shim of SendingAmqpLink.OnProcessTransfer(Delivery delivery, Transfer transfer, Frame frame)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimSendingAmqpLink.OnRequestCreditObject">
            <summary>Sets the shim of SendingAmqpLink.OnRequestCredit(Object state)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimSendingAmqpLink.RegisterCreditListenerActionOfUInt32BooleanArraySegmentOfByte">
            <summary>Sets the shim of SendingAmqpLink.RegisterCreditListener(Action`3&lt;UInt32,Boolean,ArraySegment`1&lt;Byte&gt;&gt; creditListener)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimSendingAmqpLink.RegisterDispositionListenerActionOfDelivery">
            <summary>Sets the shim of SendingAmqpLink.RegisterDispositionListener(Action`1&lt;Delivery&gt; dispositionListener)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimSendingAmqpLink.SendMessageAsyncAmqpMessageArraySegmentOfByteArraySegmentOfByteTimeSpan">
            <summary>Sets the shim of SendingAmqpLink.SendMessageAsync(AmqpMessage message, ArraySegment`1&lt;Byte&gt; deliveryTag, ArraySegment`1&lt;Byte&gt; txnId, TimeSpan timeout)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimSendingAmqpLink.SendMessageInternalAmqpMessageArraySegmentOfByteArraySegmentOfByte">
            <summary>Sets the shim of SendingAmqpLink.SendMessageInternal(AmqpMessage message, ArraySegment`1&lt;Byte&gt; deliveryTag, ArraySegment`1&lt;Byte&gt; txnId)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimSendingAmqpLink.SendMessageNoWaitAmqpMessageArraySegmentOfByteArraySegmentOfByte">
            <summary>Sets the shim of SendingAmqpLink.SendMessageNoWait(AmqpMessage message, ArraySegment`1&lt;Byte&gt; deliveryTag, ArraySegment`1&lt;Byte&gt; txnId)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimSendingAmqpLink.StaticConstructor">
            <summary>Sets the shim of SendingAmqpLink.SendingAmqpLink()</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Fakes.ShimSequenceNumber">
            <summary>Shim type of Microsoft.Azure.Amqp.SequenceNumber</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.ShimSequenceNumber.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimSequenceNumber.AdditionOpSequenceNumberInt32">
            <summary>Sets the shim of SequenceNumber.op_Addition(SequenceNumber value1, Int32 delta)</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Fakes.ShimSequenceNumber.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.ShimSequenceNumber.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.ShimSequenceNumber.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimSequenceNumber.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimSequenceNumber.CompareInt32Int32">
            <summary>Sets the shim of SequenceNumber.Compare(Int32 x, Int32 y)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimSequenceNumber.EqualityOpSequenceNumberSequenceNumber">
            <summary>Sets the shim of SequenceNumber.op_Equality(SequenceNumber value1, SequenceNumber value2)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimSequenceNumber.GreaterThanOpSequenceNumberSequenceNumber">
            <summary>Sets the shim of SequenceNumber.op_GreaterThan(SequenceNumber value1, SequenceNumber value2)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimSequenceNumber.GreaterThanOrEqualOpSequenceNumberSequenceNumber">
            <summary>Sets the shim of SequenceNumber.op_GreaterThanOrEqual(SequenceNumber value1, SequenceNumber value2)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimSequenceNumber.ImplicitOpUInt32SequenceNumber">
            <summary>Sets the shim of SequenceNumber.op_Implicit(UInt32 value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimSequenceNumber.IncrementInt32Ref">
            <summary>Sets the shim of SequenceNumber.Increment(Int32&amp; sn)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimSequenceNumber.InequalityOpSequenceNumberSequenceNumber">
            <summary>Sets the shim of SequenceNumber.op_Inequality(SequenceNumber value1, SequenceNumber value2)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimSequenceNumber.LessThanOpSequenceNumberSequenceNumber">
            <summary>Sets the shim of SequenceNumber.op_LessThan(SequenceNumber value1, SequenceNumber value2)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimSequenceNumber.LessThanOrEqualOpSequenceNumberSequenceNumber">
            <summary>Sets the shim of SequenceNumber.op_LessThanOrEqual(SequenceNumber value1, SequenceNumber value2)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimSequenceNumber.SubtractionOpSequenceNumberInt32">
            <summary>Sets the shim of SequenceNumber.op_Subtraction(SequenceNumber value1, Int32 delta)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimSequenceNumber.SubtractionOpSequenceNumberSequenceNumber">
            <summary>Sets the shim of SequenceNumber.op_Subtraction(SequenceNumber value1, SequenceNumber value2)</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Fakes.ShimSerializedWorker`1">
            <summary>Shim type of Microsoft.Azure.Amqp.SerializedWorker`1</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.ShimSerializedWorker`1.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.ShimSerializedWorker`1.#ctor(Microsoft.Azure.Amqp.SerializedWorker{`0})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimSerializedWorker`1.Abort">
            <summary>Sets the shim of SerializedWorker`1.Abort()</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Fakes.ShimSerializedWorker`1.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimSerializedWorker`1.AllInstances.Abort">
            <summary>Sets the shim of SerializedWorker`1.Abort()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimSerializedWorker`1.AllInstances.ContinueWork">
            <summary>Sets the shim of SerializedWorker`1.ContinueWork()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimSerializedWorker`1.AllInstances.CountGet">
            <summary>Sets the shim of SerializedWorker`1.get_Count()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimSerializedWorker`1.AllInstances.DoWorkInternalT0Boolean">
            <summary>Sets the shim of SerializedWorker`1.DoWorkInternal(!0 work, Boolean fromList)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimSerializedWorker`1.AllInstances.DoWorkT0">
            <summary>Sets the shim of SerializedWorker`1.DoWork(!0 work)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimSerializedWorker`1.AllInstances.SyncRootGet">
            <summary>Sets the shim of SerializedWorker`1.get_SyncRoot()</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.ShimSerializedWorker`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.ShimSerializedWorker`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimSerializedWorker`1.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimSerializedWorker`1.ConstructorIWorkDelegateOfT0">
            <summary>Sets the shim of SerializedWorker`1.SerializedWorker`1(IWorkDelegate`1&lt;!0&gt; workProcessor)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimSerializedWorker`1.ContinueWork">
            <summary>Sets the shim of SerializedWorker`1.ContinueWork()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimSerializedWorker`1.CountGet">
            <summary>Sets the shim of SerializedWorker`1.get_Count()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimSerializedWorker`1.DoWorkInternalT0Boolean">
            <summary>Sets the shim of SerializedWorker`1.DoWorkInternal(!0 work, Boolean fromList)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimSerializedWorker`1.DoWorkT0">
            <summary>Sets the shim of SerializedWorker`1.DoWork(!0 work)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimSerializedWorker`1.SyncRootGet">
            <summary>Sets the shim of SerializedWorker`1.get_SyncRoot()</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Fakes.ShimSingleton`1">
            <summary>Shim type of Microsoft.Azure.Amqp.Singleton`1</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.ShimSingleton`1.#ctor(Microsoft.Azure.Amqp.Singleton{`0})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Fakes.ShimSingleton`1.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimSingleton`1.AllInstances.Close">
            <summary>Sets the shim of Singleton`1.Close()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimSingleton`1.AllInstances.CloseAsync">
            <summary>Sets the shim of Singleton`1.CloseAsync()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimSingleton`1.AllInstances.CreateValueTaskCompletionSourceOfT0TimeSpan">
            <summary>Sets the shim of Singleton`1.CreateValue(TaskCompletionSource`1&lt;!0&gt; tcs, TimeSpan timeout)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimSingleton`1.AllInstances.Dispose">
            <summary>Sets the shim of Singleton`1.Dispose()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimSingleton`1.AllInstances.DisposeBoolean">
            <summary>Sets the shim of Singleton`1.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimSingleton`1.AllInstances.GetOrCreateAsyncTimeSpan">
            <summary>Sets the shim of Singleton`1.GetOrCreateAsync(TimeSpan timeout)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimSingleton`1.AllInstances.InvalidateT0">
            <summary>Sets the shim of Singleton`1.Invalidate(!0 instance)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimSingleton`1.AllInstances.OpenAsyncTimeSpan">
            <summary>Sets the shim of Singleton`1.OpenAsync(TimeSpan timeout)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimSingleton`1.AllInstances.TaskCompletionSourceGet">
            <summary>Sets the shim of Singleton`1.get_TaskCompletionSource()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimSingleton`1.AllInstances.TryGetTaskCompletionSourceOfT0Out">
            <summary>Sets the shim of Singleton`1.TryGet(TaskCompletionSource`1&lt;!0&gt;&amp; tcs)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimSingleton`1.AllInstances.TryRemove">
            <summary>Sets the shim of Singleton`1.TryRemove()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimSingleton`1.AllInstances.TrySetTaskCompletionSourceOfT0">
            <summary>Sets the shim of Singleton`1.TrySet(TaskCompletionSource`1&lt;!0&gt; tcs)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimSingleton`1.AllInstances.ValueGet">
            <summary>Sets the shim of Singleton`1.get_Value()</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.ShimSingleton`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.ShimSingleton`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimSingleton`1.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.ShimSingleton`1.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimSingleton`1.Close">
            <summary>Sets the shim of Singleton`1.Close()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimSingleton`1.CloseAsync">
            <summary>Sets the shim of Singleton`1.CloseAsync()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimSingleton`1.Constructor">
            <summary>Sets the shim of Singleton`1.Singleton`1()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimSingleton`1.CreateValueTaskCompletionSourceOfT0TimeSpan">
            <summary>Sets the shim of Singleton`1.CreateValue(TaskCompletionSource`1&lt;!0&gt; tcs, TimeSpan timeout)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimSingleton`1.Dispose">
            <summary>Sets the shim of Singleton`1.Dispose()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimSingleton`1.DisposeBoolean">
            <summary>Sets the shim of Singleton`1.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimSingleton`1.GetOrCreateAsyncTimeSpan">
            <summary>Sets the shim of Singleton`1.GetOrCreateAsync(TimeSpan timeout)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimSingleton`1.InvalidateT0">
            <summary>Sets the shim of Singleton`1.Invalidate(!0 instance)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimSingleton`1.OpenAsyncTimeSpan">
            <summary>Sets the shim of Singleton`1.OpenAsync(TimeSpan timeout)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimSingleton`1.TaskCompletionSourceGet">
            <summary>Sets the shim of Singleton`1.get_TaskCompletionSource()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimSingleton`1.TryGetTaskCompletionSourceOfT0Out">
            <summary>Sets the shim of Singleton`1.TryGet(TaskCompletionSource`1&lt;!0&gt;&amp; tcs)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimSingleton`1.TryRemove">
            <summary>Sets the shim of Singleton`1.TryRemove()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimSingleton`1.TrySetTaskCompletionSourceOfT0">
            <summary>Sets the shim of Singleton`1.TrySet(TaskCompletionSource`1&lt;!0&gt; tcs)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimSingleton`1.ValueGet">
            <summary>Sets the shim of Singleton`1.get_Value()</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Fakes.ShimStateTransition">
            <summary>Shim type of Microsoft.Azure.Amqp.StateTransition</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.ShimStateTransition.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.ShimStateTransition.#ctor(Microsoft.Azure.Amqp.StateTransition)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Fakes.ShimStateTransition.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimStateTransition.AllInstances.FromGet">
            <summary>Sets the shim of StateTransition.get_From()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimStateTransition.AllInstances.FromSetAmqpObjectState">
            <summary>Sets the shim of StateTransition.set_From(AmqpObjectState value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimStateTransition.AllInstances.ToGet">
            <summary>Sets the shim of StateTransition.get_To()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimStateTransition.AllInstances.ToSetAmqpObjectState">
            <summary>Sets the shim of StateTransition.set_To(AmqpObjectState value)</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.ShimStateTransition.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.ShimStateTransition.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimStateTransition.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimStateTransition.CanTransiteAmqpObjectStateStateTransitionArray">
            <summary>Sets the shim of StateTransition.CanTransite(AmqpObjectState from, StateTransition[] states)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimStateTransition.ConstructorAmqpObjectStateAmqpObjectState">
            <summary>Sets the shim of StateTransition.StateTransition(AmqpObjectState from, AmqpObjectState to)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimStateTransition.FromGet">
            <summary>Sets the shim of StateTransition.get_From()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimStateTransition.FromSetAmqpObjectState">
            <summary>Sets the shim of StateTransition.set_From(AmqpObjectState value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimStateTransition.ReceiveCloseGet">
            <summary>Sets the shim of StateTransition.get_ReceiveClose()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimStateTransition.ReceiveHeaderGet">
            <summary>Sets the shim of StateTransition.get_ReceiveHeader()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimStateTransition.ReceiveOpenGet">
            <summary>Sets the shim of StateTransition.get_ReceiveOpen()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimStateTransition.SendCloseGet">
            <summary>Sets the shim of StateTransition.get_SendClose()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimStateTransition.SendHeaderGet">
            <summary>Sets the shim of StateTransition.get_SendHeader()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimStateTransition.SendOpenGet">
            <summary>Sets the shim of StateTransition.get_SendOpen()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimStateTransition.StaticConstructor">
            <summary>Sets the shim of StateTransition.StateTransition()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimStateTransition.ToGet">
            <summary>Sets the shim of StateTransition.get_To()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.ShimStateTransition.ToSetAmqpObjectState">
            <summary>Sets the shim of StateTransition.set_To(AmqpObjectState value)</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Fakes.StubAmqpConnection">
            <summary>Stub type of Microsoft.Azure.Amqp.AmqpConnection</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.StubAmqpConnection.#ctor(Microsoft.Azure.Amqp.Transport.TransportBase,Microsoft.Azure.Amqp.AmqpSettings,Microsoft.Azure.Amqp.AmqpConnectionSettings)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.StubAmqpConnection.#ctor(Microsoft.Azure.Amqp.Transport.TransportBase,Microsoft.Azure.Amqp.Framing.ProtocolHeader,Microsoft.Azure.Amqp.AmqpSettings,Microsoft.Azure.Amqp.AmqpConnectionSettings)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.StubAmqpConnection.#ctor(Microsoft.Azure.Amqp.Transport.TransportBase,Microsoft.Azure.Amqp.Framing.ProtocolHeader,System.Boolean,Microsoft.Azure.Amqp.AmqpSettings,Microsoft.Azure.Amqp.AmqpConnectionSettings)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.StubAmqpConnection.AbortInternal">
            <summary>Sets the stub of AmqpConnection.AbortInternal()</summary>
        </member>
        <member name="F:Microsoft.Azure.Amqp.Fakes.StubAmqpConnection.AbortInternal01">
            <summary>Sets the stub of AmqpConnection.AbortInternal()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.StubAmqpConnection.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.StubAmqpConnection.CloseInternal">
            <summary>Sets the stub of AmqpConnection.CloseInternal()</summary>
        </member>
        <member name="F:Microsoft.Azure.Amqp.Fakes.StubAmqpConnection.CloseInternal01">
            <summary>Sets the stub of AmqpConnection.CloseInternal()</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.StubAmqpConnection.HandleIoEvent(Microsoft.Azure.Amqp.IoEvent)">
            <summary>Sets the stub of AmqpConnection.HandleIoEvent(IoEvent ioEvent)</summary>
        </member>
        <member name="F:Microsoft.Azure.Amqp.Fakes.StubAmqpConnection.HandleIoEventIoEvent">
            <summary>Sets the stub of AmqpConnection.HandleIoEvent(IoEvent ioEvent)</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.StubAmqpConnection.InitializeStub">
            <summary>Initializes a new instance of type StubAmqpConnection</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.StubAmqpConnection.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.StubAmqpConnection.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.StubAmqpConnection.OnClose(System.TimeSpan)">
            <summary>Sets the stub of AmqpObject.OnClose(TimeSpan timeout)</summary>
        </member>
        <member name="F:Microsoft.Azure.Amqp.Fakes.StubAmqpConnection.OnCloseTimeSpan">
            <summary>Sets the stub of AmqpObject.OnClose(TimeSpan timeout)</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.StubAmqpConnection.OnFrameBuffer(Microsoft.Azure.Amqp.ByteBuffer)">
            <summary>Sets the stub of AmqpConnection.OnFrameBuffer(ByteBuffer buffer)</summary>
        </member>
        <member name="F:Microsoft.Azure.Amqp.Fakes.StubAmqpConnection.OnFrameBufferByteBuffer">
            <summary>Sets the stub of AmqpConnection.OnFrameBuffer(ByteBuffer buffer)</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.StubAmqpConnection.OnOpen(System.TimeSpan)">
            <summary>Sets the stub of AmqpObject.OnOpen(TimeSpan timeout)</summary>
        </member>
        <member name="F:Microsoft.Azure.Amqp.Fakes.StubAmqpConnection.OnOpenTimeSpan">
            <summary>Sets the stub of AmqpObject.OnOpen(TimeSpan timeout)</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.StubAmqpConnection.OnProtocolHeader(Microsoft.Azure.Amqp.Framing.ProtocolHeader)">
            <summary>Sets the stub of AmqpConnection.OnProtocolHeader(ProtocolHeader header)</summary>
        </member>
        <member name="F:Microsoft.Azure.Amqp.Fakes.StubAmqpConnection.OnProtocolHeaderProtocolHeader">
            <summary>Sets the stub of AmqpConnection.OnProtocolHeader(ProtocolHeader header)</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.StubAmqpConnection.OpenInternal">
            <summary>Sets the stub of AmqpConnection.OpenInternal()</summary>
        </member>
        <member name="F:Microsoft.Azure.Amqp.Fakes.StubAmqpConnection.OpenInternal01">
            <summary>Sets the stub of AmqpConnection.OpenInternal()</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.StubAmqpConnection.ToString">
            <summary>Sets the stub of AmqpObject.ToString()</summary>
        </member>
        <member name="F:Microsoft.Azure.Amqp.Fakes.StubAmqpConnection.ToString01">
            <summary>Sets the stub of AmqpObject.ToString()</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Fakes.StubAmqpConnectionBase">
            <summary>Stub type of Microsoft.Azure.Amqp.AmqpConnectionBase</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.StubAmqpConnectionBase.#ctor(System.String,Microsoft.Azure.Amqp.Transport.TransportBase,Microsoft.Azure.Amqp.AmqpConnectionSettings,System.Boolean)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.StubAmqpConnectionBase.AbortInternal">
            <summary>Sets the stub of AmqpObject.AbortInternal()</summary>
        </member>
        <member name="F:Microsoft.Azure.Amqp.Fakes.StubAmqpConnectionBase.AbortInternal01">
            <summary>Sets the stub of AmqpObject.AbortInternal()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.StubAmqpConnectionBase.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.StubAmqpConnectionBase.CloseInternal">
            <summary>Sets the stub of AmqpObject.CloseInternal()</summary>
        </member>
        <member name="F:Microsoft.Azure.Amqp.Fakes.StubAmqpConnectionBase.CloseInternal01">
            <summary>Sets the stub of AmqpObject.CloseInternal()</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.StubAmqpConnectionBase.HandleIoEvent(Microsoft.Azure.Amqp.IoEvent)">
            <summary>Sets the stub of AmqpConnectionBase.HandleIoEvent(IoEvent ioEvent)</summary>
        </member>
        <member name="F:Microsoft.Azure.Amqp.Fakes.StubAmqpConnectionBase.HandleIoEventIoEvent">
            <summary>Sets the stub of AmqpConnectionBase.HandleIoEvent(IoEvent ioEvent)</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.StubAmqpConnectionBase.InitializeStub">
            <summary>Initializes a new instance of type StubAmqpConnectionBase</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.StubAmqpConnectionBase.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.StubAmqpConnectionBase.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.StubAmqpConnectionBase.OnClose(System.TimeSpan)">
            <summary>Sets the stub of AmqpObject.OnClose(TimeSpan timeout)</summary>
        </member>
        <member name="F:Microsoft.Azure.Amqp.Fakes.StubAmqpConnectionBase.OnCloseTimeSpan">
            <summary>Sets the stub of AmqpObject.OnClose(TimeSpan timeout)</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.StubAmqpConnectionBase.OnFrameBuffer(Microsoft.Azure.Amqp.ByteBuffer)">
            <summary>Sets the stub of AmqpConnectionBase.OnFrameBuffer(ByteBuffer buffer)</summary>
        </member>
        <member name="F:Microsoft.Azure.Amqp.Fakes.StubAmqpConnectionBase.OnFrameBufferByteBuffer">
            <summary>Sets the stub of AmqpConnectionBase.OnFrameBuffer(ByteBuffer buffer)</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.StubAmqpConnectionBase.OnOpen(System.TimeSpan)">
            <summary>Sets the stub of AmqpObject.OnOpen(TimeSpan timeout)</summary>
        </member>
        <member name="F:Microsoft.Azure.Amqp.Fakes.StubAmqpConnectionBase.OnOpenTimeSpan">
            <summary>Sets the stub of AmqpObject.OnOpen(TimeSpan timeout)</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.StubAmqpConnectionBase.OnProtocolHeader(Microsoft.Azure.Amqp.Framing.ProtocolHeader)">
            <summary>Sets the stub of AmqpConnectionBase.OnProtocolHeader(ProtocolHeader header)</summary>
        </member>
        <member name="F:Microsoft.Azure.Amqp.Fakes.StubAmqpConnectionBase.OnProtocolHeaderProtocolHeader">
            <summary>Sets the stub of AmqpConnectionBase.OnProtocolHeader(ProtocolHeader header)</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.StubAmqpConnectionBase.OpenInternal">
            <summary>Sets the stub of AmqpObject.OpenInternal()</summary>
        </member>
        <member name="F:Microsoft.Azure.Amqp.Fakes.StubAmqpConnectionBase.OpenInternal01">
            <summary>Sets the stub of AmqpObject.OpenInternal()</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.StubAmqpConnectionBase.ToString">
            <summary>Sets the stub of AmqpObject.ToString()</summary>
        </member>
        <member name="F:Microsoft.Azure.Amqp.Fakes.StubAmqpConnectionBase.ToString01">
            <summary>Sets the stub of AmqpObject.ToString()</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Fakes.StubAmqpConnectionFactory">
            <summary>Stub type of Microsoft.Azure.Amqp.AmqpConnectionFactory</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.StubAmqpConnectionFactory.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.StubAmqpConnectionFactory.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.StubAmqpConnectionFactory.InitializeStub">
            <summary>Initializes a new instance of type StubAmqpConnectionFactory</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.StubAmqpConnectionFactory.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.StubAmqpConnectionFactory.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Fakes.StubAmqpLink">
            <summary>Stub type of Microsoft.Azure.Amqp.AmqpLink</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.StubAmqpLink.#ctor(Microsoft.Azure.Amqp.AmqpSession,Microsoft.Azure.Amqp.AmqpLinkSettings)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.StubAmqpLink.#ctor(System.String,Microsoft.Azure.Amqp.AmqpSession,Microsoft.Azure.Amqp.AmqpLinkSettings)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.StubAmqpLink.AbortInternal">
            <summary>Sets the stub of AmqpLink.AbortInternal()</summary>
        </member>
        <member name="F:Microsoft.Azure.Amqp.Fakes.StubAmqpLink.AbortInternal01">
            <summary>Sets the stub of AmqpLink.AbortInternal()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.StubAmqpLink.Available">
            <summary>Sets the stub of AmqpLink.get_Available()</summary>
        </member>
        <member name="F:Microsoft.Azure.Amqp.Fakes.StubAmqpLink.AvailableGet">
            <summary>Sets the stub of AmqpLink.get_Available()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.StubAmqpLink.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.StubAmqpLink.CloseInternal">
            <summary>Sets the stub of AmqpLink.CloseInternal()</summary>
        </member>
        <member name="F:Microsoft.Azure.Amqp.Fakes.StubAmqpLink.CloseInternal01">
            <summary>Sets the stub of AmqpLink.CloseInternal()</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.StubAmqpLink.CreateDelivery(Microsoft.Azure.Amqp.Framing.Transfer,Microsoft.Azure.Amqp.Delivery@)">
            <summary>Sets the stub of AmqpLink.CreateDelivery(Transfer transfer, Delivery&amp; delivery)</summary>
        </member>
        <member name="F:Microsoft.Azure.Amqp.Fakes.StubAmqpLink.CreateDeliveryTransferDeliveryOut">
            <summary>Sets the stub of AmqpLink.CreateDelivery(Transfer transfer, Delivery&amp; delivery)</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.StubAmqpLink.InitializeStub">
            <summary>Initializes a new instance of type StubAmqpLink</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.StubAmqpLink.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.StubAmqpLink.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.StubAmqpLink.OnClose(System.TimeSpan)">
            <summary>Sets the stub of AmqpObject.OnClose(TimeSpan timeout)</summary>
        </member>
        <member name="F:Microsoft.Azure.Amqp.Fakes.StubAmqpLink.OnCloseTimeSpan">
            <summary>Sets the stub of AmqpObject.OnClose(TimeSpan timeout)</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.StubAmqpLink.OnCreditAvailable(System.Int32,System.UInt32,System.Boolean,System.ArraySegment{System.Byte})">
            <summary>Sets the stub of AmqpLink.OnCreditAvailable(Int32 session, UInt32 link, Boolean drain, ArraySegment`1&lt;Byte&gt; txnId)</summary>
        </member>
        <member name="F:Microsoft.Azure.Amqp.Fakes.StubAmqpLink.OnCreditAvailableInt32UInt32BooleanArraySegmentOfByte">
            <summary>Sets the stub of AmqpLink.OnCreditAvailable(Int32 session, UInt32 link, Boolean drain, ArraySegment`1&lt;Byte&gt; txnId)</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.StubAmqpLink.OnDisposeDeliveryInternal(Microsoft.Azure.Amqp.Delivery)">
            <summary>Sets the stub of AmqpLink.OnDisposeDeliveryInternal(Delivery delivery)</summary>
        </member>
        <member name="F:Microsoft.Azure.Amqp.Fakes.StubAmqpLink.OnDisposeDeliveryInternalDelivery">
            <summary>Sets the stub of AmqpLink.OnDisposeDeliveryInternal(Delivery delivery)</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.StubAmqpLink.OnOpen(System.TimeSpan)">
            <summary>Sets the stub of AmqpObject.OnOpen(TimeSpan timeout)</summary>
        </member>
        <member name="F:Microsoft.Azure.Amqp.Fakes.StubAmqpLink.OnOpenTimeSpan">
            <summary>Sets the stub of AmqpObject.OnOpen(TimeSpan timeout)</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.StubAmqpLink.OnProcessTransfer(Microsoft.Azure.Amqp.Delivery,Microsoft.Azure.Amqp.Framing.Transfer,Microsoft.Azure.Amqp.Framing.Frame)">
            <summary>Sets the stub of AmqpLink.OnProcessTransfer(Delivery delivery, Transfer transfer, Frame rawFrame)</summary>
        </member>
        <member name="F:Microsoft.Azure.Amqp.Fakes.StubAmqpLink.OnProcessTransferDeliveryTransferFrame">
            <summary>Sets the stub of AmqpLink.OnProcessTransfer(Delivery delivery, Transfer transfer, Frame rawFrame)</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.StubAmqpLink.OnReceiveFlow(Microsoft.Azure.Amqp.Framing.Flow)">
            <summary>Sets the stub of AmqpLink.OnReceiveFlow(Flow flow)</summary>
        </member>
        <member name="F:Microsoft.Azure.Amqp.Fakes.StubAmqpLink.OnReceiveFlowFlow">
            <summary>Sets the stub of AmqpLink.OnReceiveFlow(Flow flow)</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.StubAmqpLink.OnReceiveStateOpenSent(Microsoft.Azure.Amqp.Framing.Attach)">
            <summary>Sets the stub of AmqpLink.OnReceiveStateOpenSent(Attach attach)</summary>
        </member>
        <member name="F:Microsoft.Azure.Amqp.Fakes.StubAmqpLink.OnReceiveStateOpenSentAttach">
            <summary>Sets the stub of AmqpLink.OnReceiveStateOpenSent(Attach attach)</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.StubAmqpLink.OpenInternal">
            <summary>Sets the stub of AmqpLink.OpenInternal()</summary>
        </member>
        <member name="F:Microsoft.Azure.Amqp.Fakes.StubAmqpLink.OpenInternal01">
            <summary>Sets the stub of AmqpLink.OpenInternal()</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.StubAmqpLink.ToString">
            <summary>Sets the stub of AmqpObject.ToString()</summary>
        </member>
        <member name="F:Microsoft.Azure.Amqp.Fakes.StubAmqpLink.ToString01">
            <summary>Sets the stub of AmqpObject.ToString()</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Fakes.StubAmqpMessage">
            <summary>Stub type of Microsoft.Azure.Amqp.AmqpMessage</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.StubAmqpMessage.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.StubAmqpMessage.AddPayload(Microsoft.Azure.Amqp.ByteBuffer,System.Boolean)">
            <summary>Sets the stub of Delivery.AddPayload(ByteBuffer payload, Boolean isLast)</summary>
        </member>
        <member name="F:Microsoft.Azure.Amqp.Fakes.StubAmqpMessage.AddPayloadByteBufferBoolean">
            <summary>Sets the stub of Delivery.AddPayload(ByteBuffer payload, Boolean isLast)</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.StubAmqpMessage.AttachBackingFieldToBodyStream">
            <summary>Attaches delegates to emulate StubAmqpMessage.BodyStream as a property with a backing field.</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.StubAmqpMessage.AttachBackingFieldToDataBody">
            <summary>Attaches delegates to emulate StubAmqpMessage.DataBody as a property with a backing field.</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.StubAmqpMessage.AttachBackingFieldToSequenceBody">
            <summary>Attaches delegates to emulate StubAmqpMessage.SequenceBody as a property with a backing field.</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.StubAmqpMessage.AttachBackingFieldToValueBody">
            <summary>Attaches delegates to emulate StubAmqpMessage.ValueBody as a property with a backing field.</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.StubAmqpMessage.BodyStream">
            <summary>Sets the stub of AmqpMessage.get_BodyStream()</summary>
        </member>
        <member name="F:Microsoft.Azure.Amqp.Fakes.StubAmqpMessage.BodyStreamGet">
            <summary>Sets the stub of AmqpMessage.get_BodyStream()</summary>
        </member>
        <member name="F:Microsoft.Azure.Amqp.Fakes.StubAmqpMessage.BodyStreamSetStream">
            <summary>Sets the stub of AmqpMessage.set_BodyStream(Stream value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.StubAmqpMessage.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.StubAmqpMessage.DataBody">
            <summary>Sets the stub of AmqpMessage.get_DataBody()</summary>
        </member>
        <member name="F:Microsoft.Azure.Amqp.Fakes.StubAmqpMessage.DataBodyGet">
            <summary>Sets the stub of AmqpMessage.get_DataBody()</summary>
        </member>
        <member name="F:Microsoft.Azure.Amqp.Fakes.StubAmqpMessage.DataBodySetIEnumerableOfData">
            <summary>Sets the stub of AmqpMessage.set_DataBody(IEnumerable`1&lt;Data&gt; value)</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.StubAmqpMessage.Deserialize(Microsoft.Azure.Amqp.SectionFlag)">
            <summary>Sets the stub of AmqpMessage.Deserialize(SectionFlag desiredSections)</summary>
        </member>
        <member name="F:Microsoft.Azure.Amqp.Fakes.StubAmqpMessage.DeserializeSectionFlag">
            <summary>Sets the stub of AmqpMessage.Deserialize(SectionFlag desiredSections)</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.StubAmqpMessage.Dispose(System.Boolean)">
            <summary>Sets the stub of AmqpMessage.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:Microsoft.Azure.Amqp.Fakes.StubAmqpMessage.DisposeBoolean">
            <summary>Sets the stub of AmqpMessage.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.StubAmqpMessage.GetPayload(System.Int32,System.Boolean@)">
            <summary>Sets the stub of Delivery.GetPayload(Int32 payloadSize, Boolean&amp; more)</summary>
        </member>
        <member name="F:Microsoft.Azure.Amqp.Fakes.StubAmqpMessage.GetPayloadInt32BooleanOut">
            <summary>Sets the stub of Delivery.GetPayload(Int32 payloadSize, Boolean&amp; more)</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.StubAmqpMessage.InitializeStub">
            <summary>Initializes a new instance of type StubAmqpMessage</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.StubAmqpMessage.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.StubAmqpMessage.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.StubAmqpMessage.OnCompletePayload(System.Int32)">
            <summary>Sets the stub of Delivery.OnCompletePayload(Int32 payloadSize)</summary>
        </member>
        <member name="F:Microsoft.Azure.Amqp.Fakes.StubAmqpMessage.OnCompletePayloadInt32">
            <summary>Sets the stub of Delivery.OnCompletePayload(Int32 payloadSize)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.StubAmqpMessage.SequenceBody">
            <summary>Sets the stub of AmqpMessage.get_SequenceBody()</summary>
        </member>
        <member name="F:Microsoft.Azure.Amqp.Fakes.StubAmqpMessage.SequenceBodyGet">
            <summary>Sets the stub of AmqpMessage.get_SequenceBody()</summary>
        </member>
        <member name="F:Microsoft.Azure.Amqp.Fakes.StubAmqpMessage.SequenceBodySetIEnumerableOfAmqpSequence">
            <summary>Sets the stub of AmqpMessage.set_SequenceBody(IEnumerable`1&lt;AmqpSequence&gt; value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.StubAmqpMessage.SerializedMessageSize">
            <summary>Sets the stub of AmqpMessage.get_SerializedMessageSize()</summary>
        </member>
        <member name="F:Microsoft.Azure.Amqp.Fakes.StubAmqpMessage.SerializedMessageSizeGet">
            <summary>Sets the stub of AmqpMessage.get_SerializedMessageSize()</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.StubAmqpMessage.ToStream">
            <summary>Sets the stub of AmqpMessage.ToStream()</summary>
        </member>
        <member name="F:Microsoft.Azure.Amqp.Fakes.StubAmqpMessage.ToStream01">
            <summary>Sets the stub of AmqpMessage.ToStream()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.StubAmqpMessage.ValueBody">
            <summary>Sets the stub of AmqpMessage.get_ValueBody()</summary>
        </member>
        <member name="F:Microsoft.Azure.Amqp.Fakes.StubAmqpMessage.ValueBodyGet">
            <summary>Sets the stub of AmqpMessage.get_ValueBody()</summary>
        </member>
        <member name="F:Microsoft.Azure.Amqp.Fakes.StubAmqpMessage.ValueBodySetAmqpValue">
            <summary>Sets the stub of AmqpMessage.set_ValueBody(AmqpValue value)</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Fakes.StubAmqpObject">
            <summary>Stub type of Microsoft.Azure.Amqp.AmqpObject</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.StubAmqpObject.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.StubAmqpObject.#ctor(System.String,Microsoft.Azure.Amqp.SequenceNumber)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.StubAmqpObject.AbortInternal">
            <summary>Sets the stub of AmqpObject.AbortInternal()</summary>
        </member>
        <member name="F:Microsoft.Azure.Amqp.Fakes.StubAmqpObject.AbortInternal01">
            <summary>Sets the stub of AmqpObject.AbortInternal()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.StubAmqpObject.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.StubAmqpObject.CloseInternal">
            <summary>Sets the stub of AmqpObject.CloseInternal()</summary>
        </member>
        <member name="F:Microsoft.Azure.Amqp.Fakes.StubAmqpObject.CloseInternal01">
            <summary>Sets the stub of AmqpObject.CloseInternal()</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.StubAmqpObject.InitializeStub">
            <summary>Initializes a new instance of type StubAmqpObject</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.StubAmqpObject.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.StubAmqpObject.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.StubAmqpObject.OnClose(System.TimeSpan)">
            <summary>Sets the stub of AmqpObject.OnClose(TimeSpan timeout)</summary>
        </member>
        <member name="F:Microsoft.Azure.Amqp.Fakes.StubAmqpObject.OnCloseTimeSpan">
            <summary>Sets the stub of AmqpObject.OnClose(TimeSpan timeout)</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.StubAmqpObject.OnOpen(System.TimeSpan)">
            <summary>Sets the stub of AmqpObject.OnOpen(TimeSpan timeout)</summary>
        </member>
        <member name="F:Microsoft.Azure.Amqp.Fakes.StubAmqpObject.OnOpenTimeSpan">
            <summary>Sets the stub of AmqpObject.OnOpen(TimeSpan timeout)</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.StubAmqpObject.OpenInternal">
            <summary>Sets the stub of AmqpObject.OpenInternal()</summary>
        </member>
        <member name="F:Microsoft.Azure.Amqp.Fakes.StubAmqpObject.OpenInternal01">
            <summary>Sets the stub of AmqpObject.OpenInternal()</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.StubAmqpObject.ToString">
            <summary>Sets the stub of AmqpObject.ToString()</summary>
        </member>
        <member name="F:Microsoft.Azure.Amqp.Fakes.StubAmqpObject.ToString01">
            <summary>Sets the stub of AmqpObject.ToString()</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Fakes.StubAmqpSession">
            <summary>Stub type of Microsoft.Azure.Amqp.AmqpSession</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.StubAmqpSession.#ctor(Microsoft.Azure.Amqp.AmqpConnection,Microsoft.Azure.Amqp.AmqpSessionSettings,Microsoft.Azure.Amqp.ILinkFactory)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.StubAmqpSession.#ctor(System.String,Microsoft.Azure.Amqp.AmqpConnection,Microsoft.Azure.Amqp.AmqpSessionSettings,Microsoft.Azure.Amqp.ILinkFactory)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.StubAmqpSession.AbortInternal">
            <summary>Sets the stub of AmqpSession.AbortInternal()</summary>
        </member>
        <member name="F:Microsoft.Azure.Amqp.Fakes.StubAmqpSession.AbortInternal01">
            <summary>Sets the stub of AmqpSession.AbortInternal()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.StubAmqpSession.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.StubAmqpSession.CloseInternal">
            <summary>Sets the stub of AmqpSession.CloseInternal()</summary>
        </member>
        <member name="F:Microsoft.Azure.Amqp.Fakes.StubAmqpSession.CloseInternal01">
            <summary>Sets the stub of AmqpSession.CloseInternal()</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.StubAmqpSession.InitializeStub">
            <summary>Initializes a new instance of type StubAmqpSession</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.StubAmqpSession.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.StubAmqpSession.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.StubAmqpSession.OnClose(System.TimeSpan)">
            <summary>Sets the stub of AmqpObject.OnClose(TimeSpan timeout)</summary>
        </member>
        <member name="F:Microsoft.Azure.Amqp.Fakes.StubAmqpSession.OnCloseTimeSpan">
            <summary>Sets the stub of AmqpObject.OnClose(TimeSpan timeout)</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.StubAmqpSession.OnOpen(System.TimeSpan)">
            <summary>Sets the stub of AmqpObject.OnOpen(TimeSpan timeout)</summary>
        </member>
        <member name="F:Microsoft.Azure.Amqp.Fakes.StubAmqpSession.OnOpenTimeSpan">
            <summary>Sets the stub of AmqpObject.OnOpen(TimeSpan timeout)</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.StubAmqpSession.OpenInternal">
            <summary>Sets the stub of AmqpSession.OpenInternal()</summary>
        </member>
        <member name="F:Microsoft.Azure.Amqp.Fakes.StubAmqpSession.OpenInternal01">
            <summary>Sets the stub of AmqpSession.OpenInternal()</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.StubAmqpSession.ProcessFrame(Microsoft.Azure.Amqp.Framing.Frame)">
            <summary>Sets the stub of AmqpSession.ProcessFrame(Frame frame)</summary>
        </member>
        <member name="F:Microsoft.Azure.Amqp.Fakes.StubAmqpSession.ProcessFrameFrame">
            <summary>Sets the stub of AmqpSession.ProcessFrame(Frame frame)</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.StubAmqpSession.ToString">
            <summary>Sets the stub of AmqpObject.ToString()</summary>
        </member>
        <member name="F:Microsoft.Azure.Amqp.Fakes.StubAmqpSession.ToString01">
            <summary>Sets the stub of AmqpObject.ToString()</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Fakes.StubCbsToken">
            <summary>Stub type of Microsoft.Azure.Amqp.CbsToken</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.StubCbsToken.#ctor(System.Object,System.String,System.DateTime)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.StubCbsToken.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.StubCbsToken.InitializeStub">
            <summary>Initializes a new instance of type StubCbsToken</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.StubCbsToken.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.StubCbsToken.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Fakes.StubDelivery">
            <summary>Stub type of Microsoft.Azure.Amqp.Delivery</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.StubDelivery.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.StubDelivery.AddPayload(Microsoft.Azure.Amqp.ByteBuffer,System.Boolean)">
            <summary>Sets the stub of Delivery.AddPayload(ByteBuffer payload, Boolean isLast)</summary>
        </member>
        <member name="F:Microsoft.Azure.Amqp.Fakes.StubDelivery.AddPayloadByteBufferBoolean">
            <summary>Sets the stub of Delivery.AddPayload(ByteBuffer payload, Boolean isLast)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.StubDelivery.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.StubDelivery.Dispose(System.Boolean)">
            <summary>Sets the stub of Delivery.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:Microsoft.Azure.Amqp.Fakes.StubDelivery.DisposeBoolean">
            <summary>Sets the stub of Delivery.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.StubDelivery.GetPayload(System.Int32,System.Boolean@)">
            <summary>Sets the stub of Delivery.GetPayload(Int32 payloadSize, Boolean&amp; more)</summary>
        </member>
        <member name="F:Microsoft.Azure.Amqp.Fakes.StubDelivery.GetPayloadInt32BooleanOut">
            <summary>Sets the stub of Delivery.GetPayload(Int32 payloadSize, Boolean&amp; more)</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.StubDelivery.InitializeStub">
            <summary>Initializes a new instance of type StubDelivery</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.StubDelivery.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.StubDelivery.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.StubDelivery.OnCompletePayload(System.Int32)">
            <summary>Sets the stub of Delivery.OnCompletePayload(Int32 payloadSize)</summary>
        </member>
        <member name="F:Microsoft.Azure.Amqp.Fakes.StubDelivery.OnCompletePayloadInt32">
            <summary>Sets the stub of Delivery.OnCompletePayload(Int32 payloadSize)</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Fakes.StubIAmqpProvider">
            <summary>Stub type of Microsoft.Azure.Amqp.IAmqpProvider</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.StubIAmqpProvider.#ctor">
            <summary>Initializes a new instance of type StubIAmqpProvider</summary>
        </member>
        <member name="F:Microsoft.Azure.Amqp.Fakes.StubIAmqpProvider.BeginCreateNodeStringFieldsTimeSpanAsyncCallbackObject">
            <summary>Sets the stub of INodeFactory.BeginCreateNode(String address, Fields properties, TimeSpan timeout, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="F:Microsoft.Azure.Amqp.Fakes.StubIAmqpProvider.BeginDeleteNodeStringTimeSpanAsyncCallbackObject">
            <summary>Sets the stub of INodeFactory.BeginDeleteNode(String address, TimeSpan timeout, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="F:Microsoft.Azure.Amqp.Fakes.StubIAmqpProvider.BeginOpenLinkAmqpLinkTimeSpanAsyncCallbackObject">
            <summary>Sets the stub of ILinkFactory.BeginOpenLink(AmqpLink link, TimeSpan timeout, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="F:Microsoft.Azure.Amqp.Fakes.StubIAmqpProvider.CreateConnectionTransportBaseProtocolHeaderBooleanAmqpSettingsAmqpConnectionSettings">
            <summary>Sets the stub of IConnectionFactory.CreateConnection(TransportBase transport, ProtocolHeader protocolHeader, Boolean isInitiator, AmqpSettings amqpSettings, AmqpConnectionSettings connectionSettings)</summary>
        </member>
        <member name="F:Microsoft.Azure.Amqp.Fakes.StubIAmqpProvider.CreateLinkAmqpSessionAmqpLinkSettings">
            <summary>Sets the stub of ILinkFactory.CreateLink(AmqpSession session, AmqpLinkSettings settings)</summary>
        </member>
        <member name="F:Microsoft.Azure.Amqp.Fakes.StubIAmqpProvider.CreateSessionAmqpConnectionAmqpSessionSettings">
            <summary>Sets the stub of ISessionFactory.CreateSession(AmqpConnection connection, AmqpSessionSettings settings)</summary>
        </member>
        <member name="F:Microsoft.Azure.Amqp.Fakes.StubIAmqpProvider.EndCreateNodeIAsyncResult">
            <summary>Sets the stub of INodeFactory.EndCreateNode(IAsyncResult result)</summary>
        </member>
        <member name="F:Microsoft.Azure.Amqp.Fakes.StubIAmqpProvider.EndDeleteNodeIAsyncResult">
            <summary>Sets the stub of INodeFactory.EndDeleteNode(IAsyncResult result)</summary>
        </member>
        <member name="F:Microsoft.Azure.Amqp.Fakes.StubIAmqpProvider.EndOpenLinkIAsyncResult">
            <summary>Sets the stub of ILinkFactory.EndOpenLink(IAsyncResult result)</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.StubIAmqpProvider.Microsoft#Azure#Amqp#IConnectionFactory#CreateConnection(Microsoft.Azure.Amqp.Transport.TransportBase,Microsoft.Azure.Amqp.Framing.ProtocolHeader,System.Boolean,Microsoft.Azure.Amqp.AmqpSettings,Microsoft.Azure.Amqp.AmqpConnectionSettings)">
            <summary>Sets the stub of IConnectionFactory.CreateConnection(TransportBase transport, ProtocolHeader protocolHeader, Boolean isInitiator, AmqpSettings amqpSettings, AmqpConnectionSettings connectionSettings)</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.StubIAmqpProvider.Microsoft#Azure#Amqp#ILinkFactory#BeginOpenLink(Microsoft.Azure.Amqp.AmqpLink,System.TimeSpan,System.AsyncCallback,System.Object)">
            <summary>Sets the stub of ILinkFactory.BeginOpenLink(AmqpLink link, TimeSpan timeout, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.StubIAmqpProvider.Microsoft#Azure#Amqp#ILinkFactory#CreateLink(Microsoft.Azure.Amqp.AmqpSession,Microsoft.Azure.Amqp.AmqpLinkSettings)">
            <summary>Sets the stub of ILinkFactory.CreateLink(AmqpSession session, AmqpLinkSettings settings)</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.StubIAmqpProvider.Microsoft#Azure#Amqp#ILinkFactory#EndOpenLink(System.IAsyncResult)">
            <summary>Sets the stub of ILinkFactory.EndOpenLink(IAsyncResult result)</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.StubIAmqpProvider.Microsoft#Azure#Amqp#INodeFactory#BeginCreateNode(System.String,Microsoft.Azure.Amqp.Framing.Fields,System.TimeSpan,System.AsyncCallback,System.Object)">
            <summary>Sets the stub of INodeFactory.BeginCreateNode(String address, Fields properties, TimeSpan timeout, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.StubIAmqpProvider.Microsoft#Azure#Amqp#INodeFactory#BeginDeleteNode(System.String,System.TimeSpan,System.AsyncCallback,System.Object)">
            <summary>Sets the stub of INodeFactory.BeginDeleteNode(String address, TimeSpan timeout, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.StubIAmqpProvider.Microsoft#Azure#Amqp#INodeFactory#EndCreateNode(System.IAsyncResult)">
            <summary>Sets the stub of INodeFactory.EndCreateNode(IAsyncResult result)</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.StubIAmqpProvider.Microsoft#Azure#Amqp#INodeFactory#EndDeleteNode(System.IAsyncResult)">
            <summary>Sets the stub of INodeFactory.EndDeleteNode(IAsyncResult result)</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.StubIAmqpProvider.Microsoft#Azure#Amqp#ISessionFactory#CreateSession(Microsoft.Azure.Amqp.AmqpConnection,Microsoft.Azure.Amqp.AmqpSessionSettings)">
            <summary>Sets the stub of ISessionFactory.CreateSession(AmqpConnection connection, AmqpSessionSettings settings)</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Fakes.StubIAmqpUsageMeter">
            <summary>Stub type of Microsoft.Azure.Amqp.IAmqpUsageMeter</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.StubIAmqpUsageMeter.#ctor">
            <summary>Initializes a new instance of type StubIAmqpUsageMeter</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.StubIAmqpUsageMeter.Microsoft#Azure#Amqp#IAmqpUsageMeter#OnRead(Microsoft.Azure.Amqp.AmqpConnection,System.UInt64,System.Int32)">
            <summary>Sets the stub of IAmqpUsageMeter.OnRead(AmqpConnection connection, UInt64 frameCode, Int32 numberOfBytes)</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.StubIAmqpUsageMeter.Microsoft#Azure#Amqp#IAmqpUsageMeter#OnWrite(Microsoft.Azure.Amqp.AmqpConnection,System.UInt64,System.Int32)">
            <summary>Sets the stub of IAmqpUsageMeter.OnWrite(AmqpConnection connection, UInt64 frameCode, Int32 numberOfBytes)</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.StubIAmqpUsageMeter.Microsoft#Azure#Amqp#ITransportMonitor#OnTransportRead(System.Int32,System.Int32,System.Int32,System.Int64)">
            <summary>Sets the stub of ITransportMonitor.OnTransportRead(Int32 bufferSize, Int32 readSize, Int32 cacheHits, Int64 latencyTicks)</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.StubIAmqpUsageMeter.Microsoft#Azure#Amqp#ITransportMonitor#OnTransportWrite(System.Int32,System.Int32,System.Int64,System.Int64)">
            <summary>Sets the stub of ITransportMonitor.OnTransportWrite(Int32 bufferSize, Int32 writeSize, Int64 queueSize, Int64 latencyTicks)</summary>
        </member>
        <member name="F:Microsoft.Azure.Amqp.Fakes.StubIAmqpUsageMeter.OnReadAmqpConnectionUInt64Int32">
            <summary>Sets the stub of IAmqpUsageMeter.OnRead(AmqpConnection connection, UInt64 frameCode, Int32 numberOfBytes)</summary>
        </member>
        <member name="F:Microsoft.Azure.Amqp.Fakes.StubIAmqpUsageMeter.OnTransportReadInt32Int32Int32Int64">
            <summary>Sets the stub of ITransportMonitor.OnTransportRead(Int32 bufferSize, Int32 readSize, Int32 cacheHits, Int64 latencyTicks)</summary>
        </member>
        <member name="F:Microsoft.Azure.Amqp.Fakes.StubIAmqpUsageMeter.OnTransportWriteInt32Int32Int64Int64">
            <summary>Sets the stub of ITransportMonitor.OnTransportWrite(Int32 bufferSize, Int32 writeSize, Int64 queueSize, Int64 latencyTicks)</summary>
        </member>
        <member name="F:Microsoft.Azure.Amqp.Fakes.StubIAmqpUsageMeter.OnWriteAmqpConnectionUInt64Int32">
            <summary>Sets the stub of IAmqpUsageMeter.OnWrite(AmqpConnection connection, UInt64 frameCode, Int32 numberOfBytes)</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Fakes.StubICbsTokenProvider">
            <summary>Stub type of Microsoft.Azure.Amqp.ICbsTokenProvider</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.StubICbsTokenProvider.#ctor">
            <summary>Initializes a new instance of type StubICbsTokenProvider</summary>
        </member>
        <member name="F:Microsoft.Azure.Amqp.Fakes.StubICbsTokenProvider.GetTokenAsyncUriStringStringArray">
            <summary>Sets the stub of ICbsTokenProvider.GetTokenAsync(Uri namespaceAddress, String appliesTo, String[] requiredClaims)</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.StubICbsTokenProvider.Microsoft#Azure#Amqp#ICbsTokenProvider#GetTokenAsync(System.Uri,System.String,System.String[])">
            <summary>Sets the stub of ICbsTokenProvider.GetTokenAsync(Uri namespaceAddress, String appliesTo, String[] requiredClaims)</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Fakes.StubIConnectionFactory">
            <summary>Stub type of Microsoft.Azure.Amqp.IConnectionFactory</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.StubIConnectionFactory.#ctor">
            <summary>Initializes a new instance of type StubIConnectionFactory</summary>
        </member>
        <member name="F:Microsoft.Azure.Amqp.Fakes.StubIConnectionFactory.CreateConnectionTransportBaseProtocolHeaderBooleanAmqpSettingsAmqpConnectionSettings">
            <summary>Sets the stub of IConnectionFactory.CreateConnection(TransportBase transport, ProtocolHeader protocolHeader, Boolean isInitiator, AmqpSettings amqpSettings, AmqpConnectionSettings connectionSettings)</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.StubIConnectionFactory.Microsoft#Azure#Amqp#IConnectionFactory#CreateConnection(Microsoft.Azure.Amqp.Transport.TransportBase,Microsoft.Azure.Amqp.Framing.ProtocolHeader,System.Boolean,Microsoft.Azure.Amqp.AmqpSettings,Microsoft.Azure.Amqp.AmqpConnectionSettings)">
            <summary>Sets the stub of IConnectionFactory.CreateConnection(TransportBase transport, ProtocolHeader protocolHeader, Boolean isInitiator, AmqpSettings amqpSettings, AmqpConnectionSettings connectionSettings)</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Fakes.StubIIoHandler">
            <summary>Stub type of Microsoft.Azure.Amqp.IIoHandler</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.StubIIoHandler.#ctor">
            <summary>Initializes a new instance of type StubIIoHandler</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.StubIIoHandler.Microsoft#Azure#Amqp#IIoHandler#OnIoEvent(Microsoft.Azure.Amqp.IoEvent,System.Int64)">
            <summary>Sets the stub of IIoHandler.OnIoEvent(IoEvent ioEvent, Int64 queueSize)</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.StubIIoHandler.Microsoft#Azure#Amqp#IIoHandler#OnIoFault(System.Exception)">
            <summary>Sets the stub of IIoHandler.OnIoFault(Exception exception)</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.StubIIoHandler.Microsoft#Azure#Amqp#IIoHandler#OnReceiveBuffer(Microsoft.Azure.Amqp.ByteBuffer)">
            <summary>Sets the stub of IIoHandler.OnReceiveBuffer(ByteBuffer buffer)</summary>
        </member>
        <member name="F:Microsoft.Azure.Amqp.Fakes.StubIIoHandler.OnIoEventIoEventInt64">
            <summary>Sets the stub of IIoHandler.OnIoEvent(IoEvent ioEvent, Int64 queueSize)</summary>
        </member>
        <member name="F:Microsoft.Azure.Amqp.Fakes.StubIIoHandler.OnIoFaultException">
            <summary>Sets the stub of IIoHandler.OnIoFault(Exception exception)</summary>
        </member>
        <member name="F:Microsoft.Azure.Amqp.Fakes.StubIIoHandler.OnReceiveBufferByteBuffer">
            <summary>Sets the stub of IIoHandler.OnReceiveBuffer(ByteBuffer buffer)</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Fakes.StubILinkFactory">
            <summary>Stub type of Microsoft.Azure.Amqp.ILinkFactory</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.StubILinkFactory.#ctor">
            <summary>Initializes a new instance of type StubILinkFactory</summary>
        </member>
        <member name="F:Microsoft.Azure.Amqp.Fakes.StubILinkFactory.BeginOpenLinkAmqpLinkTimeSpanAsyncCallbackObject">
            <summary>Sets the stub of ILinkFactory.BeginOpenLink(AmqpLink link, TimeSpan timeout, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="F:Microsoft.Azure.Amqp.Fakes.StubILinkFactory.CreateLinkAmqpSessionAmqpLinkSettings">
            <summary>Sets the stub of ILinkFactory.CreateLink(AmqpSession session, AmqpLinkSettings settings)</summary>
        </member>
        <member name="F:Microsoft.Azure.Amqp.Fakes.StubILinkFactory.EndOpenLinkIAsyncResult">
            <summary>Sets the stub of ILinkFactory.EndOpenLink(IAsyncResult result)</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.StubILinkFactory.Microsoft#Azure#Amqp#ILinkFactory#BeginOpenLink(Microsoft.Azure.Amqp.AmqpLink,System.TimeSpan,System.AsyncCallback,System.Object)">
            <summary>Sets the stub of ILinkFactory.BeginOpenLink(AmqpLink link, TimeSpan timeout, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.StubILinkFactory.Microsoft#Azure#Amqp#ILinkFactory#CreateLink(Microsoft.Azure.Amqp.AmqpSession,Microsoft.Azure.Amqp.AmqpLinkSettings)">
            <summary>Sets the stub of ILinkFactory.CreateLink(AmqpSession session, AmqpLinkSettings settings)</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.StubILinkFactory.Microsoft#Azure#Amqp#ILinkFactory#EndOpenLink(System.IAsyncResult)">
            <summary>Sets the stub of ILinkFactory.EndOpenLink(IAsyncResult result)</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Fakes.StubINodeFactory">
            <summary>Stub type of Microsoft.Azure.Amqp.INodeFactory</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.StubINodeFactory.#ctor">
            <summary>Initializes a new instance of type StubINodeFactory</summary>
        </member>
        <member name="F:Microsoft.Azure.Amqp.Fakes.StubINodeFactory.BeginCreateNodeStringFieldsTimeSpanAsyncCallbackObject">
            <summary>Sets the stub of INodeFactory.BeginCreateNode(String address, Fields properties, TimeSpan timeout, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="F:Microsoft.Azure.Amqp.Fakes.StubINodeFactory.BeginDeleteNodeStringTimeSpanAsyncCallbackObject">
            <summary>Sets the stub of INodeFactory.BeginDeleteNode(String address, TimeSpan timeout, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="F:Microsoft.Azure.Amqp.Fakes.StubINodeFactory.EndCreateNodeIAsyncResult">
            <summary>Sets the stub of INodeFactory.EndCreateNode(IAsyncResult result)</summary>
        </member>
        <member name="F:Microsoft.Azure.Amqp.Fakes.StubINodeFactory.EndDeleteNodeIAsyncResult">
            <summary>Sets the stub of INodeFactory.EndDeleteNode(IAsyncResult result)</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.StubINodeFactory.Microsoft#Azure#Amqp#INodeFactory#BeginCreateNode(System.String,Microsoft.Azure.Amqp.Framing.Fields,System.TimeSpan,System.AsyncCallback,System.Object)">
            <summary>Sets the stub of INodeFactory.BeginCreateNode(String address, Fields properties, TimeSpan timeout, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.StubINodeFactory.Microsoft#Azure#Amqp#INodeFactory#BeginDeleteNode(System.String,System.TimeSpan,System.AsyncCallback,System.Object)">
            <summary>Sets the stub of INodeFactory.BeginDeleteNode(String address, TimeSpan timeout, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.StubINodeFactory.Microsoft#Azure#Amqp#INodeFactory#EndCreateNode(System.IAsyncResult)">
            <summary>Sets the stub of INodeFactory.EndCreateNode(IAsyncResult result)</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.StubINodeFactory.Microsoft#Azure#Amqp#INodeFactory#EndDeleteNode(System.IAsyncResult)">
            <summary>Sets the stub of INodeFactory.EndDeleteNode(IAsyncResult result)</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Fakes.StubIRuntimeProvider">
            <summary>Stub type of Microsoft.Azure.Amqp.IRuntimeProvider</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.StubIRuntimeProvider.#ctor">
            <summary>Initializes a new instance of type StubIRuntimeProvider</summary>
        </member>
        <member name="F:Microsoft.Azure.Amqp.Fakes.StubIRuntimeProvider.BeginOpenLinkAmqpLinkTimeSpanAsyncCallbackObject">
            <summary>Sets the stub of ILinkFactory.BeginOpenLink(AmqpLink link, TimeSpan timeout, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="F:Microsoft.Azure.Amqp.Fakes.StubIRuntimeProvider.CreateConnectionTransportBaseProtocolHeaderBooleanAmqpSettingsAmqpConnectionSettings">
            <summary>Sets the stub of IConnectionFactory.CreateConnection(TransportBase transport, ProtocolHeader protocolHeader, Boolean isInitiator, AmqpSettings amqpSettings, AmqpConnectionSettings connectionSettings)</summary>
        </member>
        <member name="F:Microsoft.Azure.Amqp.Fakes.StubIRuntimeProvider.CreateLinkAmqpSessionAmqpLinkSettings">
            <summary>Sets the stub of ILinkFactory.CreateLink(AmqpSession session, AmqpLinkSettings settings)</summary>
        </member>
        <member name="F:Microsoft.Azure.Amqp.Fakes.StubIRuntimeProvider.CreateSessionAmqpConnectionAmqpSessionSettings">
            <summary>Sets the stub of ISessionFactory.CreateSession(AmqpConnection connection, AmqpSessionSettings settings)</summary>
        </member>
        <member name="F:Microsoft.Azure.Amqp.Fakes.StubIRuntimeProvider.EndOpenLinkIAsyncResult">
            <summary>Sets the stub of ILinkFactory.EndOpenLink(IAsyncResult result)</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.StubIRuntimeProvider.Microsoft#Azure#Amqp#IConnectionFactory#CreateConnection(Microsoft.Azure.Amqp.Transport.TransportBase,Microsoft.Azure.Amqp.Framing.ProtocolHeader,System.Boolean,Microsoft.Azure.Amqp.AmqpSettings,Microsoft.Azure.Amqp.AmqpConnectionSettings)">
            <summary>Sets the stub of IConnectionFactory.CreateConnection(TransportBase transport, ProtocolHeader protocolHeader, Boolean isInitiator, AmqpSettings amqpSettings, AmqpConnectionSettings connectionSettings)</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.StubIRuntimeProvider.Microsoft#Azure#Amqp#ILinkFactory#BeginOpenLink(Microsoft.Azure.Amqp.AmqpLink,System.TimeSpan,System.AsyncCallback,System.Object)">
            <summary>Sets the stub of ILinkFactory.BeginOpenLink(AmqpLink link, TimeSpan timeout, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.StubIRuntimeProvider.Microsoft#Azure#Amqp#ILinkFactory#CreateLink(Microsoft.Azure.Amqp.AmqpSession,Microsoft.Azure.Amqp.AmqpLinkSettings)">
            <summary>Sets the stub of ILinkFactory.CreateLink(AmqpSession session, AmqpLinkSettings settings)</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.StubIRuntimeProvider.Microsoft#Azure#Amqp#ILinkFactory#EndOpenLink(System.IAsyncResult)">
            <summary>Sets the stub of ILinkFactory.EndOpenLink(IAsyncResult result)</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.StubIRuntimeProvider.Microsoft#Azure#Amqp#ISessionFactory#CreateSession(Microsoft.Azure.Amqp.AmqpConnection,Microsoft.Azure.Amqp.AmqpSessionSettings)">
            <summary>Sets the stub of ISessionFactory.CreateSession(AmqpConnection connection, AmqpSessionSettings settings)</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Fakes.StubISessionFactory">
            <summary>Stub type of Microsoft.Azure.Amqp.ISessionFactory</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.StubISessionFactory.#ctor">
            <summary>Initializes a new instance of type StubISessionFactory</summary>
        </member>
        <member name="F:Microsoft.Azure.Amqp.Fakes.StubISessionFactory.CreateSessionAmqpConnectionAmqpSessionSettings">
            <summary>Sets the stub of ISessionFactory.CreateSession(AmqpConnection connection, AmqpSessionSettings settings)</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.StubISessionFactory.Microsoft#Azure#Amqp#ISessionFactory#CreateSession(Microsoft.Azure.Amqp.AmqpConnection,Microsoft.Azure.Amqp.AmqpSessionSettings)">
            <summary>Sets the stub of ISessionFactory.CreateSession(AmqpConnection connection, AmqpSessionSettings settings)</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Fakes.StubITransportMonitor">
            <summary>Stub type of Microsoft.Azure.Amqp.ITransportMonitor</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.StubITransportMonitor.#ctor">
            <summary>Initializes a new instance of type StubITransportMonitor</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.StubITransportMonitor.Microsoft#Azure#Amqp#ITransportMonitor#OnTransportRead(System.Int32,System.Int32,System.Int32,System.Int64)">
            <summary>Sets the stub of ITransportMonitor.OnTransportRead(Int32 bufferSize, Int32 readSize, Int32 cacheHits, Int64 latencyTicks)</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.StubITransportMonitor.Microsoft#Azure#Amqp#ITransportMonitor#OnTransportWrite(System.Int32,System.Int32,System.Int64,System.Int64)">
            <summary>Sets the stub of ITransportMonitor.OnTransportWrite(Int32 bufferSize, Int32 writeSize, Int64 queueSize, Int64 latencyTicks)</summary>
        </member>
        <member name="F:Microsoft.Azure.Amqp.Fakes.StubITransportMonitor.OnTransportReadInt32Int32Int32Int64">
            <summary>Sets the stub of ITransportMonitor.OnTransportRead(Int32 bufferSize, Int32 readSize, Int32 cacheHits, Int64 latencyTicks)</summary>
        </member>
        <member name="F:Microsoft.Azure.Amqp.Fakes.StubITransportMonitor.OnTransportWriteInt32Int32Int64Int64">
            <summary>Sets the stub of ITransportMonitor.OnTransportWrite(Int32 bufferSize, Int32 writeSize, Int64 queueSize, Int64 latencyTicks)</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Fakes.StubIWorkDelegate`1">
            <summary>Stub type of Microsoft.Azure.Amqp.IWorkDelegate`1</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.StubIWorkDelegate`1.#ctor">
            <summary>Initializes a new instance of type StubIWorkDelegate</summary>
        </member>
        <member name="F:Microsoft.Azure.Amqp.Fakes.StubIWorkDelegate`1.InvokeT0">
            <summary>Sets the stub of IWorkDelegate`1.Invoke(!0 work)</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.StubIWorkDelegate`1.Microsoft#Azure#Amqp#IWorkDelegate{T}#Invoke(`0)">
            <summary>Sets the stub of IWorkDelegate`1.Invoke(!0 work)</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Fakes.StubRequestResponseAmqpLink">
            <summary>Stub type of Microsoft.Azure.Amqp.RequestResponseAmqpLink</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.StubRequestResponseAmqpLink.#ctor(System.String,Microsoft.Azure.Amqp.AmqpSession,System.String,Microsoft.Azure.Amqp.Framing.Fields)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.StubRequestResponseAmqpLink.#ctor(System.String,System.String,Microsoft.Azure.Amqp.AmqpSession,System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.StubRequestResponseAmqpLink.#ctor(System.String,System.String,Microsoft.Azure.Amqp.AmqpSession,System.String,Microsoft.Azure.Amqp.Framing.Fields)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.StubRequestResponseAmqpLink.AbortInternal">
            <summary>Sets the stub of RequestResponseAmqpLink.AbortInternal()</summary>
        </member>
        <member name="F:Microsoft.Azure.Amqp.Fakes.StubRequestResponseAmqpLink.AbortInternal01">
            <summary>Sets the stub of RequestResponseAmqpLink.AbortInternal()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.StubRequestResponseAmqpLink.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.StubRequestResponseAmqpLink.CloseInternal">
            <summary>Sets the stub of RequestResponseAmqpLink.CloseInternal()</summary>
        </member>
        <member name="F:Microsoft.Azure.Amqp.Fakes.StubRequestResponseAmqpLink.CloseInternal01">
            <summary>Sets the stub of RequestResponseAmqpLink.CloseInternal()</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.StubRequestResponseAmqpLink.InitializeStub">
            <summary>Initializes a new instance of type StubRequestResponseAmqpLink</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.StubRequestResponseAmqpLink.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.StubRequestResponseAmqpLink.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.StubRequestResponseAmqpLink.OnClose(System.TimeSpan)">
            <summary>Sets the stub of AmqpObject.OnClose(TimeSpan timeout)</summary>
        </member>
        <member name="F:Microsoft.Azure.Amqp.Fakes.StubRequestResponseAmqpLink.OnCloseTimeSpan">
            <summary>Sets the stub of AmqpObject.OnClose(TimeSpan timeout)</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.StubRequestResponseAmqpLink.OnOpen(System.TimeSpan)">
            <summary>Sets the stub of AmqpObject.OnOpen(TimeSpan timeout)</summary>
        </member>
        <member name="F:Microsoft.Azure.Amqp.Fakes.StubRequestResponseAmqpLink.OnOpenTimeSpan">
            <summary>Sets the stub of AmqpObject.OnOpen(TimeSpan timeout)</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.StubRequestResponseAmqpLink.OpenInternal">
            <summary>Sets the stub of RequestResponseAmqpLink.OpenInternal()</summary>
        </member>
        <member name="F:Microsoft.Azure.Amqp.Fakes.StubRequestResponseAmqpLink.OpenInternal01">
            <summary>Sets the stub of RequestResponseAmqpLink.OpenInternal()</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.StubRequestResponseAmqpLink.ToString">
            <summary>Sets the stub of AmqpObject.ToString()</summary>
        </member>
        <member name="F:Microsoft.Azure.Amqp.Fakes.StubRequestResponseAmqpLink.ToString01">
            <summary>Sets the stub of AmqpObject.ToString()</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Fakes.StubSingleton`1">
            <summary>Stub type of Microsoft.Azure.Amqp.Singleton`1</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.StubSingleton`1.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.StubSingleton`1.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.StubSingleton`1.Dispose(System.Boolean)">
            <summary>Sets the stub of Singleton`1.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:Microsoft.Azure.Amqp.Fakes.StubSingleton`1.DisposeBoolean">
            <summary>Sets the stub of Singleton`1.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.StubSingleton`1.InitializeStub">
            <summary>Initializes a new instance of type StubSingleton</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.StubSingleton`1.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Fakes.StubSingleton`1.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.StubSingleton`1.OnCreateAsync(System.TimeSpan)">
            <summary>Sets the stub of Singleton`1.OnCreateAsync(TimeSpan timeout)</summary>
        </member>
        <member name="F:Microsoft.Azure.Amqp.Fakes.StubSingleton`1.OnCreateAsyncTimeSpan">
            <summary>Sets the stub of Singleton`1.OnCreateAsync(TimeSpan timeout)</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Fakes.StubSingleton`1.OnSafeClose(`0)">
            <summary>Sets the stub of Singleton`1.OnSafeClose(!0 value)</summary>
        </member>
        <member name="F:Microsoft.Azure.Amqp.Fakes.StubSingleton`1.OnSafeCloseT0">
            <summary>Sets the stub of Singleton`1.OnSafeClose(!0 value)</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Framing.Fakes.ShimAccepted">
            <summary>Shim type of Microsoft.Azure.Amqp.Framing.Accepted</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.ShimAccepted.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.ShimAccepted.#ctor(Microsoft.Azure.Amqp.Framing.Accepted)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Framing.Fakes.ShimAccepted.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimAccepted.AllInstances.FieldCountGet">
            <summary>Sets the shim of Accepted.get_FieldCount()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimAccepted.AllInstances.OnDecodeByteBufferInt32">
            <summary>Sets the shim of Accepted.OnDecode(ByteBuffer buffer, Int32 count)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimAccepted.AllInstances.OnEncodeByteBuffer">
            <summary>Sets the shim of Accepted.OnEncode(ByteBuffer buffer)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimAccepted.AllInstances.OnValueSize">
            <summary>Sets the shim of Accepted.OnValueSize()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimAccepted.AllInstances.ToString01">
            <summary>Sets the shim of Accepted.ToString()</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.ShimAccepted.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.ShimAccepted.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimAccepted.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.ShimAccepted.Bind(Microsoft.Azure.Amqp.Encoding.IAmqpSerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimAccepted.Constructor">
            <summary>Sets the shim of Accepted.Accepted()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimAccepted.FieldCountGet">
            <summary>Sets the shim of Accepted.get_FieldCount()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimAccepted.OnDecodeByteBufferInt32">
            <summary>Sets the shim of Accepted.OnDecode(ByteBuffer buffer, Int32 count)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimAccepted.OnEncodeByteBuffer">
            <summary>Sets the shim of Accepted.OnEncode(ByteBuffer buffer)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimAccepted.OnValueSize">
            <summary>Sets the shim of Accepted.OnValueSize()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimAccepted.StaticConstructor">
            <summary>Sets the shim of Accepted.Accepted()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimAccepted.ToString">
            <summary>Sets the shim of Accepted.ToString()</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Framing.Fakes.ShimAddress">
            <summary>Shim type of Microsoft.Azure.Amqp.Framing.Address</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.ShimAddress.#ctor(Microsoft.Azure.Amqp.Framing.Address)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Framing.Fakes.ShimAddress.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.ShimAddress.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.ShimAddress.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimAddress.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimAddress.Constructor">
            <summary>Sets the shim of Address.Address()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimAddress.DecodeByteBuffer">
            <summary>Sets the shim of Address.Decode(ByteBuffer buffer)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimAddress.EncodeByteBufferAddress">
            <summary>Sets the shim of Address.Encode(ByteBuffer buffer, Address address)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimAddress.GetEncodeSizeAddress">
            <summary>Sets the shim of Address.GetEncodeSize(Address address)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimAddress.ImplicitOpStringAddress">
            <summary>Sets the shim of Address.op_Implicit(String value)</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Framing.Fakes.ShimAmqpDescribed">
            <summary>Shim type of Microsoft.Azure.Amqp.Framing.AmqpDescribed</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.ShimAmqpDescribed.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.ShimAmqpDescribed.#ctor(Microsoft.Azure.Amqp.Framing.AmqpDescribed)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimAmqpDescribed.AddFieldToStringBooleanStringBuilderStringObjectInt32Ref">
            <summary>Sets the shim of AmqpDescribed.AddFieldToString(Boolean condition, StringBuilder sb, String fieldName, Object value, Int32&amp; count)</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Framing.Fakes.ShimAmqpDescribed.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimAmqpDescribed.AllInstances.AddFieldToStringBooleanStringBuilderStringObjectInt32Ref">
            <summary>Sets the shim of AmqpDescribed.AddFieldToString(Boolean condition, StringBuilder sb, String fieldName, Object value, Int32&amp; count)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimAmqpDescribed.AllInstances.DecodeByteBuffer">
            <summary>Sets the shim of AmqpDescribed.Decode(ByteBuffer buffer)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimAmqpDescribed.AllInstances.DecodeValueByteBuffer">
            <summary>Sets the shim of AmqpDescribed.DecodeValue(ByteBuffer buffer)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimAmqpDescribed.AllInstances.DescriptorCodeGet">
            <summary>Sets the shim of AmqpDescribed.get_DescriptorCode()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimAmqpDescribed.AllInstances.DescriptorNameGet">
            <summary>Sets the shim of AmqpDescribed.get_DescriptorName()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimAmqpDescribed.AllInstances.EncodeByteBuffer">
            <summary>Sets the shim of AmqpDescribed.Encode(ByteBuffer buffer)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimAmqpDescribed.AllInstances.EncodeSizeGet">
            <summary>Sets the shim of AmqpDescribed.get_EncodeSize()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimAmqpDescribed.AllInstances.EncodeValueByteBuffer">
            <summary>Sets the shim of AmqpDescribed.EncodeValue(ByteBuffer buffer)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimAmqpDescribed.AllInstances.GetValueEncodeSize">
            <summary>Sets the shim of AmqpDescribed.GetValueEncodeSize()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimAmqpDescribed.AllInstances.LengthGet">
            <summary>Sets the shim of AmqpDescribed.get_Length()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimAmqpDescribed.AllInstances.LengthSetInt64">
            <summary>Sets the shim of AmqpDescribed.set_Length(Int64 value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimAmqpDescribed.AllInstances.OffsetGet">
            <summary>Sets the shim of AmqpDescribed.get_Offset()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimAmqpDescribed.AllInstances.OffsetSetInt64">
            <summary>Sets the shim of AmqpDescribed.set_Offset(Int64 value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimAmqpDescribed.AllInstances.ToString01">
            <summary>Sets the shim of AmqpDescribed.ToString()</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.ShimAmqpDescribed.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.ShimAmqpDescribed.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimAmqpDescribed.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.ShimAmqpDescribed.Bind(Microsoft.Azure.Amqp.Encoding.IAmqpSerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimAmqpDescribed.ConstructorAmqpSymbolUInt64">
            <summary>Sets the shim of AmqpDescribed.AmqpDescribed(AmqpSymbol name, UInt64 code)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimAmqpDescribed.DecodeByteBuffer">
            <summary>Sets the shim of AmqpDescribed.Decode(ByteBuffer buffer)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimAmqpDescribed.DecodeDescriptorByteBufferAmqpSymbolOutUInt64Out">
            <summary>Sets the shim of AmqpDescribed.DecodeDescriptor(ByteBuffer buffer, AmqpSymbol&amp; name, UInt64&amp; code)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimAmqpDescribed.DecodeValueByteBuffer">
            <summary>Sets the shim of AmqpDescribed.DecodeValue(ByteBuffer buffer)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimAmqpDescribed.DescriptorCodeGet">
            <summary>Sets the shim of AmqpDescribed.get_DescriptorCode()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimAmqpDescribed.DescriptorNameGet">
            <summary>Sets the shim of AmqpDescribed.get_DescriptorName()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimAmqpDescribed.EncodeByteBuffer">
            <summary>Sets the shim of AmqpDescribed.Encode(ByteBuffer buffer)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimAmqpDescribed.EncodeSizeGet">
            <summary>Sets the shim of AmqpDescribed.get_EncodeSize()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimAmqpDescribed.EncodeValueByteBuffer">
            <summary>Sets the shim of AmqpDescribed.EncodeValue(ByteBuffer buffer)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimAmqpDescribed.GetValueEncodeSize">
            <summary>Sets the shim of AmqpDescribed.GetValueEncodeSize()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimAmqpDescribed.LengthGet">
            <summary>Sets the shim of AmqpDescribed.get_Length()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimAmqpDescribed.LengthSetInt64">
            <summary>Sets the shim of AmqpDescribed.set_Length(Int64 value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimAmqpDescribed.OffsetGet">
            <summary>Sets the shim of AmqpDescribed.get_Offset()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimAmqpDescribed.OffsetSetInt64">
            <summary>Sets the shim of AmqpDescribed.set_Offset(Int64 value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimAmqpDescribed.ToString">
            <summary>Sets the shim of AmqpDescribed.ToString()</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Framing.Fakes.ShimAmqpSequence">
            <summary>Shim type of Microsoft.Azure.Amqp.Framing.AmqpSequence</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.ShimAmqpSequence.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.ShimAmqpSequence.#ctor(Microsoft.Azure.Amqp.Framing.AmqpSequence)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Framing.Fakes.ShimAmqpSequence.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimAmqpSequence.AllInstances.FieldCountGet">
            <summary>Sets the shim of AmqpSequence.get_FieldCount()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimAmqpSequence.AllInstances.ListGet">
            <summary>Sets the shim of AmqpSequence.get_List()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimAmqpSequence.AllInstances.OnDecodeByteBufferInt32">
            <summary>Sets the shim of AmqpSequence.OnDecode(ByteBuffer buffer, Int32 count)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimAmqpSequence.AllInstances.OnEncodeByteBuffer">
            <summary>Sets the shim of AmqpSequence.OnEncode(ByteBuffer buffer)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimAmqpSequence.AllInstances.OnValueSize">
            <summary>Sets the shim of AmqpSequence.OnValueSize()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimAmqpSequence.AllInstances.ToString01">
            <summary>Sets the shim of AmqpSequence.ToString()</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.ShimAmqpSequence.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.ShimAmqpSequence.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimAmqpSequence.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.ShimAmqpSequence.Bind(Microsoft.Azure.Amqp.Encoding.IAmqpSerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimAmqpSequence.Constructor">
            <summary>Sets the shim of AmqpSequence.AmqpSequence()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimAmqpSequence.ConstructorIList">
            <summary>Sets the shim of AmqpSequence.AmqpSequence(IList innerList)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimAmqpSequence.FieldCountGet">
            <summary>Sets the shim of AmqpSequence.get_FieldCount()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimAmqpSequence.ListGet">
            <summary>Sets the shim of AmqpSequence.get_List()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimAmqpSequence.OnDecodeByteBufferInt32">
            <summary>Sets the shim of AmqpSequence.OnDecode(ByteBuffer buffer, Int32 count)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimAmqpSequence.OnEncodeByteBuffer">
            <summary>Sets the shim of AmqpSequence.OnEncode(ByteBuffer buffer)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimAmqpSequence.OnValueSize">
            <summary>Sets the shim of AmqpSequence.OnValueSize()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimAmqpSequence.StaticConstructor">
            <summary>Sets the shim of AmqpSequence.AmqpSequence()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimAmqpSequence.ToString">
            <summary>Sets the shim of AmqpSequence.ToString()</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Framing.Fakes.ShimAmqpValue">
            <summary>Shim type of Microsoft.Azure.Amqp.Framing.AmqpValue</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.ShimAmqpValue.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.ShimAmqpValue.#ctor(Microsoft.Azure.Amqp.Framing.AmqpValue)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Framing.Fakes.ShimAmqpValue.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimAmqpValue.AllInstances.DecodeValueByteBuffer">
            <summary>Sets the shim of AmqpValue.DecodeValue(ByteBuffer buffer)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimAmqpValue.AllInstances.EncodeValueByteBuffer">
            <summary>Sets the shim of AmqpValue.EncodeValue(ByteBuffer buffer)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimAmqpValue.AllInstances.GetValueEncodeSize">
            <summary>Sets the shim of AmqpValue.GetValueEncodeSize()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimAmqpValue.AllInstances.ToString01">
            <summary>Sets the shim of AmqpValue.ToString()</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.ShimAmqpValue.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.ShimAmqpValue.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimAmqpValue.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.ShimAmqpValue.Bind(Microsoft.Azure.Amqp.Encoding.IAmqpSerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimAmqpValue.Constructor">
            <summary>Sets the shim of AmqpValue.AmqpValue()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimAmqpValue.DecodeValueByteBuffer">
            <summary>Sets the shim of AmqpValue.DecodeValue(ByteBuffer buffer)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimAmqpValue.EncodeValueByteBuffer">
            <summary>Sets the shim of AmqpValue.EncodeValue(ByteBuffer buffer)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimAmqpValue.GetValueEncodeSize">
            <summary>Sets the shim of AmqpValue.GetValueEncodeSize()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimAmqpValue.StaticConstructor">
            <summary>Sets the shim of AmqpValue.AmqpValue()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimAmqpValue.ToString">
            <summary>Sets the shim of AmqpValue.ToString()</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Framing.Fakes.ShimAnnotations">
            <summary>Shim type of Microsoft.Azure.Amqp.Framing.Annotations</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.ShimAnnotations.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.ShimAnnotations.#ctor(Microsoft.Azure.Amqp.Framing.Annotations)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Framing.Fakes.ShimAnnotations.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.ShimAnnotations.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.ShimAnnotations.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimAnnotations.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.ShimAnnotations.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.ShimAnnotations.Bind(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{Microsoft.Azure.Amqp.Encoding.MapKey,System.Object}})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimAnnotations.Constructor">
            <summary>Sets the shim of Annotations.Annotations()</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Framing.Fakes.ShimApplicationProperties">
            <summary>Shim type of Microsoft.Azure.Amqp.Framing.ApplicationProperties</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.ShimApplicationProperties.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.ShimApplicationProperties.#ctor(Microsoft.Azure.Amqp.Framing.ApplicationProperties)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Framing.Fakes.ShimApplicationProperties.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimApplicationProperties.AllInstances.MapGet">
            <summary>Sets the shim of ApplicationProperties.get_Map()</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.ShimApplicationProperties.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.ShimApplicationProperties.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimApplicationProperties.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.ShimApplicationProperties.Bind(Microsoft.Azure.Amqp.Encoding.IAmqpSerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimApplicationProperties.Constructor">
            <summary>Sets the shim of ApplicationProperties.ApplicationProperties()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimApplicationProperties.MapGet">
            <summary>Sets the shim of ApplicationProperties.get_Map()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimApplicationProperties.StaticConstructor">
            <summary>Sets the shim of ApplicationProperties.ApplicationProperties()</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Framing.Fakes.ShimAttach">
            <summary>Shim type of Microsoft.Azure.Amqp.Framing.Attach</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.ShimAttach.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.ShimAttach.#ctor(Microsoft.Azure.Amqp.Framing.Attach)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Framing.Fakes.ShimAttach.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimAttach.AllInstances.DesiredCapabilitiesGet">
            <summary>Sets the shim of Attach.get_DesiredCapabilities()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimAttach.AllInstances.DesiredCapabilitiesSetMultipleOfAmqpSymbol">
            <summary>Sets the shim of Attach.set_DesiredCapabilities(Multiple`1&lt;AmqpSymbol&gt; value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimAttach.AllInstances.EnsureRequired">
            <summary>Sets the shim of Attach.EnsureRequired()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimAttach.AllInstances.FieldCountGet">
            <summary>Sets the shim of Attach.get_FieldCount()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimAttach.AllInstances.IncompleteUnsettledGet">
            <summary>Sets the shim of Attach.get_IncompleteUnsettled()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimAttach.AllInstances.IncompleteUnsettledSetNullableOfBoolean">
            <summary>Sets the shim of Attach.set_IncompleteUnsettled(Nullable`1&lt;Boolean&gt; value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimAttach.AllInstances.InitialDeliveryCountGet">
            <summary>Sets the shim of Attach.get_InitialDeliveryCount()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimAttach.AllInstances.InitialDeliveryCountSetNullableOfUInt32">
            <summary>Sets the shim of Attach.set_InitialDeliveryCount(Nullable`1&lt;UInt32&gt; value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimAttach.AllInstances.LinkNameGet">
            <summary>Sets the shim of Attach.get_LinkName()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimAttach.AllInstances.LinkNameSetString">
            <summary>Sets the shim of Attach.set_LinkName(String value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimAttach.AllInstances.MaxMessageSizeGet">
            <summary>Sets the shim of Attach.get_MaxMessageSize()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimAttach.AllInstances.MaxMessageSizeSetNullableOfUInt64">
            <summary>Sets the shim of Attach.set_MaxMessageSize(Nullable`1&lt;UInt64&gt; value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimAttach.AllInstances.OfferedCapabilitiesGet">
            <summary>Sets the shim of Attach.get_OfferedCapabilities()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimAttach.AllInstances.OfferedCapabilitiesSetMultipleOfAmqpSymbol">
            <summary>Sets the shim of Attach.set_OfferedCapabilities(Multiple`1&lt;AmqpSymbol&gt; value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimAttach.AllInstances.OnDecodeByteBufferInt32">
            <summary>Sets the shim of Attach.OnDecode(ByteBuffer buffer, Int32 count)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimAttach.AllInstances.OnEncodeByteBuffer">
            <summary>Sets the shim of Attach.OnEncode(ByteBuffer buffer)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimAttach.AllInstances.OnValueSize">
            <summary>Sets the shim of Attach.OnValueSize()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimAttach.AllInstances.PropertiesGet">
            <summary>Sets the shim of Attach.get_Properties()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimAttach.AllInstances.PropertiesSetFields">
            <summary>Sets the shim of Attach.set_Properties(Fields value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimAttach.AllInstances.RcvSettleModeGet">
            <summary>Sets the shim of Attach.get_RcvSettleMode()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimAttach.AllInstances.RcvSettleModeSetNullableOfByte">
            <summary>Sets the shim of Attach.set_RcvSettleMode(Nullable`1&lt;Byte&gt; value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimAttach.AllInstances.RoleGet">
            <summary>Sets the shim of Attach.get_Role()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimAttach.AllInstances.RoleSetNullableOfBoolean">
            <summary>Sets the shim of Attach.set_Role(Nullable`1&lt;Boolean&gt; value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimAttach.AllInstances.SndSettleModeGet">
            <summary>Sets the shim of Attach.get_SndSettleMode()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimAttach.AllInstances.SndSettleModeSetNullableOfByte">
            <summary>Sets the shim of Attach.set_SndSettleMode(Nullable`1&lt;Byte&gt; value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimAttach.AllInstances.SourceGet">
            <summary>Sets the shim of Attach.get_Source()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimAttach.AllInstances.SourceSetObject">
            <summary>Sets the shim of Attach.set_Source(Object value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimAttach.AllInstances.TargetGet">
            <summary>Sets the shim of Attach.get_Target()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimAttach.AllInstances.TargetSetObject">
            <summary>Sets the shim of Attach.set_Target(Object value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimAttach.AllInstances.ToString01">
            <summary>Sets the shim of Attach.ToString()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimAttach.AllInstances.UnsettledGet">
            <summary>Sets the shim of Attach.get_Unsettled()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimAttach.AllInstances.UnsettledSetAmqpMap">
            <summary>Sets the shim of Attach.set_Unsettled(AmqpMap value)</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.ShimAttach.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.ShimAttach.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimAttach.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.ShimAttach.Bind(Microsoft.Azure.Amqp.Encoding.IAmqpSerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimAttach.Constructor">
            <summary>Sets the shim of Attach.Attach()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimAttach.DesiredCapabilitiesGet">
            <summary>Sets the shim of Attach.get_DesiredCapabilities()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimAttach.DesiredCapabilitiesSetMultipleOfAmqpSymbol">
            <summary>Sets the shim of Attach.set_DesiredCapabilities(Multiple`1&lt;AmqpSymbol&gt; value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimAttach.EnsureRequired">
            <summary>Sets the shim of Attach.EnsureRequired()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimAttach.FieldCountGet">
            <summary>Sets the shim of Attach.get_FieldCount()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimAttach.IncompleteUnsettledGet">
            <summary>Sets the shim of Attach.get_IncompleteUnsettled()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimAttach.IncompleteUnsettledSetNullableOfBoolean">
            <summary>Sets the shim of Attach.set_IncompleteUnsettled(Nullable`1&lt;Boolean&gt; value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimAttach.InitialDeliveryCountGet">
            <summary>Sets the shim of Attach.get_InitialDeliveryCount()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimAttach.InitialDeliveryCountSetNullableOfUInt32">
            <summary>Sets the shim of Attach.set_InitialDeliveryCount(Nullable`1&lt;UInt32&gt; value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimAttach.LinkNameGet">
            <summary>Sets the shim of Attach.get_LinkName()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimAttach.LinkNameSetString">
            <summary>Sets the shim of Attach.set_LinkName(String value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimAttach.MaxMessageSizeGet">
            <summary>Sets the shim of Attach.get_MaxMessageSize()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimAttach.MaxMessageSizeSetNullableOfUInt64">
            <summary>Sets the shim of Attach.set_MaxMessageSize(Nullable`1&lt;UInt64&gt; value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimAttach.OfferedCapabilitiesGet">
            <summary>Sets the shim of Attach.get_OfferedCapabilities()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimAttach.OfferedCapabilitiesSetMultipleOfAmqpSymbol">
            <summary>Sets the shim of Attach.set_OfferedCapabilities(Multiple`1&lt;AmqpSymbol&gt; value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimAttach.OnDecodeByteBufferInt32">
            <summary>Sets the shim of Attach.OnDecode(ByteBuffer buffer, Int32 count)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimAttach.OnEncodeByteBuffer">
            <summary>Sets the shim of Attach.OnEncode(ByteBuffer buffer)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimAttach.OnValueSize">
            <summary>Sets the shim of Attach.OnValueSize()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimAttach.PropertiesGet">
            <summary>Sets the shim of Attach.get_Properties()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimAttach.PropertiesSetFields">
            <summary>Sets the shim of Attach.set_Properties(Fields value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimAttach.RcvSettleModeGet">
            <summary>Sets the shim of Attach.get_RcvSettleMode()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimAttach.RcvSettleModeSetNullableOfByte">
            <summary>Sets the shim of Attach.set_RcvSettleMode(Nullable`1&lt;Byte&gt; value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimAttach.RoleGet">
            <summary>Sets the shim of Attach.get_Role()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimAttach.RoleSetNullableOfBoolean">
            <summary>Sets the shim of Attach.set_Role(Nullable`1&lt;Boolean&gt; value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimAttach.SndSettleModeGet">
            <summary>Sets the shim of Attach.get_SndSettleMode()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimAttach.SndSettleModeSetNullableOfByte">
            <summary>Sets the shim of Attach.set_SndSettleMode(Nullable`1&lt;Byte&gt; value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimAttach.SourceGet">
            <summary>Sets the shim of Attach.get_Source()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimAttach.SourceSetObject">
            <summary>Sets the shim of Attach.set_Source(Object value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimAttach.StaticConstructor">
            <summary>Sets the shim of Attach.Attach()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimAttach.TargetGet">
            <summary>Sets the shim of Attach.get_Target()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimAttach.TargetSetObject">
            <summary>Sets the shim of Attach.set_Target(Object value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimAttach.ToString">
            <summary>Sets the shim of Attach.ToString()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimAttach.UnsettledGet">
            <summary>Sets the shim of Attach.get_Unsettled()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimAttach.UnsettledSetAmqpMap">
            <summary>Sets the shim of Attach.set_Unsettled(AmqpMap value)</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Framing.Fakes.ShimBegin">
            <summary>Shim type of Microsoft.Azure.Amqp.Framing.Begin</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.ShimBegin.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.ShimBegin.#ctor(Microsoft.Azure.Amqp.Framing.Begin)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Framing.Fakes.ShimBegin.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimBegin.AllInstances.DesiredCapabilitiesGet">
            <summary>Sets the shim of Begin.get_DesiredCapabilities()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimBegin.AllInstances.DesiredCapabilitiesSetMultipleOfAmqpSymbol">
            <summary>Sets the shim of Begin.set_DesiredCapabilities(Multiple`1&lt;AmqpSymbol&gt; value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimBegin.AllInstances.EnsureRequired">
            <summary>Sets the shim of Begin.EnsureRequired()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimBegin.AllInstances.FieldCountGet">
            <summary>Sets the shim of Begin.get_FieldCount()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimBegin.AllInstances.HandleMaxGet">
            <summary>Sets the shim of Begin.get_HandleMax()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimBegin.AllInstances.HandleMaxSetNullableOfUInt32">
            <summary>Sets the shim of Begin.set_HandleMax(Nullable`1&lt;UInt32&gt; value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimBegin.AllInstances.IncomingWindowGet">
            <summary>Sets the shim of Begin.get_IncomingWindow()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimBegin.AllInstances.IncomingWindowSetNullableOfUInt32">
            <summary>Sets the shim of Begin.set_IncomingWindow(Nullable`1&lt;UInt32&gt; value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimBegin.AllInstances.NextOutgoingIdGet">
            <summary>Sets the shim of Begin.get_NextOutgoingId()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimBegin.AllInstances.NextOutgoingIdSetNullableOfUInt32">
            <summary>Sets the shim of Begin.set_NextOutgoingId(Nullable`1&lt;UInt32&gt; value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimBegin.AllInstances.OfferedCapabilitiesGet">
            <summary>Sets the shim of Begin.get_OfferedCapabilities()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimBegin.AllInstances.OfferedCapabilitiesSetMultipleOfAmqpSymbol">
            <summary>Sets the shim of Begin.set_OfferedCapabilities(Multiple`1&lt;AmqpSymbol&gt; value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimBegin.AllInstances.OnDecodeByteBufferInt32">
            <summary>Sets the shim of Begin.OnDecode(ByteBuffer buffer, Int32 count)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimBegin.AllInstances.OnEncodeByteBuffer">
            <summary>Sets the shim of Begin.OnEncode(ByteBuffer buffer)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimBegin.AllInstances.OnValueSize">
            <summary>Sets the shim of Begin.OnValueSize()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimBegin.AllInstances.OutgoingWindowGet">
            <summary>Sets the shim of Begin.get_OutgoingWindow()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimBegin.AllInstances.OutgoingWindowSetNullableOfUInt32">
            <summary>Sets the shim of Begin.set_OutgoingWindow(Nullable`1&lt;UInt32&gt; value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimBegin.AllInstances.PropertiesGet">
            <summary>Sets the shim of Begin.get_Properties()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimBegin.AllInstances.PropertiesSetFields">
            <summary>Sets the shim of Begin.set_Properties(Fields value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimBegin.AllInstances.RemoteChannelGet">
            <summary>Sets the shim of Begin.get_RemoteChannel()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimBegin.AllInstances.RemoteChannelSetNullableOfUInt16">
            <summary>Sets the shim of Begin.set_RemoteChannel(Nullable`1&lt;UInt16&gt; value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimBegin.AllInstances.ToString01">
            <summary>Sets the shim of Begin.ToString()</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.ShimBegin.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.ShimBegin.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimBegin.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.ShimBegin.Bind(Microsoft.Azure.Amqp.Encoding.IAmqpSerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimBegin.Constructor">
            <summary>Sets the shim of Begin.Begin()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimBegin.DesiredCapabilitiesGet">
            <summary>Sets the shim of Begin.get_DesiredCapabilities()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimBegin.DesiredCapabilitiesSetMultipleOfAmqpSymbol">
            <summary>Sets the shim of Begin.set_DesiredCapabilities(Multiple`1&lt;AmqpSymbol&gt; value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimBegin.EnsureRequired">
            <summary>Sets the shim of Begin.EnsureRequired()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimBegin.FieldCountGet">
            <summary>Sets the shim of Begin.get_FieldCount()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimBegin.HandleMaxGet">
            <summary>Sets the shim of Begin.get_HandleMax()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimBegin.HandleMaxSetNullableOfUInt32">
            <summary>Sets the shim of Begin.set_HandleMax(Nullable`1&lt;UInt32&gt; value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimBegin.IncomingWindowGet">
            <summary>Sets the shim of Begin.get_IncomingWindow()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimBegin.IncomingWindowSetNullableOfUInt32">
            <summary>Sets the shim of Begin.set_IncomingWindow(Nullable`1&lt;UInt32&gt; value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimBegin.NextOutgoingIdGet">
            <summary>Sets the shim of Begin.get_NextOutgoingId()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimBegin.NextOutgoingIdSetNullableOfUInt32">
            <summary>Sets the shim of Begin.set_NextOutgoingId(Nullable`1&lt;UInt32&gt; value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimBegin.OfferedCapabilitiesGet">
            <summary>Sets the shim of Begin.get_OfferedCapabilities()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimBegin.OfferedCapabilitiesSetMultipleOfAmqpSymbol">
            <summary>Sets the shim of Begin.set_OfferedCapabilities(Multiple`1&lt;AmqpSymbol&gt; value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimBegin.OnDecodeByteBufferInt32">
            <summary>Sets the shim of Begin.OnDecode(ByteBuffer buffer, Int32 count)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimBegin.OnEncodeByteBuffer">
            <summary>Sets the shim of Begin.OnEncode(ByteBuffer buffer)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimBegin.OnValueSize">
            <summary>Sets the shim of Begin.OnValueSize()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimBegin.OutgoingWindowGet">
            <summary>Sets the shim of Begin.get_OutgoingWindow()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimBegin.OutgoingWindowSetNullableOfUInt32">
            <summary>Sets the shim of Begin.set_OutgoingWindow(Nullable`1&lt;UInt32&gt; value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimBegin.PropertiesGet">
            <summary>Sets the shim of Begin.get_Properties()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimBegin.PropertiesSetFields">
            <summary>Sets the shim of Begin.set_Properties(Fields value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimBegin.RemoteChannelGet">
            <summary>Sets the shim of Begin.get_RemoteChannel()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimBegin.RemoteChannelSetNullableOfUInt16">
            <summary>Sets the shim of Begin.set_RemoteChannel(Nullable`1&lt;UInt16&gt; value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimBegin.StaticConstructor">
            <summary>Sets the shim of Begin.Begin()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimBegin.ToString">
            <summary>Sets the shim of Begin.ToString()</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Framing.Fakes.ShimData">
            <summary>Shim type of Microsoft.Azure.Amqp.Framing.Data</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.ShimData.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.ShimData.#ctor(Microsoft.Azure.Amqp.Framing.Data)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Framing.Fakes.ShimData.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimData.AllInstances.DecodeValueByteBuffer">
            <summary>Sets the shim of Data.DecodeValue(ByteBuffer buffer)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimData.AllInstances.EncodeValueByteBuffer">
            <summary>Sets the shim of Data.EncodeValue(ByteBuffer buffer)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimData.AllInstances.GetValueEncodeSize">
            <summary>Sets the shim of Data.GetValueEncodeSize()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimData.AllInstances.ToString01">
            <summary>Sets the shim of Data.ToString()</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.ShimData.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.ShimData.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimData.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.ShimData.Bind(Microsoft.Azure.Amqp.Encoding.IAmqpSerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimData.Constructor">
            <summary>Sets the shim of Data.Data()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimData.DecodeValueByteBuffer">
            <summary>Sets the shim of Data.DecodeValue(ByteBuffer buffer)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimData.EncodeValueByteBuffer">
            <summary>Sets the shim of Data.EncodeValue(ByteBuffer buffer)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimData.GetEncodedPrefixInt32">
            <summary>Sets the shim of Data.GetEncodedPrefix(Int32 valueLength)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimData.GetValueEncodeSize">
            <summary>Sets the shim of Data.GetValueEncodeSize()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimData.StaticConstructor">
            <summary>Sets the shim of Data.Data()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimData.ToString">
            <summary>Sets the shim of Data.ToString()</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Framing.Fakes.ShimDeliveryAnnotations">
            <summary>Shim type of Microsoft.Azure.Amqp.Framing.DeliveryAnnotations</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.ShimDeliveryAnnotations.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.ShimDeliveryAnnotations.#ctor(Microsoft.Azure.Amqp.Framing.DeliveryAnnotations)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Framing.Fakes.ShimDeliveryAnnotations.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.ShimDeliveryAnnotations.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.ShimDeliveryAnnotations.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimDeliveryAnnotations.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.ShimDeliveryAnnotations.Bind(Microsoft.Azure.Amqp.Encoding.IAmqpSerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimDeliveryAnnotations.Constructor">
            <summary>Sets the shim of DeliveryAnnotations.DeliveryAnnotations()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimDeliveryAnnotations.StaticConstructor">
            <summary>Sets the shim of DeliveryAnnotations.DeliveryAnnotations()</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Framing.Fakes.ShimDeliveryState">
            <summary>Shim type of Microsoft.Azure.Amqp.Framing.DeliveryState</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.ShimDeliveryState.#ctor(Microsoft.Azure.Amqp.Framing.DeliveryState)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Framing.Fakes.ShimDeliveryState.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.ShimDeliveryState.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.ShimDeliveryState.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimDeliveryState.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.ShimDeliveryState.Bind(Microsoft.Azure.Amqp.Encoding.IAmqpSerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimDeliveryState.ConstructorAmqpSymbolUInt64">
            <summary>Sets the shim of DeliveryState.DeliveryState(AmqpSymbol name, UInt64 code)</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Framing.Fakes.ShimDescribedAnnotations">
            <summary>Shim type of Microsoft.Azure.Amqp.Framing.DescribedAnnotations</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.ShimDescribedAnnotations.#ctor(Microsoft.Azure.Amqp.Framing.DescribedAnnotations)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Framing.Fakes.ShimDescribedAnnotations.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimDescribedAnnotations.AllInstances.MapGet">
            <summary>Sets the shim of DescribedAnnotations.get_Map()</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.ShimDescribedAnnotations.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.ShimDescribedAnnotations.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimDescribedAnnotations.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.ShimDescribedAnnotations.Bind(Microsoft.Azure.Amqp.Encoding.IAmqpSerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimDescribedAnnotations.ConstructorAmqpSymbolUInt64">
            <summary>Sets the shim of DescribedAnnotations.DescribedAnnotations(AmqpSymbol name, UInt64 code)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimDescribedAnnotations.MapGet">
            <summary>Sets the shim of DescribedAnnotations.get_Map()</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Framing.Fakes.ShimDescribedList">
            <summary>Shim type of Microsoft.Azure.Amqp.Framing.DescribedList</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.ShimDescribedList.#ctor(Microsoft.Azure.Amqp.Framing.DescribedList)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Framing.Fakes.ShimDescribedList.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimDescribedList.AllInstances.DecodeValueByteBuffer">
            <summary>Sets the shim of DescribedList.DecodeValue(ByteBuffer buffer)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimDescribedList.AllInstances.DecodeValueByteBufferInt32Int32">
            <summary>Sets the shim of DescribedList.DecodeValue(ByteBuffer buffer, Int32 size, Int32 count)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimDescribedList.AllInstances.EncodeValueByteBuffer">
            <summary>Sets the shim of DescribedList.EncodeValue(ByteBuffer buffer)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimDescribedList.AllInstances.EnsureRequired">
            <summary>Sets the shim of DescribedList.EnsureRequired()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimDescribedList.AllInstances.GetValueEncodeSize">
            <summary>Sets the shim of DescribedList.GetValueEncodeSize()</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.ShimDescribedList.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.ShimDescribedList.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimDescribedList.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.ShimDescribedList.Bind(Microsoft.Azure.Amqp.Encoding.IAmqpSerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimDescribedList.ConstructorAmqpSymbolUInt64">
            <summary>Sets the shim of DescribedList.DescribedList(AmqpSymbol name, UInt64 code)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimDescribedList.DecodeValueByteBuffer">
            <summary>Sets the shim of DescribedList.DecodeValue(ByteBuffer buffer)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimDescribedList.DecodeValueByteBufferInt32Int32">
            <summary>Sets the shim of DescribedList.DecodeValue(ByteBuffer buffer, Int32 size, Int32 count)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimDescribedList.EncodeValueByteBuffer">
            <summary>Sets the shim of DescribedList.EncodeValue(ByteBuffer buffer)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimDescribedList.EnsureRequired">
            <summary>Sets the shim of DescribedList.EnsureRequired()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimDescribedList.GetValueEncodeSize">
            <summary>Sets the shim of DescribedList.GetValueEncodeSize()</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Framing.Fakes.ShimDescribedMap">
            <summary>Shim type of Microsoft.Azure.Amqp.Framing.DescribedMap</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.ShimDescribedMap.#ctor(Microsoft.Azure.Amqp.Framing.DescribedMap)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Framing.Fakes.ShimDescribedMap.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimDescribedMap.AllInstances.DecodeValueByteBuffer">
            <summary>Sets the shim of DescribedMap.DecodeValue(ByteBuffer buffer)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimDescribedMap.AllInstances.DecodeValueByteBufferInt32Int32">
            <summary>Sets the shim of DescribedMap.DecodeValue(ByteBuffer buffer, Int32 size, Int32 count)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimDescribedMap.AllInstances.EncodeValueByteBuffer">
            <summary>Sets the shim of DescribedMap.EncodeValue(ByteBuffer buffer)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimDescribedMap.AllInstances.GetValueEncodeSize">
            <summary>Sets the shim of DescribedMap.GetValueEncodeSize()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimDescribedMap.AllInstances.InnerMapGet">
            <summary>Sets the shim of DescribedMap.get_InnerMap()</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.ShimDescribedMap.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.ShimDescribedMap.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimDescribedMap.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.ShimDescribedMap.Bind(Microsoft.Azure.Amqp.Encoding.IAmqpSerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimDescribedMap.ConstructorAmqpSymbolUInt64">
            <summary>Sets the shim of DescribedMap.DescribedMap(AmqpSymbol name, UInt64 code)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimDescribedMap.DecodeValueByteBuffer">
            <summary>Sets the shim of DescribedMap.DecodeValue(ByteBuffer buffer)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimDescribedMap.DecodeValueByteBufferInt32Int32">
            <summary>Sets the shim of DescribedMap.DecodeValue(ByteBuffer buffer, Int32 size, Int32 count)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimDescribedMap.EncodeValueByteBuffer">
            <summary>Sets the shim of DescribedMap.EncodeValue(ByteBuffer buffer)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimDescribedMap.GetValueEncodeSize">
            <summary>Sets the shim of DescribedMap.GetValueEncodeSize()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimDescribedMap.InnerMapGet">
            <summary>Sets the shim of DescribedMap.get_InnerMap()</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Framing.Fakes.ShimDetach">
            <summary>Shim type of Microsoft.Azure.Amqp.Framing.Detach</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.ShimDetach.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.ShimDetach.#ctor(Microsoft.Azure.Amqp.Framing.Detach)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Framing.Fakes.ShimDetach.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimDetach.AllInstances.ClosedGet">
            <summary>Sets the shim of Detach.get_Closed()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimDetach.AllInstances.ClosedSetNullableOfBoolean">
            <summary>Sets the shim of Detach.set_Closed(Nullable`1&lt;Boolean&gt; value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimDetach.AllInstances.EnsureRequired">
            <summary>Sets the shim of Detach.EnsureRequired()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimDetach.AllInstances.ErrorGet">
            <summary>Sets the shim of Detach.get_Error()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimDetach.AllInstances.ErrorSetError">
            <summary>Sets the shim of Detach.set_Error(Error value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimDetach.AllInstances.FieldCountGet">
            <summary>Sets the shim of Detach.get_FieldCount()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimDetach.AllInstances.OnDecodeByteBufferInt32">
            <summary>Sets the shim of Detach.OnDecode(ByteBuffer buffer, Int32 count)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimDetach.AllInstances.OnEncodeByteBuffer">
            <summary>Sets the shim of Detach.OnEncode(ByteBuffer buffer)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimDetach.AllInstances.OnValueSize">
            <summary>Sets the shim of Detach.OnValueSize()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimDetach.AllInstances.ToString01">
            <summary>Sets the shim of Detach.ToString()</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.ShimDetach.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.ShimDetach.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimDetach.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.ShimDetach.Bind(Microsoft.Azure.Amqp.Encoding.IAmqpSerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimDetach.ClosedGet">
            <summary>Sets the shim of Detach.get_Closed()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimDetach.ClosedSetNullableOfBoolean">
            <summary>Sets the shim of Detach.set_Closed(Nullable`1&lt;Boolean&gt; value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimDetach.Constructor">
            <summary>Sets the shim of Detach.Detach()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimDetach.EnsureRequired">
            <summary>Sets the shim of Detach.EnsureRequired()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimDetach.ErrorGet">
            <summary>Sets the shim of Detach.get_Error()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimDetach.ErrorSetError">
            <summary>Sets the shim of Detach.set_Error(Error value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimDetach.FieldCountGet">
            <summary>Sets the shim of Detach.get_FieldCount()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimDetach.OnDecodeByteBufferInt32">
            <summary>Sets the shim of Detach.OnDecode(ByteBuffer buffer, Int32 count)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimDetach.OnEncodeByteBuffer">
            <summary>Sets the shim of Detach.OnEncode(ByteBuffer buffer)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimDetach.OnValueSize">
            <summary>Sets the shim of Detach.OnValueSize()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimDetach.StaticConstructor">
            <summary>Sets the shim of Detach.Detach()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimDetach.ToString">
            <summary>Sets the shim of Detach.ToString()</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Framing.Fakes.ShimDisposition">
            <summary>Shim type of Microsoft.Azure.Amqp.Framing.Disposition</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.ShimDisposition.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.ShimDisposition.#ctor(Microsoft.Azure.Amqp.Framing.Disposition)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Framing.Fakes.ShimDisposition.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimDisposition.AllInstances.BatchableGet">
            <summary>Sets the shim of Disposition.get_Batchable()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimDisposition.AllInstances.BatchableSetNullableOfBoolean">
            <summary>Sets the shim of Disposition.set_Batchable(Nullable`1&lt;Boolean&gt; value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimDisposition.AllInstances.EnsureRequired">
            <summary>Sets the shim of Disposition.EnsureRequired()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimDisposition.AllInstances.FieldCountGet">
            <summary>Sets the shim of Disposition.get_FieldCount()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimDisposition.AllInstances.FirstGet">
            <summary>Sets the shim of Disposition.get_First()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimDisposition.AllInstances.FirstSetNullableOfUInt32">
            <summary>Sets the shim of Disposition.set_First(Nullable`1&lt;UInt32&gt; value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimDisposition.AllInstances.LastGet">
            <summary>Sets the shim of Disposition.get_Last()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimDisposition.AllInstances.LastSetNullableOfUInt32">
            <summary>Sets the shim of Disposition.set_Last(Nullable`1&lt;UInt32&gt; value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimDisposition.AllInstances.OnDecodeByteBufferInt32">
            <summary>Sets the shim of Disposition.OnDecode(ByteBuffer buffer, Int32 count)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimDisposition.AllInstances.OnEncodeByteBuffer">
            <summary>Sets the shim of Disposition.OnEncode(ByteBuffer buffer)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimDisposition.AllInstances.OnValueSize">
            <summary>Sets the shim of Disposition.OnValueSize()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimDisposition.AllInstances.RoleGet">
            <summary>Sets the shim of Disposition.get_Role()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimDisposition.AllInstances.RoleSetNullableOfBoolean">
            <summary>Sets the shim of Disposition.set_Role(Nullable`1&lt;Boolean&gt; value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimDisposition.AllInstances.SettledGet">
            <summary>Sets the shim of Disposition.get_Settled()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimDisposition.AllInstances.SettledSetNullableOfBoolean">
            <summary>Sets the shim of Disposition.set_Settled(Nullable`1&lt;Boolean&gt; value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimDisposition.AllInstances.StateGet">
            <summary>Sets the shim of Disposition.get_State()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimDisposition.AllInstances.StateSetDeliveryState">
            <summary>Sets the shim of Disposition.set_State(DeliveryState value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimDisposition.AllInstances.ToString01">
            <summary>Sets the shim of Disposition.ToString()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimDisposition.BatchableGet">
            <summary>Sets the shim of Disposition.get_Batchable()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimDisposition.BatchableSetNullableOfBoolean">
            <summary>Sets the shim of Disposition.set_Batchable(Nullable`1&lt;Boolean&gt; value)</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.ShimDisposition.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.ShimDisposition.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimDisposition.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.ShimDisposition.Bind(Microsoft.Azure.Amqp.Encoding.IAmqpSerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimDisposition.Constructor">
            <summary>Sets the shim of Disposition.Disposition()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimDisposition.EnsureRequired">
            <summary>Sets the shim of Disposition.EnsureRequired()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimDisposition.FieldCountGet">
            <summary>Sets the shim of Disposition.get_FieldCount()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimDisposition.FirstGet">
            <summary>Sets the shim of Disposition.get_First()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimDisposition.FirstSetNullableOfUInt32">
            <summary>Sets the shim of Disposition.set_First(Nullable`1&lt;UInt32&gt; value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimDisposition.LastGet">
            <summary>Sets the shim of Disposition.get_Last()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimDisposition.LastSetNullableOfUInt32">
            <summary>Sets the shim of Disposition.set_Last(Nullable`1&lt;UInt32&gt; value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimDisposition.OnDecodeByteBufferInt32">
            <summary>Sets the shim of Disposition.OnDecode(ByteBuffer buffer, Int32 count)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimDisposition.OnEncodeByteBuffer">
            <summary>Sets the shim of Disposition.OnEncode(ByteBuffer buffer)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimDisposition.OnValueSize">
            <summary>Sets the shim of Disposition.OnValueSize()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimDisposition.RoleGet">
            <summary>Sets the shim of Disposition.get_Role()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimDisposition.RoleSetNullableOfBoolean">
            <summary>Sets the shim of Disposition.set_Role(Nullable`1&lt;Boolean&gt; value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimDisposition.SettledGet">
            <summary>Sets the shim of Disposition.get_Settled()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimDisposition.SettledSetNullableOfBoolean">
            <summary>Sets the shim of Disposition.set_Settled(Nullable`1&lt;Boolean&gt; value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimDisposition.StateGet">
            <summary>Sets the shim of Disposition.get_State()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimDisposition.StateSetDeliveryState">
            <summary>Sets the shim of Disposition.set_State(DeliveryState value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimDisposition.StaticConstructor">
            <summary>Sets the shim of Disposition.Disposition()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimDisposition.ToString">
            <summary>Sets the shim of Disposition.ToString()</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Framing.Fakes.ShimError">
            <summary>Shim type of Microsoft.Azure.Amqp.Framing.Error</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.ShimError.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.ShimError.#ctor(Microsoft.Azure.Amqp.Framing.Error)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Framing.Fakes.ShimError.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimError.AllInstances.ConditionGet">
            <summary>Sets the shim of Error.get_Condition()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimError.AllInstances.ConditionSetAmqpSymbol">
            <summary>Sets the shim of Error.set_Condition(AmqpSymbol value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimError.AllInstances.DescriptionGet">
            <summary>Sets the shim of Error.get_Description()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimError.AllInstances.DescriptionSetString">
            <summary>Sets the shim of Error.set_Description(String value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimError.AllInstances.EnsureRequired">
            <summary>Sets the shim of Error.EnsureRequired()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimError.AllInstances.FieldCountGet">
            <summary>Sets the shim of Error.get_FieldCount()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimError.AllInstances.InfoGet">
            <summary>Sets the shim of Error.get_Info()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimError.AllInstances.InfoSetFields">
            <summary>Sets the shim of Error.set_Info(Fields value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimError.AllInstances.OnDecodeByteBufferInt32">
            <summary>Sets the shim of Error.OnDecode(ByteBuffer buffer, Int32 count)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimError.AllInstances.OnEncodeByteBuffer">
            <summary>Sets the shim of Error.OnEncode(ByteBuffer buffer)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimError.AllInstances.OnValueSize">
            <summary>Sets the shim of Error.OnValueSize()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimError.AllInstances.SystemRuntimeSerializationISerializableGetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the shim of Error.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimError.AllInstances.ToString01">
            <summary>Sets the shim of Error.ToString()</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.ShimError.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.ShimError.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimError.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.ShimError.Bind(Microsoft.Azure.Amqp.Encoding.IAmqpSerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.ShimError.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimError.ConditionGet">
            <summary>Sets the shim of Error.get_Condition()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimError.ConditionSetAmqpSymbol">
            <summary>Sets the shim of Error.set_Condition(AmqpSymbol value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimError.Constructor">
            <summary>Sets the shim of Error.Error()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimError.ConstructorSerializationInfoStreamingContext">
            <summary>Sets the shim of Error.Error(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimError.DescriptionGet">
            <summary>Sets the shim of Error.get_Description()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimError.DescriptionSetString">
            <summary>Sets the shim of Error.set_Description(String value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimError.EnsureRequired">
            <summary>Sets the shim of Error.EnsureRequired()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimError.FieldCountGet">
            <summary>Sets the shim of Error.get_FieldCount()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimError.FromExceptionException">
            <summary>Sets the shim of Error.FromException(Exception exception)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimError.InfoGet">
            <summary>Sets the shim of Error.get_Info()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimError.InfoSetFields">
            <summary>Sets the shim of Error.set_Info(Fields value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimError.OnDecodeByteBufferInt32">
            <summary>Sets the shim of Error.OnDecode(ByteBuffer buffer, Int32 count)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimError.OnEncodeByteBuffer">
            <summary>Sets the shim of Error.OnEncode(ByteBuffer buffer)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimError.OnValueSize">
            <summary>Sets the shim of Error.OnValueSize()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimError.StaticConstructor">
            <summary>Sets the shim of Error.Error()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimError.SystemRuntimeSerializationISerializableGetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the shim of Error.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimError.ToString">
            <summary>Sets the shim of Error.ToString()</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Framing.Fakes.ShimFields">
            <summary>Shim type of Microsoft.Azure.Amqp.Framing.Fields</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.ShimFields.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.ShimFields.#ctor(Microsoft.Azure.Amqp.Framing.Fields)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Framing.Fakes.ShimFields.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.ShimFields.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.ShimFields.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimFields.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.ShimFields.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.ShimFields.Bind(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{Microsoft.Azure.Amqp.Encoding.MapKey,System.Object}})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimFields.Constructor">
            <summary>Sets the shim of Fields.Fields()</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Framing.Fakes.ShimFilterSet">
            <summary>Shim type of Microsoft.Azure.Amqp.Framing.FilterSet</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.ShimFilterSet.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.ShimFilterSet.#ctor(Microsoft.Azure.Amqp.Framing.FilterSet)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Framing.Fakes.ShimFilterSet.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.ShimFilterSet.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.ShimFilterSet.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimFilterSet.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.ShimFilterSet.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.ShimFilterSet.Bind(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{Microsoft.Azure.Amqp.Encoding.MapKey,System.Object}})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimFilterSet.Constructor">
            <summary>Sets the shim of FilterSet.FilterSet()</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Framing.Fakes.ShimFlow">
            <summary>Shim type of Microsoft.Azure.Amqp.Framing.Flow</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.ShimFlow.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.ShimFlow.#ctor(Microsoft.Azure.Amqp.Framing.Flow)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Framing.Fakes.ShimFlow.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimFlow.AllInstances.AvailableGet">
            <summary>Sets the shim of Flow.get_Available()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimFlow.AllInstances.AvailableSetNullableOfUInt32">
            <summary>Sets the shim of Flow.set_Available(Nullable`1&lt;UInt32&gt; value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimFlow.AllInstances.DeliveryCountGet">
            <summary>Sets the shim of Flow.get_DeliveryCount()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimFlow.AllInstances.DeliveryCountSetNullableOfUInt32">
            <summary>Sets the shim of Flow.set_DeliveryCount(Nullable`1&lt;UInt32&gt; value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimFlow.AllInstances.DrainGet">
            <summary>Sets the shim of Flow.get_Drain()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimFlow.AllInstances.DrainSetNullableOfBoolean">
            <summary>Sets the shim of Flow.set_Drain(Nullable`1&lt;Boolean&gt; value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimFlow.AllInstances.EchoGet">
            <summary>Sets the shim of Flow.get_Echo()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimFlow.AllInstances.EchoSetNullableOfBoolean">
            <summary>Sets the shim of Flow.set_Echo(Nullable`1&lt;Boolean&gt; value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimFlow.AllInstances.EnsureRequired">
            <summary>Sets the shim of Flow.EnsureRequired()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimFlow.AllInstances.FieldCountGet">
            <summary>Sets the shim of Flow.get_FieldCount()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimFlow.AllInstances.IncomingWindowGet">
            <summary>Sets the shim of Flow.get_IncomingWindow()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimFlow.AllInstances.IncomingWindowSetNullableOfUInt32">
            <summary>Sets the shim of Flow.set_IncomingWindow(Nullable`1&lt;UInt32&gt; value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimFlow.AllInstances.LinkCreditGet">
            <summary>Sets the shim of Flow.get_LinkCredit()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimFlow.AllInstances.LinkCreditSetNullableOfUInt32">
            <summary>Sets the shim of Flow.set_LinkCredit(Nullable`1&lt;UInt32&gt; value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimFlow.AllInstances.NextIncomingIdGet">
            <summary>Sets the shim of Flow.get_NextIncomingId()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimFlow.AllInstances.NextIncomingIdSetNullableOfUInt32">
            <summary>Sets the shim of Flow.set_NextIncomingId(Nullable`1&lt;UInt32&gt; value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimFlow.AllInstances.NextOutgoingIdGet">
            <summary>Sets the shim of Flow.get_NextOutgoingId()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimFlow.AllInstances.NextOutgoingIdSetNullableOfUInt32">
            <summary>Sets the shim of Flow.set_NextOutgoingId(Nullable`1&lt;UInt32&gt; value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimFlow.AllInstances.OnDecodeByteBufferInt32">
            <summary>Sets the shim of Flow.OnDecode(ByteBuffer buffer, Int32 count)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimFlow.AllInstances.OnEncodeByteBuffer">
            <summary>Sets the shim of Flow.OnEncode(ByteBuffer buffer)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimFlow.AllInstances.OnValueSize">
            <summary>Sets the shim of Flow.OnValueSize()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimFlow.AllInstances.OutgoingWindowGet">
            <summary>Sets the shim of Flow.get_OutgoingWindow()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimFlow.AllInstances.OutgoingWindowSetNullableOfUInt32">
            <summary>Sets the shim of Flow.set_OutgoingWindow(Nullable`1&lt;UInt32&gt; value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimFlow.AllInstances.PropertiesGet">
            <summary>Sets the shim of Flow.get_Properties()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimFlow.AllInstances.PropertiesSetFields">
            <summary>Sets the shim of Flow.set_Properties(Fields value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimFlow.AllInstances.ToString01">
            <summary>Sets the shim of Flow.ToString()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimFlow.AvailableGet">
            <summary>Sets the shim of Flow.get_Available()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimFlow.AvailableSetNullableOfUInt32">
            <summary>Sets the shim of Flow.set_Available(Nullable`1&lt;UInt32&gt; value)</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.ShimFlow.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.ShimFlow.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimFlow.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.ShimFlow.Bind(Microsoft.Azure.Amqp.Encoding.IAmqpSerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimFlow.Constructor">
            <summary>Sets the shim of Flow.Flow()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimFlow.DeliveryCountGet">
            <summary>Sets the shim of Flow.get_DeliveryCount()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimFlow.DeliveryCountSetNullableOfUInt32">
            <summary>Sets the shim of Flow.set_DeliveryCount(Nullable`1&lt;UInt32&gt; value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimFlow.DrainGet">
            <summary>Sets the shim of Flow.get_Drain()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimFlow.DrainSetNullableOfBoolean">
            <summary>Sets the shim of Flow.set_Drain(Nullable`1&lt;Boolean&gt; value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimFlow.EchoGet">
            <summary>Sets the shim of Flow.get_Echo()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimFlow.EchoSetNullableOfBoolean">
            <summary>Sets the shim of Flow.set_Echo(Nullable`1&lt;Boolean&gt; value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimFlow.EnsureRequired">
            <summary>Sets the shim of Flow.EnsureRequired()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimFlow.FieldCountGet">
            <summary>Sets the shim of Flow.get_FieldCount()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimFlow.IncomingWindowGet">
            <summary>Sets the shim of Flow.get_IncomingWindow()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimFlow.IncomingWindowSetNullableOfUInt32">
            <summary>Sets the shim of Flow.set_IncomingWindow(Nullable`1&lt;UInt32&gt; value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimFlow.LinkCreditGet">
            <summary>Sets the shim of Flow.get_LinkCredit()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimFlow.LinkCreditSetNullableOfUInt32">
            <summary>Sets the shim of Flow.set_LinkCredit(Nullable`1&lt;UInt32&gt; value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimFlow.NextIncomingIdGet">
            <summary>Sets the shim of Flow.get_NextIncomingId()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimFlow.NextIncomingIdSetNullableOfUInt32">
            <summary>Sets the shim of Flow.set_NextIncomingId(Nullable`1&lt;UInt32&gt; value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimFlow.NextOutgoingIdGet">
            <summary>Sets the shim of Flow.get_NextOutgoingId()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimFlow.NextOutgoingIdSetNullableOfUInt32">
            <summary>Sets the shim of Flow.set_NextOutgoingId(Nullable`1&lt;UInt32&gt; value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimFlow.OnDecodeByteBufferInt32">
            <summary>Sets the shim of Flow.OnDecode(ByteBuffer buffer, Int32 count)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimFlow.OnEncodeByteBuffer">
            <summary>Sets the shim of Flow.OnEncode(ByteBuffer buffer)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimFlow.OnValueSize">
            <summary>Sets the shim of Flow.OnValueSize()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimFlow.OutgoingWindowGet">
            <summary>Sets the shim of Flow.get_OutgoingWindow()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimFlow.OutgoingWindowSetNullableOfUInt32">
            <summary>Sets the shim of Flow.set_OutgoingWindow(Nullable`1&lt;UInt32&gt; value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimFlow.PropertiesGet">
            <summary>Sets the shim of Flow.get_Properties()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimFlow.PropertiesSetFields">
            <summary>Sets the shim of Flow.set_Properties(Fields value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimFlow.StaticConstructor">
            <summary>Sets the shim of Flow.Flow()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimFlow.ToString">
            <summary>Sets the shim of Flow.ToString()</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Framing.Fakes.ShimFooter">
            <summary>Shim type of Microsoft.Azure.Amqp.Framing.Footer</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.ShimFooter.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.ShimFooter.#ctor(Microsoft.Azure.Amqp.Framing.Footer)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Framing.Fakes.ShimFooter.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimFooter.AllInstances.ToString01">
            <summary>Sets the shim of Footer.ToString()</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.ShimFooter.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.ShimFooter.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimFooter.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.ShimFooter.Bind(Microsoft.Azure.Amqp.Encoding.IAmqpSerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimFooter.Constructor">
            <summary>Sets the shim of Footer.Footer()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimFooter.StaticConstructor">
            <summary>Sets the shim of Footer.Footer()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimFooter.ToString">
            <summary>Sets the shim of Footer.ToString()</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Framing.Fakes.ShimFrame">
            <summary>Shim type of Microsoft.Azure.Amqp.Framing.Frame</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.ShimFrame.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.ShimFrame.#ctor(Microsoft.Azure.Amqp.Framing.Frame)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Framing.Fakes.ShimFrame.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimFrame.AllInstances.ChannelGet">
            <summary>Sets the shim of Frame.get_Channel()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimFrame.AllInstances.ChannelSetUInt16">
            <summary>Sets the shim of Frame.set_Channel(UInt16 value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimFrame.AllInstances.CommandGet">
            <summary>Sets the shim of Frame.get_Command()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimFrame.AllInstances.CommandSetPerformative">
            <summary>Sets the shim of Frame.set_Command(Performative value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimFrame.AllInstances.DataOffsetGet">
            <summary>Sets the shim of Frame.get_DataOffset()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimFrame.AllInstances.DataOffsetSetByte">
            <summary>Sets the shim of Frame.set_DataOffset(Byte value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimFrame.AllInstances.DecodeByteBuffer">
            <summary>Sets the shim of Frame.Decode(ByteBuffer buffer)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimFrame.AllInstances.DecodeCommandByteBuffer">
            <summary>Sets the shim of Frame.DecodeCommand(ByteBuffer buffer)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimFrame.AllInstances.DecodeHeaderByteBuffer">
            <summary>Sets the shim of Frame.DecodeHeader(ByteBuffer buffer)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimFrame.AllInstances.DecodePayloadByteBuffer">
            <summary>Sets the shim of Frame.DecodePayload(ByteBuffer buffer)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimFrame.AllInstances.Dispose">
            <summary>Sets the shim of Frame.Dispose()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimFrame.AllInstances.PayloadGet">
            <summary>Sets the shim of Frame.get_Payload()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimFrame.AllInstances.PayloadSetArraySegmentOfByte">
            <summary>Sets the shim of Frame.set_Payload(ArraySegment`1&lt;Byte&gt; value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimFrame.AllInstances.RawByteBufferGet">
            <summary>Sets the shim of Frame.get_RawByteBuffer()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimFrame.AllInstances.RawByteBufferSetByteBuffer">
            <summary>Sets the shim of Frame.set_RawByteBuffer(ByteBuffer value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimFrame.AllInstances.SizeGet">
            <summary>Sets the shim of Frame.get_Size()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimFrame.AllInstances.SizeSetInt32">
            <summary>Sets the shim of Frame.set_Size(Int32 value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimFrame.AllInstances.ToString01">
            <summary>Sets the shim of Frame.ToString()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimFrame.AllInstances.TypeGet">
            <summary>Sets the shim of Frame.get_Type()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimFrame.AllInstances.TypeSetFrameType">
            <summary>Sets the shim of Frame.set_Type(FrameType value)</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.ShimFrame.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.ShimFrame.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimFrame.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.ShimFrame.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimFrame.ChannelGet">
            <summary>Sets the shim of Frame.get_Channel()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimFrame.ChannelSetUInt16">
            <summary>Sets the shim of Frame.set_Channel(UInt16 value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimFrame.CommandGet">
            <summary>Sets the shim of Frame.get_Command()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimFrame.CommandSetPerformative">
            <summary>Sets the shim of Frame.set_Command(Performative value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimFrame.Constructor">
            <summary>Sets the shim of Frame.Frame()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimFrame.ConstructorFrameType">
            <summary>Sets the shim of Frame.Frame(FrameType type)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimFrame.DataOffsetGet">
            <summary>Sets the shim of Frame.get_DataOffset()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimFrame.DataOffsetSetByte">
            <summary>Sets the shim of Frame.set_DataOffset(Byte value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimFrame.DecodeByteBuffer">
            <summary>Sets the shim of Frame.Decode(ByteBuffer buffer)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimFrame.DecodeCommandByteBuffer">
            <summary>Sets the shim of Frame.DecodeCommand(ByteBuffer buffer)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimFrame.DecodeHeaderByteBuffer">
            <summary>Sets the shim of Frame.DecodeHeader(ByteBuffer buffer)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimFrame.DecodePayloadByteBuffer">
            <summary>Sets the shim of Frame.DecodePayload(ByteBuffer buffer)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimFrame.Dispose">
            <summary>Sets the shim of Frame.Dispose()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimFrame.EncodeCommandFrameTypeUInt16PerformativeInt32">
            <summary>Sets the shim of Frame.EncodeCommand(FrameType type, UInt16 channel, Performative command, Int32 payloadSize)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimFrame.PayloadGet">
            <summary>Sets the shim of Frame.get_Payload()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimFrame.PayloadSetArraySegmentOfByte">
            <summary>Sets the shim of Frame.set_Payload(ArraySegment`1&lt;Byte&gt; value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimFrame.RawByteBufferGet">
            <summary>Sets the shim of Frame.get_RawByteBuffer()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimFrame.RawByteBufferSetByteBuffer">
            <summary>Sets the shim of Frame.set_RawByteBuffer(ByteBuffer value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimFrame.SizeGet">
            <summary>Sets the shim of Frame.get_Size()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimFrame.SizeSetInt32">
            <summary>Sets the shim of Frame.set_Size(Int32 value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimFrame.ToString">
            <summary>Sets the shim of Frame.ToString()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimFrame.TypeGet">
            <summary>Sets the shim of Frame.get_Type()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimFrame.TypeSetFrameType">
            <summary>Sets the shim of Frame.set_Type(FrameType value)</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Framing.Fakes.ShimHeader">
            <summary>Shim type of Microsoft.Azure.Amqp.Framing.Header</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.ShimHeader.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.ShimHeader.#ctor(Microsoft.Azure.Amqp.Framing.Header)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Framing.Fakes.ShimHeader.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimHeader.AllInstances.DeliveryCountGet">
            <summary>Sets the shim of Header.get_DeliveryCount()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimHeader.AllInstances.DeliveryCountSetNullableOfUInt32">
            <summary>Sets the shim of Header.set_DeliveryCount(Nullable`1&lt;UInt32&gt; value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimHeader.AllInstances.DurableGet">
            <summary>Sets the shim of Header.get_Durable()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimHeader.AllInstances.DurableSetNullableOfBoolean">
            <summary>Sets the shim of Header.set_Durable(Nullable`1&lt;Boolean&gt; value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimHeader.AllInstances.FieldCountGet">
            <summary>Sets the shim of Header.get_FieldCount()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimHeader.AllInstances.FirstAcquirerGet">
            <summary>Sets the shim of Header.get_FirstAcquirer()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimHeader.AllInstances.FirstAcquirerSetNullableOfBoolean">
            <summary>Sets the shim of Header.set_FirstAcquirer(Nullable`1&lt;Boolean&gt; value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimHeader.AllInstances.OnDecodeByteBufferInt32">
            <summary>Sets the shim of Header.OnDecode(ByteBuffer buffer, Int32 count)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimHeader.AllInstances.OnEncodeByteBuffer">
            <summary>Sets the shim of Header.OnEncode(ByteBuffer buffer)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimHeader.AllInstances.OnValueSize">
            <summary>Sets the shim of Header.OnValueSize()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimHeader.AllInstances.PriorityGet">
            <summary>Sets the shim of Header.get_Priority()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimHeader.AllInstances.PrioritySetNullableOfByte">
            <summary>Sets the shim of Header.set_Priority(Nullable`1&lt;Byte&gt; value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimHeader.AllInstances.ToString01">
            <summary>Sets the shim of Header.ToString()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimHeader.AllInstances.TtlGet">
            <summary>Sets the shim of Header.get_Ttl()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimHeader.AllInstances.TtlSetNullableOfUInt32">
            <summary>Sets the shim of Header.set_Ttl(Nullable`1&lt;UInt32&gt; value)</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.ShimHeader.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.ShimHeader.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimHeader.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.ShimHeader.Bind(Microsoft.Azure.Amqp.Encoding.IAmqpSerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimHeader.Constructor">
            <summary>Sets the shim of Header.Header()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimHeader.DeliveryCountGet">
            <summary>Sets the shim of Header.get_DeliveryCount()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimHeader.DeliveryCountSetNullableOfUInt32">
            <summary>Sets the shim of Header.set_DeliveryCount(Nullable`1&lt;UInt32&gt; value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimHeader.DurableGet">
            <summary>Sets the shim of Header.get_Durable()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimHeader.DurableSetNullableOfBoolean">
            <summary>Sets the shim of Header.set_Durable(Nullable`1&lt;Boolean&gt; value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimHeader.FieldCountGet">
            <summary>Sets the shim of Header.get_FieldCount()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimHeader.FirstAcquirerGet">
            <summary>Sets the shim of Header.get_FirstAcquirer()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimHeader.FirstAcquirerSetNullableOfBoolean">
            <summary>Sets the shim of Header.set_FirstAcquirer(Nullable`1&lt;Boolean&gt; value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimHeader.OnDecodeByteBufferInt32">
            <summary>Sets the shim of Header.OnDecode(ByteBuffer buffer, Int32 count)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimHeader.OnEncodeByteBuffer">
            <summary>Sets the shim of Header.OnEncode(ByteBuffer buffer)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimHeader.OnValueSize">
            <summary>Sets the shim of Header.OnValueSize()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimHeader.PriorityGet">
            <summary>Sets the shim of Header.get_Priority()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimHeader.PrioritySetNullableOfByte">
            <summary>Sets the shim of Header.set_Priority(Nullable`1&lt;Byte&gt; value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimHeader.StaticConstructor">
            <summary>Sets the shim of Header.Header()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimHeader.ToString">
            <summary>Sets the shim of Header.ToString()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimHeader.TtlGet">
            <summary>Sets the shim of Header.get_Ttl()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimHeader.TtlSetNullableOfUInt32">
            <summary>Sets the shim of Header.set_Ttl(Nullable`1&lt;UInt32&gt; value)</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Framing.Fakes.ShimLinkPerformative">
            <summary>Shim type of Microsoft.Azure.Amqp.Framing.LinkPerformative</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.ShimLinkPerformative.#ctor(Microsoft.Azure.Amqp.Framing.LinkPerformative)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Framing.Fakes.ShimLinkPerformative.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimLinkPerformative.AllInstances.HandleGet">
            <summary>Sets the shim of LinkPerformative.get_Handle()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimLinkPerformative.AllInstances.HandleSetNullableOfUInt32">
            <summary>Sets the shim of LinkPerformative.set_Handle(Nullable`1&lt;UInt32&gt; value)</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.ShimLinkPerformative.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.ShimLinkPerformative.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimLinkPerformative.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.ShimLinkPerformative.Bind(Microsoft.Azure.Amqp.Encoding.IAmqpSerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimLinkPerformative.ConstructorAmqpSymbolUInt64">
            <summary>Sets the shim of LinkPerformative.LinkPerformative(AmqpSymbol name, UInt64 code)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimLinkPerformative.HandleGet">
            <summary>Sets the shim of LinkPerformative.get_Handle()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimLinkPerformative.HandleSetNullableOfUInt32">
            <summary>Sets the shim of LinkPerformative.set_Handle(Nullable`1&lt;UInt32&gt; value)</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Framing.Fakes.ShimMessageAnnotations">
            <summary>Shim type of Microsoft.Azure.Amqp.Framing.MessageAnnotations</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.ShimMessageAnnotations.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.ShimMessageAnnotations.#ctor(Microsoft.Azure.Amqp.Framing.MessageAnnotations)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Framing.Fakes.ShimMessageAnnotations.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.ShimMessageAnnotations.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.ShimMessageAnnotations.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimMessageAnnotations.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.ShimMessageAnnotations.Bind(Microsoft.Azure.Amqp.Encoding.IAmqpSerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimMessageAnnotations.Constructor">
            <summary>Sets the shim of MessageAnnotations.MessageAnnotations()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimMessageAnnotations.StaticConstructor">
            <summary>Sets the shim of MessageAnnotations.MessageAnnotations()</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Framing.Fakes.ShimMessageId">
            <summary>Shim type of Microsoft.Azure.Amqp.Framing.MessageId</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.ShimMessageId.#ctor(Microsoft.Azure.Amqp.Framing.MessageId)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Framing.Fakes.ShimMessageId.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.ShimMessageId.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.ShimMessageId.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimMessageId.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimMessageId.Constructor">
            <summary>Sets the shim of MessageId.MessageId()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimMessageId.DecodeByteBuffer">
            <summary>Sets the shim of MessageId.Decode(ByteBuffer buffer)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimMessageId.EncodeByteBufferMessageId">
            <summary>Sets the shim of MessageId.Encode(ByteBuffer buffer, MessageId messageId)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimMessageId.GetEncodeSizeMessageId">
            <summary>Sets the shim of MessageId.GetEncodeSize(MessageId messageId)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimMessageId.ImplicitOpArraySegmentOfByteMessageId">
            <summary>Sets the shim of MessageId.op_Implicit(ArraySegment`1&lt;Byte&gt; value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimMessageId.ImplicitOpGuidMessageId">
            <summary>Sets the shim of MessageId.op_Implicit(Guid value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimMessageId.ImplicitOpStringMessageId">
            <summary>Sets the shim of MessageId.op_Implicit(String value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimMessageId.ImplicitOpUInt64MessageId">
            <summary>Sets the shim of MessageId.op_Implicit(UInt64 value)</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Framing.Fakes.ShimModified">
            <summary>Shim type of Microsoft.Azure.Amqp.Framing.Modified</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.ShimModified.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.ShimModified.#ctor(Microsoft.Azure.Amqp.Framing.Modified)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Framing.Fakes.ShimModified.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimModified.AllInstances.DeliveryFailedGet">
            <summary>Sets the shim of Modified.get_DeliveryFailed()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimModified.AllInstances.DeliveryFailedSetNullableOfBoolean">
            <summary>Sets the shim of Modified.set_DeliveryFailed(Nullable`1&lt;Boolean&gt; value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimModified.AllInstances.FieldCountGet">
            <summary>Sets the shim of Modified.get_FieldCount()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimModified.AllInstances.MessageAnnotationsGet">
            <summary>Sets the shim of Modified.get_MessageAnnotations()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimModified.AllInstances.MessageAnnotationsSetFields">
            <summary>Sets the shim of Modified.set_MessageAnnotations(Fields value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimModified.AllInstances.OnDecodeByteBufferInt32">
            <summary>Sets the shim of Modified.OnDecode(ByteBuffer buffer, Int32 count)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimModified.AllInstances.OnEncodeByteBuffer">
            <summary>Sets the shim of Modified.OnEncode(ByteBuffer buffer)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimModified.AllInstances.OnValueSize">
            <summary>Sets the shim of Modified.OnValueSize()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimModified.AllInstances.ToString01">
            <summary>Sets the shim of Modified.ToString()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimModified.AllInstances.UndeliverableHereGet">
            <summary>Sets the shim of Modified.get_UndeliverableHere()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimModified.AllInstances.UndeliverableHereSetNullableOfBoolean">
            <summary>Sets the shim of Modified.set_UndeliverableHere(Nullable`1&lt;Boolean&gt; value)</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.ShimModified.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.ShimModified.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimModified.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.ShimModified.Bind(Microsoft.Azure.Amqp.Encoding.IAmqpSerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimModified.Constructor">
            <summary>Sets the shim of Modified.Modified()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimModified.DeliveryFailedGet">
            <summary>Sets the shim of Modified.get_DeliveryFailed()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimModified.DeliveryFailedSetNullableOfBoolean">
            <summary>Sets the shim of Modified.set_DeliveryFailed(Nullable`1&lt;Boolean&gt; value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimModified.FieldCountGet">
            <summary>Sets the shim of Modified.get_FieldCount()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimModified.MessageAnnotationsGet">
            <summary>Sets the shim of Modified.get_MessageAnnotations()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimModified.MessageAnnotationsSetFields">
            <summary>Sets the shim of Modified.set_MessageAnnotations(Fields value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimModified.OnDecodeByteBufferInt32">
            <summary>Sets the shim of Modified.OnDecode(ByteBuffer buffer, Int32 count)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimModified.OnEncodeByteBuffer">
            <summary>Sets the shim of Modified.OnEncode(ByteBuffer buffer)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimModified.OnValueSize">
            <summary>Sets the shim of Modified.OnValueSize()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimModified.StaticConstructor">
            <summary>Sets the shim of Modified.Modified()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimModified.ToString">
            <summary>Sets the shim of Modified.ToString()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimModified.UndeliverableHereGet">
            <summary>Sets the shim of Modified.get_UndeliverableHere()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimModified.UndeliverableHereSetNullableOfBoolean">
            <summary>Sets the shim of Modified.set_UndeliverableHere(Nullable`1&lt;Boolean&gt; value)</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Framing.Fakes.ShimMultiple`1">
            <summary>Shim type of Microsoft.Azure.Amqp.Framing.Multiple`1</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.ShimMultiple`1.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.ShimMultiple`1.#ctor(Microsoft.Azure.Amqp.Framing.Multiple{`0})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimMultiple`1.AddT0">
            <summary>Sets the shim of Multiple`1.Add(!0 item)</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Framing.Fakes.ShimMultiple`1.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimMultiple`1.AllInstances.AddT0">
            <summary>Sets the shim of Multiple`1.Add(!0 item)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimMultiple`1.AllInstances.ContainsT0">
            <summary>Sets the shim of Multiple`1.Contains(!0 item)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimMultiple`1.AllInstances.ToString01">
            <summary>Sets the shim of Multiple`1.ToString()</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.ShimMultiple`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.ShimMultiple`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimMultiple`1.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimMultiple`1.Constructor">
            <summary>Sets the shim of Multiple`1.Multiple`1()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimMultiple`1.ConstructorIListOfT0">
            <summary>Sets the shim of Multiple`1.Multiple`1(IList`1&lt;!0&gt; value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimMultiple`1.ContainsT0">
            <summary>Sets the shim of Multiple`1.Contains(!0 item)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimMultiple`1.DecodeByteBuffer">
            <summary>Sets the shim of Multiple`1.Decode(ByteBuffer buffer)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimMultiple`1.EncodeMultipleOfT0ByteBuffer">
            <summary>Sets the shim of Multiple`1.Encode(Multiple`1&lt;!0&gt; multiple, ByteBuffer buffer)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimMultiple`1.GetEncodeSizeMultipleOfT0">
            <summary>Sets the shim of Multiple`1.GetEncodeSize(Multiple`1&lt;!0&gt; multiple)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimMultiple`1.IntersectMultipleOfT0MultipleOfT0">
            <summary>Sets the shim of Multiple`1.Intersect(Multiple`1&lt;!0&gt; multiple1, Multiple`1&lt;!0&gt; multiple2)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimMultiple`1.ToString">
            <summary>Sets the shim of Multiple`1.ToString()</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Framing.Fakes.ShimOpen">
            <summary>Shim type of Microsoft.Azure.Amqp.Framing.Open</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.ShimOpen.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.ShimOpen.#ctor(Microsoft.Azure.Amqp.Framing.Open)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Framing.Fakes.ShimOpen.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimOpen.AllInstances.ChannelMaxGet">
            <summary>Sets the shim of Open.get_ChannelMax()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimOpen.AllInstances.ChannelMaxSetNullableOfUInt16">
            <summary>Sets the shim of Open.set_ChannelMax(Nullable`1&lt;UInt16&gt; value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimOpen.AllInstances.ContainerIdGet">
            <summary>Sets the shim of Open.get_ContainerId()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimOpen.AllInstances.ContainerIdSetString">
            <summary>Sets the shim of Open.set_ContainerId(String value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimOpen.AllInstances.DesiredCapabilitiesGet">
            <summary>Sets the shim of Open.get_DesiredCapabilities()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimOpen.AllInstances.DesiredCapabilitiesSetMultipleOfAmqpSymbol">
            <summary>Sets the shim of Open.set_DesiredCapabilities(Multiple`1&lt;AmqpSymbol&gt; value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimOpen.AllInstances.EnsureRequired">
            <summary>Sets the shim of Open.EnsureRequired()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimOpen.AllInstances.FieldCountGet">
            <summary>Sets the shim of Open.get_FieldCount()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimOpen.AllInstances.HostNameGet">
            <summary>Sets the shim of Open.get_HostName()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimOpen.AllInstances.HostNameSetString">
            <summary>Sets the shim of Open.set_HostName(String value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimOpen.AllInstances.IdleTimeOutGet">
            <summary>Sets the shim of Open.get_IdleTimeOut()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimOpen.AllInstances.IdleTimeOutSetNullableOfUInt32">
            <summary>Sets the shim of Open.set_IdleTimeOut(Nullable`1&lt;UInt32&gt; value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimOpen.AllInstances.IncomingLocalesGet">
            <summary>Sets the shim of Open.get_IncomingLocales()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimOpen.AllInstances.IncomingLocalesSetMultipleOfAmqpSymbol">
            <summary>Sets the shim of Open.set_IncomingLocales(Multiple`1&lt;AmqpSymbol&gt; value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimOpen.AllInstances.MaxFrameSizeGet">
            <summary>Sets the shim of Open.get_MaxFrameSize()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimOpen.AllInstances.MaxFrameSizeSetNullableOfUInt32">
            <summary>Sets the shim of Open.set_MaxFrameSize(Nullable`1&lt;UInt32&gt; value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimOpen.AllInstances.OfferedCapabilitiesGet">
            <summary>Sets the shim of Open.get_OfferedCapabilities()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimOpen.AllInstances.OfferedCapabilitiesSetMultipleOfAmqpSymbol">
            <summary>Sets the shim of Open.set_OfferedCapabilities(Multiple`1&lt;AmqpSymbol&gt; value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimOpen.AllInstances.OnDecodeByteBufferInt32">
            <summary>Sets the shim of Open.OnDecode(ByteBuffer buffer, Int32 count)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimOpen.AllInstances.OnEncodeByteBuffer">
            <summary>Sets the shim of Open.OnEncode(ByteBuffer buffer)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimOpen.AllInstances.OnValueSize">
            <summary>Sets the shim of Open.OnValueSize()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimOpen.AllInstances.OutgoingLocalesGet">
            <summary>Sets the shim of Open.get_OutgoingLocales()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimOpen.AllInstances.OutgoingLocalesSetMultipleOfAmqpSymbol">
            <summary>Sets the shim of Open.set_OutgoingLocales(Multiple`1&lt;AmqpSymbol&gt; value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimOpen.AllInstances.PropertiesGet">
            <summary>Sets the shim of Open.get_Properties()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimOpen.AllInstances.PropertiesSetFields">
            <summary>Sets the shim of Open.set_Properties(Fields value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimOpen.AllInstances.ToString01">
            <summary>Sets the shim of Open.ToString()</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.ShimOpen.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.ShimOpen.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimOpen.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.ShimOpen.Bind(Microsoft.Azure.Amqp.Encoding.IAmqpSerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimOpen.ChannelMaxGet">
            <summary>Sets the shim of Open.get_ChannelMax()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimOpen.ChannelMaxSetNullableOfUInt16">
            <summary>Sets the shim of Open.set_ChannelMax(Nullable`1&lt;UInt16&gt; value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimOpen.Constructor">
            <summary>Sets the shim of Open.Open()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimOpen.ContainerIdGet">
            <summary>Sets the shim of Open.get_ContainerId()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimOpen.ContainerIdSetString">
            <summary>Sets the shim of Open.set_ContainerId(String value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimOpen.DesiredCapabilitiesGet">
            <summary>Sets the shim of Open.get_DesiredCapabilities()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimOpen.DesiredCapabilitiesSetMultipleOfAmqpSymbol">
            <summary>Sets the shim of Open.set_DesiredCapabilities(Multiple`1&lt;AmqpSymbol&gt; value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimOpen.EnsureRequired">
            <summary>Sets the shim of Open.EnsureRequired()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimOpen.FieldCountGet">
            <summary>Sets the shim of Open.get_FieldCount()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimOpen.HostNameGet">
            <summary>Sets the shim of Open.get_HostName()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimOpen.HostNameSetString">
            <summary>Sets the shim of Open.set_HostName(String value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimOpen.IdleTimeOutGet">
            <summary>Sets the shim of Open.get_IdleTimeOut()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimOpen.IdleTimeOutSetNullableOfUInt32">
            <summary>Sets the shim of Open.set_IdleTimeOut(Nullable`1&lt;UInt32&gt; value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimOpen.IncomingLocalesGet">
            <summary>Sets the shim of Open.get_IncomingLocales()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimOpen.IncomingLocalesSetMultipleOfAmqpSymbol">
            <summary>Sets the shim of Open.set_IncomingLocales(Multiple`1&lt;AmqpSymbol&gt; value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimOpen.MaxFrameSizeGet">
            <summary>Sets the shim of Open.get_MaxFrameSize()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimOpen.MaxFrameSizeSetNullableOfUInt32">
            <summary>Sets the shim of Open.set_MaxFrameSize(Nullable`1&lt;UInt32&gt; value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimOpen.OfferedCapabilitiesGet">
            <summary>Sets the shim of Open.get_OfferedCapabilities()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimOpen.OfferedCapabilitiesSetMultipleOfAmqpSymbol">
            <summary>Sets the shim of Open.set_OfferedCapabilities(Multiple`1&lt;AmqpSymbol&gt; value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimOpen.OnDecodeByteBufferInt32">
            <summary>Sets the shim of Open.OnDecode(ByteBuffer buffer, Int32 count)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimOpen.OnEncodeByteBuffer">
            <summary>Sets the shim of Open.OnEncode(ByteBuffer buffer)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimOpen.OnValueSize">
            <summary>Sets the shim of Open.OnValueSize()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimOpen.OutgoingLocalesGet">
            <summary>Sets the shim of Open.get_OutgoingLocales()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimOpen.OutgoingLocalesSetMultipleOfAmqpSymbol">
            <summary>Sets the shim of Open.set_OutgoingLocales(Multiple`1&lt;AmqpSymbol&gt; value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimOpen.PropertiesGet">
            <summary>Sets the shim of Open.get_Properties()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimOpen.PropertiesSetFields">
            <summary>Sets the shim of Open.set_Properties(Fields value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimOpen.StaticConstructor">
            <summary>Sets the shim of Open.Open()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimOpen.ToString">
            <summary>Sets the shim of Open.ToString()</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Framing.Fakes.ShimOutcome">
            <summary>Shim type of Microsoft.Azure.Amqp.Framing.Outcome</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.ShimOutcome.#ctor(Microsoft.Azure.Amqp.Framing.Outcome)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Framing.Fakes.ShimOutcome.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.ShimOutcome.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.ShimOutcome.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimOutcome.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.ShimOutcome.Bind(Microsoft.Azure.Amqp.Encoding.IAmqpSerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimOutcome.ConstructorAmqpSymbolUInt64">
            <summary>Sets the shim of Outcome.Outcome(AmqpSymbol name, UInt64 code)</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Framing.Fakes.ShimPerformative">
            <summary>Shim type of Microsoft.Azure.Amqp.Framing.Performative</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.ShimPerformative.#ctor(Microsoft.Azure.Amqp.Framing.Performative)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Framing.Fakes.ShimPerformative.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.ShimPerformative.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.ShimPerformative.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimPerformative.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.ShimPerformative.Bind(Microsoft.Azure.Amqp.Encoding.IAmqpSerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimPerformative.ConstructorAmqpSymbolUInt64">
            <summary>Sets the shim of Performative.Performative(AmqpSymbol name, UInt64 code)</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Framing.Fakes.ShimProperties">
            <summary>Shim type of Microsoft.Azure.Amqp.Framing.Properties</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.ShimProperties.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.ShimProperties.#ctor(Microsoft.Azure.Amqp.Framing.Properties)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimProperties.AbsoluteExpiryTimeGet">
            <summary>Sets the shim of Properties.get_AbsoluteExpiryTime()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimProperties.AbsoluteExpiryTimeSetNullableOfDateTime">
            <summary>Sets the shim of Properties.set_AbsoluteExpiryTime(Nullable`1&lt;DateTime&gt; value)</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Framing.Fakes.ShimProperties.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimProperties.AllInstances.AbsoluteExpiryTimeGet">
            <summary>Sets the shim of Properties.get_AbsoluteExpiryTime()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimProperties.AllInstances.AbsoluteExpiryTimeSetNullableOfDateTime">
            <summary>Sets the shim of Properties.set_AbsoluteExpiryTime(Nullable`1&lt;DateTime&gt; value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimProperties.AllInstances.ContentEncodingGet">
            <summary>Sets the shim of Properties.get_ContentEncoding()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimProperties.AllInstances.ContentEncodingSetAmqpSymbol">
            <summary>Sets the shim of Properties.set_ContentEncoding(AmqpSymbol value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimProperties.AllInstances.ContentTypeGet">
            <summary>Sets the shim of Properties.get_ContentType()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimProperties.AllInstances.ContentTypeSetAmqpSymbol">
            <summary>Sets the shim of Properties.set_ContentType(AmqpSymbol value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimProperties.AllInstances.CorrelationIdGet">
            <summary>Sets the shim of Properties.get_CorrelationId()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimProperties.AllInstances.CorrelationIdSetMessageId">
            <summary>Sets the shim of Properties.set_CorrelationId(MessageId value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimProperties.AllInstances.CreationTimeGet">
            <summary>Sets the shim of Properties.get_CreationTime()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimProperties.AllInstances.CreationTimeSetNullableOfDateTime">
            <summary>Sets the shim of Properties.set_CreationTime(Nullable`1&lt;DateTime&gt; value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimProperties.AllInstances.FieldCountGet">
            <summary>Sets the shim of Properties.get_FieldCount()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimProperties.AllInstances.GroupIdGet">
            <summary>Sets the shim of Properties.get_GroupId()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimProperties.AllInstances.GroupIdSetString">
            <summary>Sets the shim of Properties.set_GroupId(String value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimProperties.AllInstances.GroupSequenceGet">
            <summary>Sets the shim of Properties.get_GroupSequence()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimProperties.AllInstances.GroupSequenceSetNullableOfUInt32">
            <summary>Sets the shim of Properties.set_GroupSequence(Nullable`1&lt;UInt32&gt; value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimProperties.AllInstances.MessageIdGet">
            <summary>Sets the shim of Properties.get_MessageId()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimProperties.AllInstances.MessageIdSetMessageId">
            <summary>Sets the shim of Properties.set_MessageId(MessageId value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimProperties.AllInstances.OnDecodeByteBufferInt32">
            <summary>Sets the shim of Properties.OnDecode(ByteBuffer buffer, Int32 count)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimProperties.AllInstances.OnEncodeByteBuffer">
            <summary>Sets the shim of Properties.OnEncode(ByteBuffer buffer)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimProperties.AllInstances.OnValueSize">
            <summary>Sets the shim of Properties.OnValueSize()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimProperties.AllInstances.ReplyToGet">
            <summary>Sets the shim of Properties.get_ReplyTo()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimProperties.AllInstances.ReplyToGroupIdGet">
            <summary>Sets the shim of Properties.get_ReplyToGroupId()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimProperties.AllInstances.ReplyToGroupIdSetString">
            <summary>Sets the shim of Properties.set_ReplyToGroupId(String value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimProperties.AllInstances.ReplyToSetAddress">
            <summary>Sets the shim of Properties.set_ReplyTo(Address value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimProperties.AllInstances.SubjectGet">
            <summary>Sets the shim of Properties.get_Subject()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimProperties.AllInstances.SubjectSetString">
            <summary>Sets the shim of Properties.set_Subject(String value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimProperties.AllInstances.ToGet">
            <summary>Sets the shim of Properties.get_To()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimProperties.AllInstances.ToSetAddress">
            <summary>Sets the shim of Properties.set_To(Address value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimProperties.AllInstances.ToString01">
            <summary>Sets the shim of Properties.ToString()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimProperties.AllInstances.UserIdGet">
            <summary>Sets the shim of Properties.get_UserId()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimProperties.AllInstances.UserIdSetArraySegmentOfByte">
            <summary>Sets the shim of Properties.set_UserId(ArraySegment`1&lt;Byte&gt; value)</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.ShimProperties.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.ShimProperties.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimProperties.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.ShimProperties.Bind(Microsoft.Azure.Amqp.Encoding.IAmqpSerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimProperties.Constructor">
            <summary>Sets the shim of Properties.Properties()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimProperties.ContentEncodingGet">
            <summary>Sets the shim of Properties.get_ContentEncoding()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimProperties.ContentEncodingSetAmqpSymbol">
            <summary>Sets the shim of Properties.set_ContentEncoding(AmqpSymbol value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimProperties.ContentTypeGet">
            <summary>Sets the shim of Properties.get_ContentType()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimProperties.ContentTypeSetAmqpSymbol">
            <summary>Sets the shim of Properties.set_ContentType(AmqpSymbol value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimProperties.CorrelationIdGet">
            <summary>Sets the shim of Properties.get_CorrelationId()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimProperties.CorrelationIdSetMessageId">
            <summary>Sets the shim of Properties.set_CorrelationId(MessageId value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimProperties.CreationTimeGet">
            <summary>Sets the shim of Properties.get_CreationTime()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimProperties.CreationTimeSetNullableOfDateTime">
            <summary>Sets the shim of Properties.set_CreationTime(Nullable`1&lt;DateTime&gt; value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimProperties.FieldCountGet">
            <summary>Sets the shim of Properties.get_FieldCount()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimProperties.GroupIdGet">
            <summary>Sets the shim of Properties.get_GroupId()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimProperties.GroupIdSetString">
            <summary>Sets the shim of Properties.set_GroupId(String value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimProperties.GroupSequenceGet">
            <summary>Sets the shim of Properties.get_GroupSequence()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimProperties.GroupSequenceSetNullableOfUInt32">
            <summary>Sets the shim of Properties.set_GroupSequence(Nullable`1&lt;UInt32&gt; value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimProperties.MessageIdGet">
            <summary>Sets the shim of Properties.get_MessageId()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimProperties.MessageIdSetMessageId">
            <summary>Sets the shim of Properties.set_MessageId(MessageId value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimProperties.OnDecodeByteBufferInt32">
            <summary>Sets the shim of Properties.OnDecode(ByteBuffer buffer, Int32 count)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimProperties.OnEncodeByteBuffer">
            <summary>Sets the shim of Properties.OnEncode(ByteBuffer buffer)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimProperties.OnValueSize">
            <summary>Sets the shim of Properties.OnValueSize()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimProperties.ReplyToGet">
            <summary>Sets the shim of Properties.get_ReplyTo()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimProperties.ReplyToGroupIdGet">
            <summary>Sets the shim of Properties.get_ReplyToGroupId()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimProperties.ReplyToGroupIdSetString">
            <summary>Sets the shim of Properties.set_ReplyToGroupId(String value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimProperties.ReplyToSetAddress">
            <summary>Sets the shim of Properties.set_ReplyTo(Address value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimProperties.StaticConstructor">
            <summary>Sets the shim of Properties.Properties()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimProperties.SubjectGet">
            <summary>Sets the shim of Properties.get_Subject()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimProperties.SubjectSetString">
            <summary>Sets the shim of Properties.set_Subject(String value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimProperties.ToGet">
            <summary>Sets the shim of Properties.get_To()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimProperties.ToSetAddress">
            <summary>Sets the shim of Properties.set_To(Address value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimProperties.ToString">
            <summary>Sets the shim of Properties.ToString()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimProperties.UserIdGet">
            <summary>Sets the shim of Properties.get_UserId()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimProperties.UserIdSetArraySegmentOfByte">
            <summary>Sets the shim of Properties.set_UserId(ArraySegment`1&lt;Byte&gt; value)</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Framing.Fakes.ShimPropertiesMap">
            <summary>Shim type of Microsoft.Azure.Amqp.Framing.PropertiesMap</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.ShimPropertiesMap.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.ShimPropertiesMap.#ctor(Microsoft.Azure.Amqp.Framing.PropertiesMap)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Framing.Fakes.ShimPropertiesMap.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.ShimPropertiesMap.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.ShimPropertiesMap.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimPropertiesMap.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.ShimPropertiesMap.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.ShimPropertiesMap.Bind(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{Microsoft.Azure.Amqp.Encoding.MapKey,System.Object}})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimPropertiesMap.Constructor">
            <summary>Sets the shim of PropertiesMap.PropertiesMap()</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Framing.Fakes.ShimProtocolHeader">
            <summary>Shim type of Microsoft.Azure.Amqp.Framing.ProtocolHeader</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.ShimProtocolHeader.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.ShimProtocolHeader.#ctor(Microsoft.Azure.Amqp.Framing.ProtocolHeader)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Framing.Fakes.ShimProtocolHeader.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimProtocolHeader.AllInstances.DecodeByteBuffer">
            <summary>Sets the shim of ProtocolHeader.Decode(ByteBuffer buffer)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimProtocolHeader.AllInstances.EncodeByteBuffer">
            <summary>Sets the shim of ProtocolHeader.Encode(ByteBuffer buffer)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimProtocolHeader.AllInstances.EncodeSizeGet">
            <summary>Sets the shim of ProtocolHeader.get_EncodeSize()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimProtocolHeader.AllInstances.EqualsObject">
            <summary>Sets the shim of ProtocolHeader.Equals(Object obj)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimProtocolHeader.AllInstances.GetHashCode01">
            <summary>Sets the shim of ProtocolHeader.GetHashCode()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimProtocolHeader.AllInstances.ProtocolIdGet">
            <summary>Sets the shim of ProtocolHeader.get_ProtocolId()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimProtocolHeader.AllInstances.ToString01">
            <summary>Sets the shim of ProtocolHeader.ToString()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimProtocolHeader.AllInstances.VersionGet">
            <summary>Sets the shim of ProtocolHeader.get_Version()</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.ShimProtocolHeader.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.ShimProtocolHeader.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimProtocolHeader.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.ShimProtocolHeader.Bind(Microsoft.Azure.Amqp.Encoding.IAmqpSerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimProtocolHeader.Constructor">
            <summary>Sets the shim of ProtocolHeader.ProtocolHeader()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimProtocolHeader.ConstructorProtocolIdAmqpVersion">
            <summary>Sets the shim of ProtocolHeader.ProtocolHeader(ProtocolId id, AmqpVersion version)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimProtocolHeader.DecodeByteBuffer">
            <summary>Sets the shim of ProtocolHeader.Decode(ByteBuffer buffer)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimProtocolHeader.EncodeByteBuffer">
            <summary>Sets the shim of ProtocolHeader.Encode(ByteBuffer buffer)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimProtocolHeader.EncodeSizeGet">
            <summary>Sets the shim of ProtocolHeader.get_EncodeSize()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimProtocolHeader.EqualsObject">
            <summary>Sets the shim of ProtocolHeader.Equals(Object obj)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimProtocolHeader.GetHashCode">
            <summary>Sets the shim of ProtocolHeader.GetHashCode()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimProtocolHeader.ProtocolIdGet">
            <summary>Sets the shim of ProtocolHeader.get_ProtocolId()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimProtocolHeader.StaticConstructor">
            <summary>Sets the shim of ProtocolHeader.ProtocolHeader()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimProtocolHeader.ToString">
            <summary>Sets the shim of ProtocolHeader.ToString()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimProtocolHeader.VersionGet">
            <summary>Sets the shim of ProtocolHeader.get_Version()</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Framing.Fakes.ShimReceived">
            <summary>Shim type of Microsoft.Azure.Amqp.Framing.Received</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.ShimReceived.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.ShimReceived.#ctor(Microsoft.Azure.Amqp.Framing.Received)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Framing.Fakes.ShimReceived.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimReceived.AllInstances.FieldCountGet">
            <summary>Sets the shim of Received.get_FieldCount()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimReceived.AllInstances.OnDecodeByteBufferInt32">
            <summary>Sets the shim of Received.OnDecode(ByteBuffer buffer, Int32 count)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimReceived.AllInstances.OnEncodeByteBuffer">
            <summary>Sets the shim of Received.OnEncode(ByteBuffer buffer)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimReceived.AllInstances.OnValueSize">
            <summary>Sets the shim of Received.OnValueSize()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimReceived.AllInstances.SectionNumberGet">
            <summary>Sets the shim of Received.get_SectionNumber()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimReceived.AllInstances.SectionNumberSetNullableOfUInt32">
            <summary>Sets the shim of Received.set_SectionNumber(Nullable`1&lt;UInt32&gt; value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimReceived.AllInstances.SectionOffsetGet">
            <summary>Sets the shim of Received.get_SectionOffset()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimReceived.AllInstances.SectionOffsetSetNullableOfUInt64">
            <summary>Sets the shim of Received.set_SectionOffset(Nullable`1&lt;UInt64&gt; value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimReceived.AllInstances.ToString01">
            <summary>Sets the shim of Received.ToString()</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.ShimReceived.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.ShimReceived.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimReceived.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.ShimReceived.Bind(Microsoft.Azure.Amqp.Encoding.IAmqpSerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimReceived.Constructor">
            <summary>Sets the shim of Received.Received()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimReceived.FieldCountGet">
            <summary>Sets the shim of Received.get_FieldCount()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimReceived.OnDecodeByteBufferInt32">
            <summary>Sets the shim of Received.OnDecode(ByteBuffer buffer, Int32 count)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimReceived.OnEncodeByteBuffer">
            <summary>Sets the shim of Received.OnEncode(ByteBuffer buffer)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimReceived.OnValueSize">
            <summary>Sets the shim of Received.OnValueSize()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimReceived.SectionNumberGet">
            <summary>Sets the shim of Received.get_SectionNumber()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimReceived.SectionNumberSetNullableOfUInt32">
            <summary>Sets the shim of Received.set_SectionNumber(Nullable`1&lt;UInt32&gt; value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimReceived.SectionOffsetGet">
            <summary>Sets the shim of Received.get_SectionOffset()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimReceived.SectionOffsetSetNullableOfUInt64">
            <summary>Sets the shim of Received.set_SectionOffset(Nullable`1&lt;UInt64&gt; value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimReceived.StaticConstructor">
            <summary>Sets the shim of Received.Received()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimReceived.ToString">
            <summary>Sets the shim of Received.ToString()</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Framing.Fakes.ShimRejected">
            <summary>Shim type of Microsoft.Azure.Amqp.Framing.Rejected</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.ShimRejected.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.ShimRejected.#ctor(Microsoft.Azure.Amqp.Framing.Rejected)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Framing.Fakes.ShimRejected.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimRejected.AllInstances.ErrorGet">
            <summary>Sets the shim of Rejected.get_Error()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimRejected.AllInstances.ErrorSetError">
            <summary>Sets the shim of Rejected.set_Error(Error value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimRejected.AllInstances.FieldCountGet">
            <summary>Sets the shim of Rejected.get_FieldCount()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimRejected.AllInstances.OnDecodeByteBufferInt32">
            <summary>Sets the shim of Rejected.OnDecode(ByteBuffer buffer, Int32 count)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimRejected.AllInstances.OnEncodeByteBuffer">
            <summary>Sets the shim of Rejected.OnEncode(ByteBuffer buffer)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimRejected.AllInstances.OnValueSize">
            <summary>Sets the shim of Rejected.OnValueSize()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimRejected.AllInstances.ToString01">
            <summary>Sets the shim of Rejected.ToString()</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.ShimRejected.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.ShimRejected.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimRejected.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.ShimRejected.Bind(Microsoft.Azure.Amqp.Encoding.IAmqpSerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimRejected.Constructor">
            <summary>Sets the shim of Rejected.Rejected()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimRejected.ErrorGet">
            <summary>Sets the shim of Rejected.get_Error()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimRejected.ErrorSetError">
            <summary>Sets the shim of Rejected.set_Error(Error value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimRejected.FieldCountGet">
            <summary>Sets the shim of Rejected.get_FieldCount()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimRejected.OnDecodeByteBufferInt32">
            <summary>Sets the shim of Rejected.OnDecode(ByteBuffer buffer, Int32 count)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimRejected.OnEncodeByteBuffer">
            <summary>Sets the shim of Rejected.OnEncode(ByteBuffer buffer)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimRejected.OnValueSize">
            <summary>Sets the shim of Rejected.OnValueSize()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimRejected.StaticConstructor">
            <summary>Sets the shim of Rejected.Rejected()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimRejected.ToString">
            <summary>Sets the shim of Rejected.ToString()</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Framing.Fakes.ShimReleased">
            <summary>Shim type of Microsoft.Azure.Amqp.Framing.Released</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.ShimReleased.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.ShimReleased.#ctor(Microsoft.Azure.Amqp.Framing.Released)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Framing.Fakes.ShimReleased.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimReleased.AllInstances.FieldCountGet">
            <summary>Sets the shim of Released.get_FieldCount()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimReleased.AllInstances.OnDecodeByteBufferInt32">
            <summary>Sets the shim of Released.OnDecode(ByteBuffer buffer, Int32 count)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimReleased.AllInstances.OnEncodeByteBuffer">
            <summary>Sets the shim of Released.OnEncode(ByteBuffer buffer)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimReleased.AllInstances.OnValueSize">
            <summary>Sets the shim of Released.OnValueSize()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimReleased.AllInstances.ToString01">
            <summary>Sets the shim of Released.ToString()</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.ShimReleased.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.ShimReleased.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimReleased.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.ShimReleased.Bind(Microsoft.Azure.Amqp.Encoding.IAmqpSerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimReleased.Constructor">
            <summary>Sets the shim of Released.Released()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimReleased.FieldCountGet">
            <summary>Sets the shim of Released.get_FieldCount()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimReleased.OnDecodeByteBufferInt32">
            <summary>Sets the shim of Released.OnDecode(ByteBuffer buffer, Int32 count)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimReleased.OnEncodeByteBuffer">
            <summary>Sets the shim of Released.OnEncode(ByteBuffer buffer)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimReleased.OnValueSize">
            <summary>Sets the shim of Released.OnValueSize()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimReleased.StaticConstructor">
            <summary>Sets the shim of Released.Released()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimReleased.ToString">
            <summary>Sets the shim of Released.ToString()</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Framing.Fakes.ShimRestrictedMap">
            <summary>Shim type of Microsoft.Azure.Amqp.Framing.RestrictedMap</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.ShimRestrictedMap.#ctor(Microsoft.Azure.Amqp.Framing.RestrictedMap)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Framing.Fakes.ShimRestrictedMap.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimRestrictedMap.AllInstances.GetEnumerator">
            <summary>Sets the shim of RestrictedMap.GetEnumerator()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimRestrictedMap.AllInstances.InnerMapGet">
            <summary>Sets the shim of RestrictedMap.get_InnerMap()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimRestrictedMap.AllInstances.SetMapAmqpMap">
            <summary>Sets the shim of RestrictedMap.SetMap(AmqpMap map)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimRestrictedMap.AllInstances.SystemCollectionsIEnumerableGetEnumerator">
            <summary>Sets the shim of RestrictedMap.System.Collections.IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimRestrictedMap.AllInstances.ToString01">
            <summary>Sets the shim of RestrictedMap.ToString()</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.ShimRestrictedMap.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.ShimRestrictedMap.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimRestrictedMap.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.ShimRestrictedMap.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.ShimRestrictedMap.Bind(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{Microsoft.Azure.Amqp.Encoding.MapKey,System.Object}})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimRestrictedMap.Constructor">
            <summary>Sets the shim of RestrictedMap.RestrictedMap()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimRestrictedMap.GetEnumerator">
            <summary>Sets the shim of RestrictedMap.GetEnumerator()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimRestrictedMap.InnerMapGet">
            <summary>Sets the shim of RestrictedMap.get_InnerMap()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimRestrictedMap.SetMapAmqpMap">
            <summary>Sets the shim of RestrictedMap.SetMap(AmqpMap map)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimRestrictedMap.SystemCollectionsIEnumerableGetEnumerator">
            <summary>Sets the shim of RestrictedMap.System.Collections.IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimRestrictedMap.ToString">
            <summary>Sets the shim of RestrictedMap.ToString()</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Framing.Fakes.ShimRestrictedMap`1">
            <summary>Shim type of Microsoft.Azure.Amqp.Framing.RestrictedMap`1</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.ShimRestrictedMap`1.#ctor(Microsoft.Azure.Amqp.Framing.RestrictedMap{`0})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimRestrictedMap`1.AddMapKeyObject">
            <summary>Sets the shim of RestrictedMap`1.Add(MapKey key, Object value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimRestrictedMap`1.AddT0Object">
            <summary>Sets the shim of RestrictedMap`1.Add(!0 key, Object value)</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Framing.Fakes.ShimRestrictedMap`1.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimRestrictedMap`1.AllInstances.AddMapKeyObject">
            <summary>Sets the shim of RestrictedMap`1.Add(MapKey key, Object value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimRestrictedMap`1.AllInstances.AddT0Object">
            <summary>Sets the shim of RestrictedMap`1.Add(!0 key, Object value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimRestrictedMap`1.AllInstances.ItemGetMapKey">
            <summary>Sets the shim of RestrictedMap`1.get_Item(MapKey key)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimRestrictedMap`1.AllInstances.ItemGetT0">
            <summary>Sets the shim of RestrictedMap`1.get_Item(!0 key)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimRestrictedMap`1.AllInstances.ItemSetMapKeyObject">
            <summary>Sets the shim of RestrictedMap`1.set_Item(MapKey key, Object value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimRestrictedMap`1.AllInstances.ItemSetT0Object">
            <summary>Sets the shim of RestrictedMap`1.set_Item(!0 key, Object value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimRestrictedMap`1.AllInstances.MergeRestrictedMapOfT0">
            <summary>Sets the shim of RestrictedMap`1.Merge(RestrictedMap`1&lt;!0&gt; map)</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.ShimRestrictedMap`1.AllInstances.TryGetValueOf1MapKeyM0Out``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.OutFunc{Microsoft.Azure.Amqp.Framing.RestrictedMap{`0},Microsoft.Azure.Amqp.Encoding.MapKey,``0,System.Boolean})">
            <summary>Sets the shim of RestrictedMap`1.TryGetValue(MapKey key, !!0&amp; value)</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.ShimRestrictedMap`1.AllInstances.TryGetValueOf1T0M0Out``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.OutFunc{Microsoft.Azure.Amqp.Framing.RestrictedMap{`0},`0,``0,System.Boolean})">
            <summary>Sets the shim of RestrictedMap`1.TryGetValue(!0 key, !!0&amp; value)</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.ShimRestrictedMap`1.AllInstances.TryRemoveValueOf1T0M0Out``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.OutFunc{Microsoft.Azure.Amqp.Framing.RestrictedMap{`0},`0,``0,System.Boolean})">
            <summary>Sets the shim of RestrictedMap`1.TryRemoveValue(!0 key, !!0&amp; value)</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.ShimRestrictedMap`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.ShimRestrictedMap`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimRestrictedMap`1.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.ShimRestrictedMap`1.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.ShimRestrictedMap`1.Bind(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{Microsoft.Azure.Amqp.Encoding.MapKey,System.Object}})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimRestrictedMap`1.Constructor">
            <summary>Sets the shim of RestrictedMap`1.RestrictedMap`1()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimRestrictedMap`1.ImplicitOpRestrictedMapOfT0AmqpMap">
            <summary>Sets the shim of RestrictedMap`1.op_Implicit(RestrictedMap`1&lt;!0&gt; restrictedMap)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimRestrictedMap`1.ItemGetMapKey">
            <summary>Sets the shim of RestrictedMap`1.get_Item(MapKey key)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimRestrictedMap`1.ItemGetT0">
            <summary>Sets the shim of RestrictedMap`1.get_Item(!0 key)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimRestrictedMap`1.ItemSetMapKeyObject">
            <summary>Sets the shim of RestrictedMap`1.set_Item(MapKey key, Object value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimRestrictedMap`1.ItemSetT0Object">
            <summary>Sets the shim of RestrictedMap`1.set_Item(!0 key, Object value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimRestrictedMap`1.MergeRestrictedMapOfT0">
            <summary>Sets the shim of RestrictedMap`1.Merge(RestrictedMap`1&lt;!0&gt; map)</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.ShimRestrictedMap`1.TryGetValueOf1MapKeyM0Out``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.OutFunc{Microsoft.Azure.Amqp.Encoding.MapKey,``0,System.Boolean})">
            <summary>Sets the shim of RestrictedMap`1.TryGetValue(MapKey key, !!0&amp; value)</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.ShimRestrictedMap`1.TryGetValueOf1T0M0Out``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.OutFunc{`0,``0,System.Boolean})">
            <summary>Sets the shim of RestrictedMap`1.TryGetValue(!0 key, !!0&amp; value)</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.ShimRestrictedMap`1.TryRemoveValueOf1T0M0Out``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.OutFunc{`0,``0,System.Boolean})">
            <summary>Sets the shim of RestrictedMap`1.TryRemoveValue(!0 key, !!0&amp; value)</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Framing.Fakes.ShimSource">
            <summary>Shim type of Microsoft.Azure.Amqp.Framing.Source</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.ShimSource.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.ShimSource.#ctor(Microsoft.Azure.Amqp.Framing.Source)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimSource.AddressGet">
            <summary>Sets the shim of Source.get_Address()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimSource.AddressSetAddress">
            <summary>Sets the shim of Source.set_Address(Address value)</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Framing.Fakes.ShimSource.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimSource.AllInstances.AddressGet">
            <summary>Sets the shim of Source.get_Address()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimSource.AllInstances.AddressSetAddress">
            <summary>Sets the shim of Source.set_Address(Address value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimSource.AllInstances.CapabilitiesGet">
            <summary>Sets the shim of Source.get_Capabilities()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimSource.AllInstances.CapabilitiesSetMultipleOfAmqpSymbol">
            <summary>Sets the shim of Source.set_Capabilities(Multiple`1&lt;AmqpSymbol&gt; value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimSource.AllInstances.DefaultOutcomeGet">
            <summary>Sets the shim of Source.get_DefaultOutcome()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimSource.AllInstances.DefaultOutcomeSetOutcome">
            <summary>Sets the shim of Source.set_DefaultOutcome(Outcome value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimSource.AllInstances.DistributionModeGet">
            <summary>Sets the shim of Source.get_DistributionMode()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimSource.AllInstances.DistributionModeSetAmqpSymbol">
            <summary>Sets the shim of Source.set_DistributionMode(AmqpSymbol value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimSource.AllInstances.DurableGet">
            <summary>Sets the shim of Source.get_Durable()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimSource.AllInstances.DurableSetNullableOfUInt32">
            <summary>Sets the shim of Source.set_Durable(Nullable`1&lt;UInt32&gt; value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimSource.AllInstances.DynamicGet">
            <summary>Sets the shim of Source.get_Dynamic()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimSource.AllInstances.DynamicNodePropertiesGet">
            <summary>Sets the shim of Source.get_DynamicNodeProperties()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimSource.AllInstances.DynamicNodePropertiesSetFields">
            <summary>Sets the shim of Source.set_DynamicNodeProperties(Fields value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimSource.AllInstances.DynamicSetNullableOfBoolean">
            <summary>Sets the shim of Source.set_Dynamic(Nullable`1&lt;Boolean&gt; value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimSource.AllInstances.ExpiryPolicyGet">
            <summary>Sets the shim of Source.get_ExpiryPolicy()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimSource.AllInstances.ExpiryPolicySetAmqpSymbol">
            <summary>Sets the shim of Source.set_ExpiryPolicy(AmqpSymbol value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimSource.AllInstances.FieldCountGet">
            <summary>Sets the shim of Source.get_FieldCount()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimSource.AllInstances.FilterSetGet">
            <summary>Sets the shim of Source.get_FilterSet()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimSource.AllInstances.FilterSetSetFilterSet">
            <summary>Sets the shim of Source.set_FilterSet(FilterSet value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimSource.AllInstances.OnDecodeByteBufferInt32">
            <summary>Sets the shim of Source.OnDecode(ByteBuffer buffer, Int32 count)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimSource.AllInstances.OnEncodeByteBuffer">
            <summary>Sets the shim of Source.OnEncode(ByteBuffer buffer)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimSource.AllInstances.OnValueSize">
            <summary>Sets the shim of Source.OnValueSize()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimSource.AllInstances.OutcomesGet">
            <summary>Sets the shim of Source.get_Outcomes()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimSource.AllInstances.OutcomesSetMultipleOfAmqpSymbol">
            <summary>Sets the shim of Source.set_Outcomes(Multiple`1&lt;AmqpSymbol&gt; value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimSource.AllInstances.TimeoutGet">
            <summary>Sets the shim of Source.get_Timeout()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimSource.AllInstances.TimeoutSetNullableOfUInt32">
            <summary>Sets the shim of Source.set_Timeout(Nullable`1&lt;UInt32&gt; value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimSource.AllInstances.ToString01">
            <summary>Sets the shim of Source.ToString()</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.ShimSource.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.ShimSource.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimSource.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.ShimSource.Bind(Microsoft.Azure.Amqp.Encoding.IAmqpSerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimSource.CapabilitiesGet">
            <summary>Sets the shim of Source.get_Capabilities()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimSource.CapabilitiesSetMultipleOfAmqpSymbol">
            <summary>Sets the shim of Source.set_Capabilities(Multiple`1&lt;AmqpSymbol&gt; value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimSource.Constructor">
            <summary>Sets the shim of Source.Source()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimSource.ConstructorUri">
            <summary>Sets the shim of Source.Source(Uri uri)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimSource.DefaultOutcomeGet">
            <summary>Sets the shim of Source.get_DefaultOutcome()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimSource.DefaultOutcomeSetOutcome">
            <summary>Sets the shim of Source.set_DefaultOutcome(Outcome value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimSource.DistributionModeGet">
            <summary>Sets the shim of Source.get_DistributionMode()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimSource.DistributionModeSetAmqpSymbol">
            <summary>Sets the shim of Source.set_DistributionMode(AmqpSymbol value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimSource.DurableGet">
            <summary>Sets the shim of Source.get_Durable()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimSource.DurableSetNullableOfUInt32">
            <summary>Sets the shim of Source.set_Durable(Nullable`1&lt;UInt32&gt; value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimSource.DynamicGet">
            <summary>Sets the shim of Source.get_Dynamic()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimSource.DynamicNodePropertiesGet">
            <summary>Sets the shim of Source.get_DynamicNodeProperties()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimSource.DynamicNodePropertiesSetFields">
            <summary>Sets the shim of Source.set_DynamicNodeProperties(Fields value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimSource.DynamicSetNullableOfBoolean">
            <summary>Sets the shim of Source.set_Dynamic(Nullable`1&lt;Boolean&gt; value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimSource.ExpiryPolicyGet">
            <summary>Sets the shim of Source.get_ExpiryPolicy()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimSource.ExpiryPolicySetAmqpSymbol">
            <summary>Sets the shim of Source.set_ExpiryPolicy(AmqpSymbol value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimSource.FieldCountGet">
            <summary>Sets the shim of Source.get_FieldCount()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimSource.FilterSetGet">
            <summary>Sets the shim of Source.get_FilterSet()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimSource.FilterSetSetFilterSet">
            <summary>Sets the shim of Source.set_FilterSet(FilterSet value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimSource.OnDecodeByteBufferInt32">
            <summary>Sets the shim of Source.OnDecode(ByteBuffer buffer, Int32 count)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimSource.OnEncodeByteBuffer">
            <summary>Sets the shim of Source.OnEncode(ByteBuffer buffer)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimSource.OnValueSize">
            <summary>Sets the shim of Source.OnValueSize()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimSource.OutcomesGet">
            <summary>Sets the shim of Source.get_Outcomes()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimSource.OutcomesSetMultipleOfAmqpSymbol">
            <summary>Sets the shim of Source.set_Outcomes(Multiple`1&lt;AmqpSymbol&gt; value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimSource.StaticConstructor">
            <summary>Sets the shim of Source.Source()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimSource.TimeoutGet">
            <summary>Sets the shim of Source.get_Timeout()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimSource.TimeoutSetNullableOfUInt32">
            <summary>Sets the shim of Source.set_Timeout(Nullable`1&lt;UInt32&gt; value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimSource.ToString">
            <summary>Sets the shim of Source.ToString()</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Framing.Fakes.ShimTarget">
            <summary>Shim type of Microsoft.Azure.Amqp.Framing.Target</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.ShimTarget.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.ShimTarget.#ctor(Microsoft.Azure.Amqp.Framing.Target)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimTarget.AddressGet">
            <summary>Sets the shim of Target.get_Address()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimTarget.AddressSetAddress">
            <summary>Sets the shim of Target.set_Address(Address value)</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Framing.Fakes.ShimTarget.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimTarget.AllInstances.AddressGet">
            <summary>Sets the shim of Target.get_Address()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimTarget.AllInstances.AddressSetAddress">
            <summary>Sets the shim of Target.set_Address(Address value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimTarget.AllInstances.CapabilitiesGet">
            <summary>Sets the shim of Target.get_Capabilities()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimTarget.AllInstances.CapabilitiesSetMultipleOfAmqpSymbol">
            <summary>Sets the shim of Target.set_Capabilities(Multiple`1&lt;AmqpSymbol&gt; value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimTarget.AllInstances.DurableGet">
            <summary>Sets the shim of Target.get_Durable()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimTarget.AllInstances.DurableSetNullableOfUInt32">
            <summary>Sets the shim of Target.set_Durable(Nullable`1&lt;UInt32&gt; value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimTarget.AllInstances.DynamicGet">
            <summary>Sets the shim of Target.get_Dynamic()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimTarget.AllInstances.DynamicNodePropertiesGet">
            <summary>Sets the shim of Target.get_DynamicNodeProperties()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimTarget.AllInstances.DynamicNodePropertiesSetFields">
            <summary>Sets the shim of Target.set_DynamicNodeProperties(Fields value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimTarget.AllInstances.DynamicSetNullableOfBoolean">
            <summary>Sets the shim of Target.set_Dynamic(Nullable`1&lt;Boolean&gt; value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimTarget.AllInstances.ExpiryPolicyGet">
            <summary>Sets the shim of Target.get_ExpiryPolicy()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimTarget.AllInstances.ExpiryPolicySetAmqpSymbol">
            <summary>Sets the shim of Target.set_ExpiryPolicy(AmqpSymbol value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimTarget.AllInstances.FieldCountGet">
            <summary>Sets the shim of Target.get_FieldCount()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimTarget.AllInstances.OnDecodeByteBufferInt32">
            <summary>Sets the shim of Target.OnDecode(ByteBuffer buffer, Int32 count)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimTarget.AllInstances.OnEncodeByteBuffer">
            <summary>Sets the shim of Target.OnEncode(ByteBuffer buffer)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimTarget.AllInstances.OnValueSize">
            <summary>Sets the shim of Target.OnValueSize()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimTarget.AllInstances.TimeoutGet">
            <summary>Sets the shim of Target.get_Timeout()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimTarget.AllInstances.TimeoutSetNullableOfUInt32">
            <summary>Sets the shim of Target.set_Timeout(Nullable`1&lt;UInt32&gt; value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimTarget.AllInstances.ToString01">
            <summary>Sets the shim of Target.ToString()</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.ShimTarget.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.ShimTarget.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimTarget.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.ShimTarget.Bind(Microsoft.Azure.Amqp.Encoding.IAmqpSerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimTarget.CapabilitiesGet">
            <summary>Sets the shim of Target.get_Capabilities()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimTarget.CapabilitiesSetMultipleOfAmqpSymbol">
            <summary>Sets the shim of Target.set_Capabilities(Multiple`1&lt;AmqpSymbol&gt; value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimTarget.Constructor">
            <summary>Sets the shim of Target.Target()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimTarget.ConstructorUri">
            <summary>Sets the shim of Target.Target(Uri uri)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimTarget.DurableGet">
            <summary>Sets the shim of Target.get_Durable()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimTarget.DurableSetNullableOfUInt32">
            <summary>Sets the shim of Target.set_Durable(Nullable`1&lt;UInt32&gt; value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimTarget.DynamicGet">
            <summary>Sets the shim of Target.get_Dynamic()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimTarget.DynamicNodePropertiesGet">
            <summary>Sets the shim of Target.get_DynamicNodeProperties()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimTarget.DynamicNodePropertiesSetFields">
            <summary>Sets the shim of Target.set_DynamicNodeProperties(Fields value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimTarget.DynamicSetNullableOfBoolean">
            <summary>Sets the shim of Target.set_Dynamic(Nullable`1&lt;Boolean&gt; value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimTarget.ExpiryPolicyGet">
            <summary>Sets the shim of Target.get_ExpiryPolicy()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimTarget.ExpiryPolicySetAmqpSymbol">
            <summary>Sets the shim of Target.set_ExpiryPolicy(AmqpSymbol value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimTarget.FieldCountGet">
            <summary>Sets the shim of Target.get_FieldCount()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimTarget.OnDecodeByteBufferInt32">
            <summary>Sets the shim of Target.OnDecode(ByteBuffer buffer, Int32 count)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimTarget.OnEncodeByteBuffer">
            <summary>Sets the shim of Target.OnEncode(ByteBuffer buffer)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimTarget.OnValueSize">
            <summary>Sets the shim of Target.OnValueSize()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimTarget.StaticConstructor">
            <summary>Sets the shim of Target.Target()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimTarget.TimeoutGet">
            <summary>Sets the shim of Target.get_Timeout()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimTarget.TimeoutSetNullableOfUInt32">
            <summary>Sets the shim of Target.set_Timeout(Nullable`1&lt;UInt32&gt; value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimTarget.ToString">
            <summary>Sets the shim of Target.ToString()</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Framing.Fakes.ShimTerminus">
            <summary>Shim type of Microsoft.Azure.Amqp.Framing.Terminus</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.ShimTerminus.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.ShimTerminus.#ctor(Microsoft.Azure.Amqp.Framing.Terminus)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimTerminus.AddressGet">
            <summary>Sets the shim of Terminus.get_Address()</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Framing.Fakes.ShimTerminus.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimTerminus.AllInstances.AddressGet">
            <summary>Sets the shim of Terminus.get_Address()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimTerminus.AllInstances.CapabilitiesGet">
            <summary>Sets the shim of Terminus.get_Capabilities()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimTerminus.AllInstances.DurableGet">
            <summary>Sets the shim of Terminus.get_Durable()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimTerminus.AllInstances.DynamicGet">
            <summary>Sets the shim of Terminus.get_Dynamic()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimTerminus.AllInstances.DynamicNodePropertiesGet">
            <summary>Sets the shim of Terminus.get_DynamicNodeProperties()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimTerminus.AllInstances.ExpiryPolicyGet">
            <summary>Sets the shim of Terminus.get_ExpiryPolicy()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimTerminus.AllInstances.TimeoutGet">
            <summary>Sets the shim of Terminus.get_Timeout()</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.ShimTerminus.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.ShimTerminus.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimTerminus.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimTerminus.CapabilitiesGet">
            <summary>Sets the shim of Terminus.get_Capabilities()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimTerminus.ConstructorSource">
            <summary>Sets the shim of Terminus.Terminus(Source source)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimTerminus.ConstructorTarget">
            <summary>Sets the shim of Terminus.Terminus(Target target)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimTerminus.DurableGet">
            <summary>Sets the shim of Terminus.get_Durable()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimTerminus.DynamicGet">
            <summary>Sets the shim of Terminus.get_Dynamic()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimTerminus.DynamicNodePropertiesGet">
            <summary>Sets the shim of Terminus.get_DynamicNodeProperties()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimTerminus.ExpiryPolicyGet">
            <summary>Sets the shim of Terminus.get_ExpiryPolicy()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimTerminus.TimeoutGet">
            <summary>Sets the shim of Terminus.get_Timeout()</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Framing.Fakes.ShimTransfer">
            <summary>Shim type of Microsoft.Azure.Amqp.Framing.Transfer</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.ShimTransfer.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.ShimTransfer.#ctor(Microsoft.Azure.Amqp.Framing.Transfer)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimTransfer.AbortedGet">
            <summary>Sets the shim of Transfer.get_Aborted()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimTransfer.AbortedSetNullableOfBoolean">
            <summary>Sets the shim of Transfer.set_Aborted(Nullable`1&lt;Boolean&gt; value)</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Framing.Fakes.ShimTransfer.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimTransfer.AllInstances.AbortedGet">
            <summary>Sets the shim of Transfer.get_Aborted()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimTransfer.AllInstances.AbortedSetNullableOfBoolean">
            <summary>Sets the shim of Transfer.set_Aborted(Nullable`1&lt;Boolean&gt; value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimTransfer.AllInstances.BatchableGet">
            <summary>Sets the shim of Transfer.get_Batchable()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimTransfer.AllInstances.BatchableSetNullableOfBoolean">
            <summary>Sets the shim of Transfer.set_Batchable(Nullable`1&lt;Boolean&gt; value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimTransfer.AllInstances.DeliveryIdGet">
            <summary>Sets the shim of Transfer.get_DeliveryId()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimTransfer.AllInstances.DeliveryIdSetNullableOfUInt32">
            <summary>Sets the shim of Transfer.set_DeliveryId(Nullable`1&lt;UInt32&gt; value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimTransfer.AllInstances.DeliveryTagGet">
            <summary>Sets the shim of Transfer.get_DeliveryTag()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimTransfer.AllInstances.DeliveryTagSetArraySegmentOfByte">
            <summary>Sets the shim of Transfer.set_DeliveryTag(ArraySegment`1&lt;Byte&gt; value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimTransfer.AllInstances.EnsureRequired">
            <summary>Sets the shim of Transfer.EnsureRequired()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimTransfer.AllInstances.FieldCountGet">
            <summary>Sets the shim of Transfer.get_FieldCount()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimTransfer.AllInstances.MessageFormatGet">
            <summary>Sets the shim of Transfer.get_MessageFormat()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimTransfer.AllInstances.MessageFormatSetNullableOfUInt32">
            <summary>Sets the shim of Transfer.set_MessageFormat(Nullable`1&lt;UInt32&gt; value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimTransfer.AllInstances.MoreGet">
            <summary>Sets the shim of Transfer.get_More()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimTransfer.AllInstances.MoreSetNullableOfBoolean">
            <summary>Sets the shim of Transfer.set_More(Nullable`1&lt;Boolean&gt; value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimTransfer.AllInstances.OnDecodeByteBufferInt32">
            <summary>Sets the shim of Transfer.OnDecode(ByteBuffer buffer, Int32 count)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimTransfer.AllInstances.OnEncodeByteBuffer">
            <summary>Sets the shim of Transfer.OnEncode(ByteBuffer buffer)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimTransfer.AllInstances.OnValueSize">
            <summary>Sets the shim of Transfer.OnValueSize()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimTransfer.AllInstances.RcvSettleModeGet">
            <summary>Sets the shim of Transfer.get_RcvSettleMode()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimTransfer.AllInstances.RcvSettleModeSetNullableOfByte">
            <summary>Sets the shim of Transfer.set_RcvSettleMode(Nullable`1&lt;Byte&gt; value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimTransfer.AllInstances.ResumeGet">
            <summary>Sets the shim of Transfer.get_Resume()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimTransfer.AllInstances.ResumeSetNullableOfBoolean">
            <summary>Sets the shim of Transfer.set_Resume(Nullable`1&lt;Boolean&gt; value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimTransfer.AllInstances.SettledGet">
            <summary>Sets the shim of Transfer.get_Settled()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimTransfer.AllInstances.SettledSetNullableOfBoolean">
            <summary>Sets the shim of Transfer.set_Settled(Nullable`1&lt;Boolean&gt; value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimTransfer.AllInstances.StateGet">
            <summary>Sets the shim of Transfer.get_State()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimTransfer.AllInstances.StateSetDeliveryState">
            <summary>Sets the shim of Transfer.set_State(DeliveryState value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimTransfer.AllInstances.ToString01">
            <summary>Sets the shim of Transfer.ToString()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimTransfer.BatchableGet">
            <summary>Sets the shim of Transfer.get_Batchable()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimTransfer.BatchableSetNullableOfBoolean">
            <summary>Sets the shim of Transfer.set_Batchable(Nullable`1&lt;Boolean&gt; value)</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.ShimTransfer.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.ShimTransfer.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimTransfer.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.ShimTransfer.Bind(Microsoft.Azure.Amqp.Encoding.IAmqpSerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimTransfer.Constructor">
            <summary>Sets the shim of Transfer.Transfer()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimTransfer.DeliveryIdGet">
            <summary>Sets the shim of Transfer.get_DeliveryId()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimTransfer.DeliveryIdSetNullableOfUInt32">
            <summary>Sets the shim of Transfer.set_DeliveryId(Nullable`1&lt;UInt32&gt; value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimTransfer.DeliveryTagGet">
            <summary>Sets the shim of Transfer.get_DeliveryTag()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimTransfer.DeliveryTagSetArraySegmentOfByte">
            <summary>Sets the shim of Transfer.set_DeliveryTag(ArraySegment`1&lt;Byte&gt; value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimTransfer.EnsureRequired">
            <summary>Sets the shim of Transfer.EnsureRequired()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimTransfer.FieldCountGet">
            <summary>Sets the shim of Transfer.get_FieldCount()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimTransfer.MessageFormatGet">
            <summary>Sets the shim of Transfer.get_MessageFormat()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimTransfer.MessageFormatSetNullableOfUInt32">
            <summary>Sets the shim of Transfer.set_MessageFormat(Nullable`1&lt;UInt32&gt; value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimTransfer.MoreGet">
            <summary>Sets the shim of Transfer.get_More()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimTransfer.MoreSetNullableOfBoolean">
            <summary>Sets the shim of Transfer.set_More(Nullable`1&lt;Boolean&gt; value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimTransfer.OnDecodeByteBufferInt32">
            <summary>Sets the shim of Transfer.OnDecode(ByteBuffer buffer, Int32 count)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimTransfer.OnEncodeByteBuffer">
            <summary>Sets the shim of Transfer.OnEncode(ByteBuffer buffer)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimTransfer.OnValueSize">
            <summary>Sets the shim of Transfer.OnValueSize()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimTransfer.RcvSettleModeGet">
            <summary>Sets the shim of Transfer.get_RcvSettleMode()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimTransfer.RcvSettleModeSetNullableOfByte">
            <summary>Sets the shim of Transfer.set_RcvSettleMode(Nullable`1&lt;Byte&gt; value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimTransfer.ResumeGet">
            <summary>Sets the shim of Transfer.get_Resume()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimTransfer.ResumeSetNullableOfBoolean">
            <summary>Sets the shim of Transfer.set_Resume(Nullable`1&lt;Boolean&gt; value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimTransfer.SettledGet">
            <summary>Sets the shim of Transfer.get_Settled()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimTransfer.SettledSetNullableOfBoolean">
            <summary>Sets the shim of Transfer.set_Settled(Nullable`1&lt;Boolean&gt; value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimTransfer.StateGet">
            <summary>Sets the shim of Transfer.get_State()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimTransfer.StateSetDeliveryState">
            <summary>Sets the shim of Transfer.set_State(DeliveryState value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimTransfer.StaticConstructor">
            <summary>Sets the shim of Transfer.Transfer()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.ShimTransfer.ToString">
            <summary>Sets the shim of Transfer.ToString()</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Framing.Fakes.StubAddress">
            <summary>Stub type of Microsoft.Azure.Amqp.Framing.Address</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.StubAddress.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.StubAddress.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.StubAddress.EncodeSize">
            <summary>Sets the stub of Address.get_EncodeSize()</summary>
        </member>
        <member name="F:Microsoft.Azure.Amqp.Framing.Fakes.StubAddress.EncodeSizeGet">
            <summary>Sets the stub of Address.get_EncodeSize()</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.StubAddress.InitializeStub">
            <summary>Initializes a new instance of type StubAddress</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.StubAddress.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.StubAddress.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.StubAddress.OnEncode(Microsoft.Azure.Amqp.ByteBuffer)">
            <summary>Sets the stub of Address.OnEncode(ByteBuffer buffer)</summary>
        </member>
        <member name="F:Microsoft.Azure.Amqp.Framing.Fakes.StubAddress.OnEncodeByteBuffer">
            <summary>Sets the stub of Address.OnEncode(ByteBuffer buffer)</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Framing.Fakes.StubAmqpDescribed">
            <summary>Stub type of Microsoft.Azure.Amqp.Framing.AmqpDescribed</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.StubAmqpDescribed.#ctor(Microsoft.Azure.Amqp.Encoding.AmqpSymbol,System.UInt64)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.StubAmqpDescribed.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.StubAmqpDescribed.DecodeValue(Microsoft.Azure.Amqp.ByteBuffer)">
            <summary>Sets the stub of AmqpDescribed.DecodeValue(ByteBuffer buffer)</summary>
        </member>
        <member name="F:Microsoft.Azure.Amqp.Framing.Fakes.StubAmqpDescribed.DecodeValueByteBuffer">
            <summary>Sets the stub of AmqpDescribed.DecodeValue(ByteBuffer buffer)</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.StubAmqpDescribed.EncodeValue(Microsoft.Azure.Amqp.ByteBuffer)">
            <summary>Sets the stub of AmqpDescribed.EncodeValue(ByteBuffer buffer)</summary>
        </member>
        <member name="F:Microsoft.Azure.Amqp.Framing.Fakes.StubAmqpDescribed.EncodeValueByteBuffer">
            <summary>Sets the stub of AmqpDescribed.EncodeValue(ByteBuffer buffer)</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.StubAmqpDescribed.GetValueEncodeSize">
            <summary>Sets the stub of AmqpDescribed.GetValueEncodeSize()</summary>
        </member>
        <member name="F:Microsoft.Azure.Amqp.Framing.Fakes.StubAmqpDescribed.GetValueEncodeSize01">
            <summary>Sets the stub of AmqpDescribed.GetValueEncodeSize()</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.StubAmqpDescribed.InitializeStub">
            <summary>Initializes a new instance of type StubAmqpDescribed</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.StubAmqpDescribed.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.StubAmqpDescribed.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.StubAmqpDescribed.ToString">
            <summary>Sets the stub of AmqpDescribed.ToString()</summary>
        </member>
        <member name="F:Microsoft.Azure.Amqp.Framing.Fakes.StubAmqpDescribed.ToString01">
            <summary>Sets the stub of AmqpDescribed.ToString()</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Framing.Fakes.StubAttach">
            <summary>Stub type of Microsoft.Azure.Amqp.Framing.Attach</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.StubAttach.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.StubAttach.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.StubAttach.DecodeValue(Microsoft.Azure.Amqp.ByteBuffer)">
            <summary>Sets the stub of DescribedList.DecodeValue(ByteBuffer buffer)</summary>
        </member>
        <member name="F:Microsoft.Azure.Amqp.Framing.Fakes.StubAttach.DecodeValueByteBuffer">
            <summary>Sets the stub of DescribedList.DecodeValue(ByteBuffer buffer)</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.StubAttach.EncodeValue(Microsoft.Azure.Amqp.ByteBuffer)">
            <summary>Sets the stub of DescribedList.EncodeValue(ByteBuffer buffer)</summary>
        </member>
        <member name="F:Microsoft.Azure.Amqp.Framing.Fakes.StubAttach.EncodeValueByteBuffer">
            <summary>Sets the stub of DescribedList.EncodeValue(ByteBuffer buffer)</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.StubAttach.EnsureRequired">
            <summary>Sets the stub of Attach.EnsureRequired()</summary>
        </member>
        <member name="F:Microsoft.Azure.Amqp.Framing.Fakes.StubAttach.EnsureRequired01">
            <summary>Sets the stub of Attach.EnsureRequired()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.StubAttach.FieldCount">
            <summary>Sets the stub of Attach.get_FieldCount()</summary>
        </member>
        <member name="F:Microsoft.Azure.Amqp.Framing.Fakes.StubAttach.FieldCountGet">
            <summary>Sets the stub of Attach.get_FieldCount()</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.StubAttach.GetValueEncodeSize">
            <summary>Sets the stub of DescribedList.GetValueEncodeSize()</summary>
        </member>
        <member name="F:Microsoft.Azure.Amqp.Framing.Fakes.StubAttach.GetValueEncodeSize01">
            <summary>Sets the stub of DescribedList.GetValueEncodeSize()</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.StubAttach.InitializeStub">
            <summary>Initializes a new instance of type StubAttach</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.StubAttach.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.StubAttach.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.StubAttach.OnDecode(Microsoft.Azure.Amqp.ByteBuffer,System.Int32)">
            <summary>Sets the stub of Attach.OnDecode(ByteBuffer buffer, Int32 count)</summary>
        </member>
        <member name="F:Microsoft.Azure.Amqp.Framing.Fakes.StubAttach.OnDecodeByteBufferInt32">
            <summary>Sets the stub of Attach.OnDecode(ByteBuffer buffer, Int32 count)</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.StubAttach.OnEncode(Microsoft.Azure.Amqp.ByteBuffer)">
            <summary>Sets the stub of Attach.OnEncode(ByteBuffer buffer)</summary>
        </member>
        <member name="F:Microsoft.Azure.Amqp.Framing.Fakes.StubAttach.OnEncodeByteBuffer">
            <summary>Sets the stub of Attach.OnEncode(ByteBuffer buffer)</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.StubAttach.OnValueSize">
            <summary>Sets the stub of Attach.OnValueSize()</summary>
        </member>
        <member name="F:Microsoft.Azure.Amqp.Framing.Fakes.StubAttach.OnValueSize01">
            <summary>Sets the stub of Attach.OnValueSize()</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.StubAttach.ToString">
            <summary>Sets the stub of Attach.ToString()</summary>
        </member>
        <member name="F:Microsoft.Azure.Amqp.Framing.Fakes.StubAttach.ToString01">
            <summary>Sets the stub of Attach.ToString()</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Framing.Fakes.StubBegin">
            <summary>Stub type of Microsoft.Azure.Amqp.Framing.Begin</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.StubBegin.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.StubBegin.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.StubBegin.DecodeValue(Microsoft.Azure.Amqp.ByteBuffer)">
            <summary>Sets the stub of DescribedList.DecodeValue(ByteBuffer buffer)</summary>
        </member>
        <member name="F:Microsoft.Azure.Amqp.Framing.Fakes.StubBegin.DecodeValueByteBuffer">
            <summary>Sets the stub of DescribedList.DecodeValue(ByteBuffer buffer)</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.StubBegin.EncodeValue(Microsoft.Azure.Amqp.ByteBuffer)">
            <summary>Sets the stub of DescribedList.EncodeValue(ByteBuffer buffer)</summary>
        </member>
        <member name="F:Microsoft.Azure.Amqp.Framing.Fakes.StubBegin.EncodeValueByteBuffer">
            <summary>Sets the stub of DescribedList.EncodeValue(ByteBuffer buffer)</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.StubBegin.EnsureRequired">
            <summary>Sets the stub of Begin.EnsureRequired()</summary>
        </member>
        <member name="F:Microsoft.Azure.Amqp.Framing.Fakes.StubBegin.EnsureRequired01">
            <summary>Sets the stub of Begin.EnsureRequired()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.StubBegin.FieldCount">
            <summary>Sets the stub of Begin.get_FieldCount()</summary>
        </member>
        <member name="F:Microsoft.Azure.Amqp.Framing.Fakes.StubBegin.FieldCountGet">
            <summary>Sets the stub of Begin.get_FieldCount()</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.StubBegin.GetValueEncodeSize">
            <summary>Sets the stub of DescribedList.GetValueEncodeSize()</summary>
        </member>
        <member name="F:Microsoft.Azure.Amqp.Framing.Fakes.StubBegin.GetValueEncodeSize01">
            <summary>Sets the stub of DescribedList.GetValueEncodeSize()</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.StubBegin.InitializeStub">
            <summary>Initializes a new instance of type StubBegin</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.StubBegin.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.StubBegin.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.StubBegin.OnDecode(Microsoft.Azure.Amqp.ByteBuffer,System.Int32)">
            <summary>Sets the stub of Begin.OnDecode(ByteBuffer buffer, Int32 count)</summary>
        </member>
        <member name="F:Microsoft.Azure.Amqp.Framing.Fakes.StubBegin.OnDecodeByteBufferInt32">
            <summary>Sets the stub of Begin.OnDecode(ByteBuffer buffer, Int32 count)</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.StubBegin.OnEncode(Microsoft.Azure.Amqp.ByteBuffer)">
            <summary>Sets the stub of Begin.OnEncode(ByteBuffer buffer)</summary>
        </member>
        <member name="F:Microsoft.Azure.Amqp.Framing.Fakes.StubBegin.OnEncodeByteBuffer">
            <summary>Sets the stub of Begin.OnEncode(ByteBuffer buffer)</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.StubBegin.OnValueSize">
            <summary>Sets the stub of Begin.OnValueSize()</summary>
        </member>
        <member name="F:Microsoft.Azure.Amqp.Framing.Fakes.StubBegin.OnValueSize01">
            <summary>Sets the stub of Begin.OnValueSize()</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.StubBegin.ToString">
            <summary>Sets the stub of Begin.ToString()</summary>
        </member>
        <member name="F:Microsoft.Azure.Amqp.Framing.Fakes.StubBegin.ToString01">
            <summary>Sets the stub of Begin.ToString()</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Framing.Fakes.StubDeliveryState">
            <summary>Stub type of Microsoft.Azure.Amqp.Framing.DeliveryState</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.StubDeliveryState.#ctor(Microsoft.Azure.Amqp.Encoding.AmqpSymbol,System.UInt64)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.StubDeliveryState.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.StubDeliveryState.DecodeValue(Microsoft.Azure.Amqp.ByteBuffer)">
            <summary>Sets the stub of DescribedList.DecodeValue(ByteBuffer buffer)</summary>
        </member>
        <member name="F:Microsoft.Azure.Amqp.Framing.Fakes.StubDeliveryState.DecodeValueByteBuffer">
            <summary>Sets the stub of DescribedList.DecodeValue(ByteBuffer buffer)</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.StubDeliveryState.EncodeValue(Microsoft.Azure.Amqp.ByteBuffer)">
            <summary>Sets the stub of DescribedList.EncodeValue(ByteBuffer buffer)</summary>
        </member>
        <member name="F:Microsoft.Azure.Amqp.Framing.Fakes.StubDeliveryState.EncodeValueByteBuffer">
            <summary>Sets the stub of DescribedList.EncodeValue(ByteBuffer buffer)</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.StubDeliveryState.EnsureRequired">
            <summary>Sets the stub of DescribedList.EnsureRequired()</summary>
        </member>
        <member name="F:Microsoft.Azure.Amqp.Framing.Fakes.StubDeliveryState.EnsureRequired01">
            <summary>Sets the stub of DescribedList.EnsureRequired()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.StubDeliveryState.FieldCount">
            <summary>Sets the stub of DescribedList.get_FieldCount()</summary>
        </member>
        <member name="F:Microsoft.Azure.Amqp.Framing.Fakes.StubDeliveryState.FieldCountGet">
            <summary>Sets the stub of DescribedList.get_FieldCount()</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.StubDeliveryState.GetValueEncodeSize">
            <summary>Sets the stub of DescribedList.GetValueEncodeSize()</summary>
        </member>
        <member name="F:Microsoft.Azure.Amqp.Framing.Fakes.StubDeliveryState.GetValueEncodeSize01">
            <summary>Sets the stub of DescribedList.GetValueEncodeSize()</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.StubDeliveryState.InitializeStub">
            <summary>Initializes a new instance of type StubDeliveryState</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.StubDeliveryState.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.StubDeliveryState.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.StubDeliveryState.OnDecode(Microsoft.Azure.Amqp.ByteBuffer,System.Int32)">
            <summary>Sets the stub of DescribedList.OnDecode(ByteBuffer buffer, Int32 count)</summary>
        </member>
        <member name="F:Microsoft.Azure.Amqp.Framing.Fakes.StubDeliveryState.OnDecodeByteBufferInt32">
            <summary>Sets the stub of DescribedList.OnDecode(ByteBuffer buffer, Int32 count)</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.StubDeliveryState.OnEncode(Microsoft.Azure.Amqp.ByteBuffer)">
            <summary>Sets the stub of DescribedList.OnEncode(ByteBuffer buffer)</summary>
        </member>
        <member name="F:Microsoft.Azure.Amqp.Framing.Fakes.StubDeliveryState.OnEncodeByteBuffer">
            <summary>Sets the stub of DescribedList.OnEncode(ByteBuffer buffer)</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.StubDeliveryState.OnValueSize">
            <summary>Sets the stub of DescribedList.OnValueSize()</summary>
        </member>
        <member name="F:Microsoft.Azure.Amqp.Framing.Fakes.StubDeliveryState.OnValueSize01">
            <summary>Sets the stub of DescribedList.OnValueSize()</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.StubDeliveryState.ToString">
            <summary>Sets the stub of AmqpDescribed.ToString()</summary>
        </member>
        <member name="F:Microsoft.Azure.Amqp.Framing.Fakes.StubDeliveryState.ToString01">
            <summary>Sets the stub of AmqpDescribed.ToString()</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Framing.Fakes.StubDescribedAnnotations">
            <summary>Stub type of Microsoft.Azure.Amqp.Framing.DescribedAnnotations</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.StubDescribedAnnotations.#ctor(Microsoft.Azure.Amqp.Encoding.AmqpSymbol,System.UInt64)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.StubDescribedAnnotations.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.StubDescribedAnnotations.DecodeValue(Microsoft.Azure.Amqp.ByteBuffer)">
            <summary>Sets the stub of DescribedMap.DecodeValue(ByteBuffer buffer)</summary>
        </member>
        <member name="F:Microsoft.Azure.Amqp.Framing.Fakes.StubDescribedAnnotations.DecodeValueByteBuffer">
            <summary>Sets the stub of DescribedMap.DecodeValue(ByteBuffer buffer)</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.StubDescribedAnnotations.EncodeValue(Microsoft.Azure.Amqp.ByteBuffer)">
            <summary>Sets the stub of DescribedMap.EncodeValue(ByteBuffer buffer)</summary>
        </member>
        <member name="F:Microsoft.Azure.Amqp.Framing.Fakes.StubDescribedAnnotations.EncodeValueByteBuffer">
            <summary>Sets the stub of DescribedMap.EncodeValue(ByteBuffer buffer)</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.StubDescribedAnnotations.GetValueEncodeSize">
            <summary>Sets the stub of DescribedMap.GetValueEncodeSize()</summary>
        </member>
        <member name="F:Microsoft.Azure.Amqp.Framing.Fakes.StubDescribedAnnotations.GetValueEncodeSize01">
            <summary>Sets the stub of DescribedMap.GetValueEncodeSize()</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.StubDescribedAnnotations.InitializeStub">
            <summary>Initializes a new instance of type StubDescribedAnnotations</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.StubDescribedAnnotations.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.StubDescribedAnnotations.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.StubDescribedAnnotations.ToString">
            <summary>Sets the stub of AmqpDescribed.ToString()</summary>
        </member>
        <member name="F:Microsoft.Azure.Amqp.Framing.Fakes.StubDescribedAnnotations.ToString01">
            <summary>Sets the stub of AmqpDescribed.ToString()</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Framing.Fakes.StubDescribedList">
            <summary>Stub type of Microsoft.Azure.Amqp.Framing.DescribedList</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.StubDescribedList.#ctor(Microsoft.Azure.Amqp.Encoding.AmqpSymbol,System.UInt64)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.StubDescribedList.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.StubDescribedList.DecodeValue(Microsoft.Azure.Amqp.ByteBuffer)">
            <summary>Sets the stub of DescribedList.DecodeValue(ByteBuffer buffer)</summary>
        </member>
        <member name="F:Microsoft.Azure.Amqp.Framing.Fakes.StubDescribedList.DecodeValueByteBuffer">
            <summary>Sets the stub of DescribedList.DecodeValue(ByteBuffer buffer)</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.StubDescribedList.EncodeValue(Microsoft.Azure.Amqp.ByteBuffer)">
            <summary>Sets the stub of DescribedList.EncodeValue(ByteBuffer buffer)</summary>
        </member>
        <member name="F:Microsoft.Azure.Amqp.Framing.Fakes.StubDescribedList.EncodeValueByteBuffer">
            <summary>Sets the stub of DescribedList.EncodeValue(ByteBuffer buffer)</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.StubDescribedList.EnsureRequired">
            <summary>Sets the stub of DescribedList.EnsureRequired()</summary>
        </member>
        <member name="F:Microsoft.Azure.Amqp.Framing.Fakes.StubDescribedList.EnsureRequired01">
            <summary>Sets the stub of DescribedList.EnsureRequired()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.StubDescribedList.FieldCount">
            <summary>Sets the stub of DescribedList.get_FieldCount()</summary>
        </member>
        <member name="F:Microsoft.Azure.Amqp.Framing.Fakes.StubDescribedList.FieldCountGet">
            <summary>Sets the stub of DescribedList.get_FieldCount()</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.StubDescribedList.GetValueEncodeSize">
            <summary>Sets the stub of DescribedList.GetValueEncodeSize()</summary>
        </member>
        <member name="F:Microsoft.Azure.Amqp.Framing.Fakes.StubDescribedList.GetValueEncodeSize01">
            <summary>Sets the stub of DescribedList.GetValueEncodeSize()</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.StubDescribedList.InitializeStub">
            <summary>Initializes a new instance of type StubDescribedList</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.StubDescribedList.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.StubDescribedList.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.StubDescribedList.OnDecode(Microsoft.Azure.Amqp.ByteBuffer,System.Int32)">
            <summary>Sets the stub of DescribedList.OnDecode(ByteBuffer buffer, Int32 count)</summary>
        </member>
        <member name="F:Microsoft.Azure.Amqp.Framing.Fakes.StubDescribedList.OnDecodeByteBufferInt32">
            <summary>Sets the stub of DescribedList.OnDecode(ByteBuffer buffer, Int32 count)</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.StubDescribedList.OnEncode(Microsoft.Azure.Amqp.ByteBuffer)">
            <summary>Sets the stub of DescribedList.OnEncode(ByteBuffer buffer)</summary>
        </member>
        <member name="F:Microsoft.Azure.Amqp.Framing.Fakes.StubDescribedList.OnEncodeByteBuffer">
            <summary>Sets the stub of DescribedList.OnEncode(ByteBuffer buffer)</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.StubDescribedList.OnValueSize">
            <summary>Sets the stub of DescribedList.OnValueSize()</summary>
        </member>
        <member name="F:Microsoft.Azure.Amqp.Framing.Fakes.StubDescribedList.OnValueSize01">
            <summary>Sets the stub of DescribedList.OnValueSize()</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.StubDescribedList.ToString">
            <summary>Sets the stub of AmqpDescribed.ToString()</summary>
        </member>
        <member name="F:Microsoft.Azure.Amqp.Framing.Fakes.StubDescribedList.ToString01">
            <summary>Sets the stub of AmqpDescribed.ToString()</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Framing.Fakes.StubDescribedMap">
            <summary>Stub type of Microsoft.Azure.Amqp.Framing.DescribedMap</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.StubDescribedMap.#ctor(Microsoft.Azure.Amqp.Encoding.AmqpSymbol,System.UInt64)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.StubDescribedMap.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.StubDescribedMap.DecodeValue(Microsoft.Azure.Amqp.ByteBuffer)">
            <summary>Sets the stub of DescribedMap.DecodeValue(ByteBuffer buffer)</summary>
        </member>
        <member name="F:Microsoft.Azure.Amqp.Framing.Fakes.StubDescribedMap.DecodeValueByteBuffer">
            <summary>Sets the stub of DescribedMap.DecodeValue(ByteBuffer buffer)</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.StubDescribedMap.EncodeValue(Microsoft.Azure.Amqp.ByteBuffer)">
            <summary>Sets the stub of DescribedMap.EncodeValue(ByteBuffer buffer)</summary>
        </member>
        <member name="F:Microsoft.Azure.Amqp.Framing.Fakes.StubDescribedMap.EncodeValueByteBuffer">
            <summary>Sets the stub of DescribedMap.EncodeValue(ByteBuffer buffer)</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.StubDescribedMap.GetValueEncodeSize">
            <summary>Sets the stub of DescribedMap.GetValueEncodeSize()</summary>
        </member>
        <member name="F:Microsoft.Azure.Amqp.Framing.Fakes.StubDescribedMap.GetValueEncodeSize01">
            <summary>Sets the stub of DescribedMap.GetValueEncodeSize()</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.StubDescribedMap.InitializeStub">
            <summary>Initializes a new instance of type StubDescribedMap</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.StubDescribedMap.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.StubDescribedMap.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.StubDescribedMap.ToString">
            <summary>Sets the stub of AmqpDescribed.ToString()</summary>
        </member>
        <member name="F:Microsoft.Azure.Amqp.Framing.Fakes.StubDescribedMap.ToString01">
            <summary>Sets the stub of AmqpDescribed.ToString()</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Framing.Fakes.StubLinkPerformative">
            <summary>Stub type of Microsoft.Azure.Amqp.Framing.LinkPerformative</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.StubLinkPerformative.#ctor(Microsoft.Azure.Amqp.Encoding.AmqpSymbol,System.UInt64)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.StubLinkPerformative.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.StubLinkPerformative.DecodeValue(Microsoft.Azure.Amqp.ByteBuffer)">
            <summary>Sets the stub of DescribedList.DecodeValue(ByteBuffer buffer)</summary>
        </member>
        <member name="F:Microsoft.Azure.Amqp.Framing.Fakes.StubLinkPerformative.DecodeValueByteBuffer">
            <summary>Sets the stub of DescribedList.DecodeValue(ByteBuffer buffer)</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.StubLinkPerformative.EncodeValue(Microsoft.Azure.Amqp.ByteBuffer)">
            <summary>Sets the stub of DescribedList.EncodeValue(ByteBuffer buffer)</summary>
        </member>
        <member name="F:Microsoft.Azure.Amqp.Framing.Fakes.StubLinkPerformative.EncodeValueByteBuffer">
            <summary>Sets the stub of DescribedList.EncodeValue(ByteBuffer buffer)</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.StubLinkPerformative.EnsureRequired">
            <summary>Sets the stub of DescribedList.EnsureRequired()</summary>
        </member>
        <member name="F:Microsoft.Azure.Amqp.Framing.Fakes.StubLinkPerformative.EnsureRequired01">
            <summary>Sets the stub of DescribedList.EnsureRequired()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.StubLinkPerformative.FieldCount">
            <summary>Sets the stub of DescribedList.get_FieldCount()</summary>
        </member>
        <member name="F:Microsoft.Azure.Amqp.Framing.Fakes.StubLinkPerformative.FieldCountGet">
            <summary>Sets the stub of DescribedList.get_FieldCount()</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.StubLinkPerformative.GetValueEncodeSize">
            <summary>Sets the stub of DescribedList.GetValueEncodeSize()</summary>
        </member>
        <member name="F:Microsoft.Azure.Amqp.Framing.Fakes.StubLinkPerformative.GetValueEncodeSize01">
            <summary>Sets the stub of DescribedList.GetValueEncodeSize()</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.StubLinkPerformative.InitializeStub">
            <summary>Initializes a new instance of type StubLinkPerformative</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.StubLinkPerformative.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.StubLinkPerformative.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.StubLinkPerformative.OnDecode(Microsoft.Azure.Amqp.ByteBuffer,System.Int32)">
            <summary>Sets the stub of DescribedList.OnDecode(ByteBuffer buffer, Int32 count)</summary>
        </member>
        <member name="F:Microsoft.Azure.Amqp.Framing.Fakes.StubLinkPerformative.OnDecodeByteBufferInt32">
            <summary>Sets the stub of DescribedList.OnDecode(ByteBuffer buffer, Int32 count)</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.StubLinkPerformative.OnEncode(Microsoft.Azure.Amqp.ByteBuffer)">
            <summary>Sets the stub of DescribedList.OnEncode(ByteBuffer buffer)</summary>
        </member>
        <member name="F:Microsoft.Azure.Amqp.Framing.Fakes.StubLinkPerformative.OnEncodeByteBuffer">
            <summary>Sets the stub of DescribedList.OnEncode(ByteBuffer buffer)</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.StubLinkPerformative.OnValueSize">
            <summary>Sets the stub of DescribedList.OnValueSize()</summary>
        </member>
        <member name="F:Microsoft.Azure.Amqp.Framing.Fakes.StubLinkPerformative.OnValueSize01">
            <summary>Sets the stub of DescribedList.OnValueSize()</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.StubLinkPerformative.ToString">
            <summary>Sets the stub of AmqpDescribed.ToString()</summary>
        </member>
        <member name="F:Microsoft.Azure.Amqp.Framing.Fakes.StubLinkPerformative.ToString01">
            <summary>Sets the stub of AmqpDescribed.ToString()</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Framing.Fakes.StubMessageId">
            <summary>Stub type of Microsoft.Azure.Amqp.Framing.MessageId</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.StubMessageId.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.StubMessageId.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.StubMessageId.EncodeSize">
            <summary>Sets the stub of MessageId.get_EncodeSize()</summary>
        </member>
        <member name="F:Microsoft.Azure.Amqp.Framing.Fakes.StubMessageId.EncodeSizeGet">
            <summary>Sets the stub of MessageId.get_EncodeSize()</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.StubMessageId.InitializeStub">
            <summary>Initializes a new instance of type StubMessageId</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.StubMessageId.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.StubMessageId.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.StubMessageId.OnEncode(Microsoft.Azure.Amqp.ByteBuffer)">
            <summary>Sets the stub of MessageId.OnEncode(ByteBuffer buffer)</summary>
        </member>
        <member name="F:Microsoft.Azure.Amqp.Framing.Fakes.StubMessageId.OnEncodeByteBuffer">
            <summary>Sets the stub of MessageId.OnEncode(ByteBuffer buffer)</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Framing.Fakes.StubOpen">
            <summary>Stub type of Microsoft.Azure.Amqp.Framing.Open</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.StubOpen.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.StubOpen.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.StubOpen.DecodeValue(Microsoft.Azure.Amqp.ByteBuffer)">
            <summary>Sets the stub of DescribedList.DecodeValue(ByteBuffer buffer)</summary>
        </member>
        <member name="F:Microsoft.Azure.Amqp.Framing.Fakes.StubOpen.DecodeValueByteBuffer">
            <summary>Sets the stub of DescribedList.DecodeValue(ByteBuffer buffer)</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.StubOpen.EncodeValue(Microsoft.Azure.Amqp.ByteBuffer)">
            <summary>Sets the stub of DescribedList.EncodeValue(ByteBuffer buffer)</summary>
        </member>
        <member name="F:Microsoft.Azure.Amqp.Framing.Fakes.StubOpen.EncodeValueByteBuffer">
            <summary>Sets the stub of DescribedList.EncodeValue(ByteBuffer buffer)</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.StubOpen.EnsureRequired">
            <summary>Sets the stub of Open.EnsureRequired()</summary>
        </member>
        <member name="F:Microsoft.Azure.Amqp.Framing.Fakes.StubOpen.EnsureRequired01">
            <summary>Sets the stub of Open.EnsureRequired()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.StubOpen.FieldCount">
            <summary>Sets the stub of Open.get_FieldCount()</summary>
        </member>
        <member name="F:Microsoft.Azure.Amqp.Framing.Fakes.StubOpen.FieldCountGet">
            <summary>Sets the stub of Open.get_FieldCount()</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.StubOpen.GetValueEncodeSize">
            <summary>Sets the stub of DescribedList.GetValueEncodeSize()</summary>
        </member>
        <member name="F:Microsoft.Azure.Amqp.Framing.Fakes.StubOpen.GetValueEncodeSize01">
            <summary>Sets the stub of DescribedList.GetValueEncodeSize()</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.StubOpen.InitializeStub">
            <summary>Initializes a new instance of type StubOpen</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.StubOpen.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.StubOpen.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.StubOpen.OnDecode(Microsoft.Azure.Amqp.ByteBuffer,System.Int32)">
            <summary>Sets the stub of Open.OnDecode(ByteBuffer buffer, Int32 count)</summary>
        </member>
        <member name="F:Microsoft.Azure.Amqp.Framing.Fakes.StubOpen.OnDecodeByteBufferInt32">
            <summary>Sets the stub of Open.OnDecode(ByteBuffer buffer, Int32 count)</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.StubOpen.OnEncode(Microsoft.Azure.Amqp.ByteBuffer)">
            <summary>Sets the stub of Open.OnEncode(ByteBuffer buffer)</summary>
        </member>
        <member name="F:Microsoft.Azure.Amqp.Framing.Fakes.StubOpen.OnEncodeByteBuffer">
            <summary>Sets the stub of Open.OnEncode(ByteBuffer buffer)</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.StubOpen.OnValueSize">
            <summary>Sets the stub of Open.OnValueSize()</summary>
        </member>
        <member name="F:Microsoft.Azure.Amqp.Framing.Fakes.StubOpen.OnValueSize01">
            <summary>Sets the stub of Open.OnValueSize()</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.StubOpen.ToString">
            <summary>Sets the stub of Open.ToString()</summary>
        </member>
        <member name="F:Microsoft.Azure.Amqp.Framing.Fakes.StubOpen.ToString01">
            <summary>Sets the stub of Open.ToString()</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Framing.Fakes.StubOutcome">
            <summary>Stub type of Microsoft.Azure.Amqp.Framing.Outcome</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.StubOutcome.#ctor(Microsoft.Azure.Amqp.Encoding.AmqpSymbol,System.UInt64)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.StubOutcome.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.StubOutcome.DecodeValue(Microsoft.Azure.Amqp.ByteBuffer)">
            <summary>Sets the stub of DescribedList.DecodeValue(ByteBuffer buffer)</summary>
        </member>
        <member name="F:Microsoft.Azure.Amqp.Framing.Fakes.StubOutcome.DecodeValueByteBuffer">
            <summary>Sets the stub of DescribedList.DecodeValue(ByteBuffer buffer)</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.StubOutcome.EncodeValue(Microsoft.Azure.Amqp.ByteBuffer)">
            <summary>Sets the stub of DescribedList.EncodeValue(ByteBuffer buffer)</summary>
        </member>
        <member name="F:Microsoft.Azure.Amqp.Framing.Fakes.StubOutcome.EncodeValueByteBuffer">
            <summary>Sets the stub of DescribedList.EncodeValue(ByteBuffer buffer)</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.StubOutcome.EnsureRequired">
            <summary>Sets the stub of DescribedList.EnsureRequired()</summary>
        </member>
        <member name="F:Microsoft.Azure.Amqp.Framing.Fakes.StubOutcome.EnsureRequired01">
            <summary>Sets the stub of DescribedList.EnsureRequired()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.StubOutcome.FieldCount">
            <summary>Sets the stub of DescribedList.get_FieldCount()</summary>
        </member>
        <member name="F:Microsoft.Azure.Amqp.Framing.Fakes.StubOutcome.FieldCountGet">
            <summary>Sets the stub of DescribedList.get_FieldCount()</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.StubOutcome.GetValueEncodeSize">
            <summary>Sets the stub of DescribedList.GetValueEncodeSize()</summary>
        </member>
        <member name="F:Microsoft.Azure.Amqp.Framing.Fakes.StubOutcome.GetValueEncodeSize01">
            <summary>Sets the stub of DescribedList.GetValueEncodeSize()</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.StubOutcome.InitializeStub">
            <summary>Initializes a new instance of type StubOutcome</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.StubOutcome.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.StubOutcome.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.StubOutcome.OnDecode(Microsoft.Azure.Amqp.ByteBuffer,System.Int32)">
            <summary>Sets the stub of DescribedList.OnDecode(ByteBuffer buffer, Int32 count)</summary>
        </member>
        <member name="F:Microsoft.Azure.Amqp.Framing.Fakes.StubOutcome.OnDecodeByteBufferInt32">
            <summary>Sets the stub of DescribedList.OnDecode(ByteBuffer buffer, Int32 count)</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.StubOutcome.OnEncode(Microsoft.Azure.Amqp.ByteBuffer)">
            <summary>Sets the stub of DescribedList.OnEncode(ByteBuffer buffer)</summary>
        </member>
        <member name="F:Microsoft.Azure.Amqp.Framing.Fakes.StubOutcome.OnEncodeByteBuffer">
            <summary>Sets the stub of DescribedList.OnEncode(ByteBuffer buffer)</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.StubOutcome.OnValueSize">
            <summary>Sets the stub of DescribedList.OnValueSize()</summary>
        </member>
        <member name="F:Microsoft.Azure.Amqp.Framing.Fakes.StubOutcome.OnValueSize01">
            <summary>Sets the stub of DescribedList.OnValueSize()</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.StubOutcome.ToString">
            <summary>Sets the stub of AmqpDescribed.ToString()</summary>
        </member>
        <member name="F:Microsoft.Azure.Amqp.Framing.Fakes.StubOutcome.ToString01">
            <summary>Sets the stub of AmqpDescribed.ToString()</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Framing.Fakes.StubPerformative">
            <summary>Stub type of Microsoft.Azure.Amqp.Framing.Performative</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.StubPerformative.#ctor(Microsoft.Azure.Amqp.Encoding.AmqpSymbol,System.UInt64)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.StubPerformative.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.StubPerformative.DecodeValue(Microsoft.Azure.Amqp.ByteBuffer)">
            <summary>Sets the stub of DescribedList.DecodeValue(ByteBuffer buffer)</summary>
        </member>
        <member name="F:Microsoft.Azure.Amqp.Framing.Fakes.StubPerformative.DecodeValueByteBuffer">
            <summary>Sets the stub of DescribedList.DecodeValue(ByteBuffer buffer)</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.StubPerformative.EncodeValue(Microsoft.Azure.Amqp.ByteBuffer)">
            <summary>Sets the stub of DescribedList.EncodeValue(ByteBuffer buffer)</summary>
        </member>
        <member name="F:Microsoft.Azure.Amqp.Framing.Fakes.StubPerformative.EncodeValueByteBuffer">
            <summary>Sets the stub of DescribedList.EncodeValue(ByteBuffer buffer)</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.StubPerformative.EnsureRequired">
            <summary>Sets the stub of DescribedList.EnsureRequired()</summary>
        </member>
        <member name="F:Microsoft.Azure.Amqp.Framing.Fakes.StubPerformative.EnsureRequired01">
            <summary>Sets the stub of DescribedList.EnsureRequired()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.StubPerformative.FieldCount">
            <summary>Sets the stub of DescribedList.get_FieldCount()</summary>
        </member>
        <member name="F:Microsoft.Azure.Amqp.Framing.Fakes.StubPerformative.FieldCountGet">
            <summary>Sets the stub of DescribedList.get_FieldCount()</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.StubPerformative.GetValueEncodeSize">
            <summary>Sets the stub of DescribedList.GetValueEncodeSize()</summary>
        </member>
        <member name="F:Microsoft.Azure.Amqp.Framing.Fakes.StubPerformative.GetValueEncodeSize01">
            <summary>Sets the stub of DescribedList.GetValueEncodeSize()</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.StubPerformative.InitializeStub">
            <summary>Initializes a new instance of type StubPerformative</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.StubPerformative.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.StubPerformative.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.StubPerformative.OnDecode(Microsoft.Azure.Amqp.ByteBuffer,System.Int32)">
            <summary>Sets the stub of DescribedList.OnDecode(ByteBuffer buffer, Int32 count)</summary>
        </member>
        <member name="F:Microsoft.Azure.Amqp.Framing.Fakes.StubPerformative.OnDecodeByteBufferInt32">
            <summary>Sets the stub of DescribedList.OnDecode(ByteBuffer buffer, Int32 count)</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.StubPerformative.OnEncode(Microsoft.Azure.Amqp.ByteBuffer)">
            <summary>Sets the stub of DescribedList.OnEncode(ByteBuffer buffer)</summary>
        </member>
        <member name="F:Microsoft.Azure.Amqp.Framing.Fakes.StubPerformative.OnEncodeByteBuffer">
            <summary>Sets the stub of DescribedList.OnEncode(ByteBuffer buffer)</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.StubPerformative.OnValueSize">
            <summary>Sets the stub of DescribedList.OnValueSize()</summary>
        </member>
        <member name="F:Microsoft.Azure.Amqp.Framing.Fakes.StubPerformative.OnValueSize01">
            <summary>Sets the stub of DescribedList.OnValueSize()</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.StubPerformative.ToString">
            <summary>Sets the stub of AmqpDescribed.ToString()</summary>
        </member>
        <member name="F:Microsoft.Azure.Amqp.Framing.Fakes.StubPerformative.ToString01">
            <summary>Sets the stub of AmqpDescribed.ToString()</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Framing.Fakes.StubRestrictedMap">
            <summary>Stub type of Microsoft.Azure.Amqp.Framing.RestrictedMap</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.StubRestrictedMap.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.StubRestrictedMap.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.StubRestrictedMap.InitializeStub">
            <summary>Initializes a new instance of type StubRestrictedMap</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.StubRestrictedMap.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.StubRestrictedMap.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.StubRestrictedMap.ToString">
            <summary>Sets the stub of RestrictedMap.ToString()</summary>
        </member>
        <member name="F:Microsoft.Azure.Amqp.Framing.Fakes.StubRestrictedMap.ToString01">
            <summary>Sets the stub of RestrictedMap.ToString()</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Framing.Fakes.StubRestrictedMap`1">
            <summary>Stub type of Microsoft.Azure.Amqp.Framing.RestrictedMap`1</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.StubRestrictedMap`1.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.StubRestrictedMap`1.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.StubRestrictedMap`1.InitializeStub">
            <summary>Initializes a new instance of type StubRestrictedMap</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.StubRestrictedMap`1.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Framing.Fakes.StubRestrictedMap`1.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Framing.Fakes.StubRestrictedMap`1.ToString">
            <summary>Sets the stub of RestrictedMap.ToString()</summary>
        </member>
        <member name="F:Microsoft.Azure.Amqp.Framing.Fakes.StubRestrictedMap`1.ToString01">
            <summary>Sets the stub of RestrictedMap.ToString()</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Sasl.Fakes.ShimSaslAnonymousHandler">
            <summary>Shim type of Microsoft.Azure.Amqp.Sasl.SaslAnonymousHandler</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Sasl.Fakes.ShimSaslAnonymousHandler.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Sasl.Fakes.ShimSaslAnonymousHandler.#ctor(Microsoft.Azure.Amqp.Sasl.SaslAnonymousHandler)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Sasl.Fakes.ShimSaslAnonymousHandler.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Sasl.Fakes.ShimSaslAnonymousHandler.AllInstances.Clone">
            <summary>Sets the shim of SaslAnonymousHandler.Clone()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Sasl.Fakes.ShimSaslAnonymousHandler.AllInstances.IdentityGet">
            <summary>Sets the shim of SaslAnonymousHandler.get_Identity()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Sasl.Fakes.ShimSaslAnonymousHandler.AllInstances.IdentitySetString">
            <summary>Sets the shim of SaslAnonymousHandler.set_Identity(String value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Sasl.Fakes.ShimSaslAnonymousHandler.AllInstances.OnChallengeSaslChallenge">
            <summary>Sets the shim of SaslAnonymousHandler.OnChallenge(SaslChallenge challenge)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Sasl.Fakes.ShimSaslAnonymousHandler.AllInstances.OnResponseSaslResponse">
            <summary>Sets the shim of SaslAnonymousHandler.OnResponse(SaslResponse response)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Sasl.Fakes.ShimSaslAnonymousHandler.AllInstances.OnStartSaslInitBoolean">
            <summary>Sets the shim of SaslAnonymousHandler.OnStart(SaslInit init, Boolean isClient)</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Sasl.Fakes.ShimSaslAnonymousHandler.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Sasl.Fakes.ShimSaslAnonymousHandler.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Sasl.Fakes.ShimSaslAnonymousHandler.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Sasl.Fakes.ShimSaslAnonymousHandler.Clone">
            <summary>Sets the shim of SaslAnonymousHandler.Clone()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Sasl.Fakes.ShimSaslAnonymousHandler.Constructor">
            <summary>Sets the shim of SaslAnonymousHandler.SaslAnonymousHandler()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Sasl.Fakes.ShimSaslAnonymousHandler.ConstructorString">
            <summary>Sets the shim of SaslAnonymousHandler.SaslAnonymousHandler(String name)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Sasl.Fakes.ShimSaslAnonymousHandler.IdentityGet">
            <summary>Sets the shim of SaslAnonymousHandler.get_Identity()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Sasl.Fakes.ShimSaslAnonymousHandler.IdentitySetString">
            <summary>Sets the shim of SaslAnonymousHandler.set_Identity(String value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Sasl.Fakes.ShimSaslAnonymousHandler.OnChallengeSaslChallenge">
            <summary>Sets the shim of SaslAnonymousHandler.OnChallenge(SaslChallenge challenge)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Sasl.Fakes.ShimSaslAnonymousHandler.OnResponseSaslResponse">
            <summary>Sets the shim of SaslAnonymousHandler.OnResponse(SaslResponse response)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Sasl.Fakes.ShimSaslAnonymousHandler.OnStartSaslInitBoolean">
            <summary>Sets the shim of SaslAnonymousHandler.OnStart(SaslInit init, Boolean isClient)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Sasl.Fakes.ShimSaslAnonymousHandler.StaticConstructor">
            <summary>Sets the shim of SaslAnonymousHandler.SaslAnonymousHandler()</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Sasl.Fakes.ShimSaslChallenge">
            <summary>Shim type of Microsoft.Azure.Amqp.Sasl.SaslChallenge</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Sasl.Fakes.ShimSaslChallenge.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Sasl.Fakes.ShimSaslChallenge.#ctor(Microsoft.Azure.Amqp.Sasl.SaslChallenge)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Sasl.Fakes.ShimSaslChallenge.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Sasl.Fakes.ShimSaslChallenge.AllInstances.ChallengeGet">
            <summary>Sets the shim of SaslChallenge.get_Challenge()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Sasl.Fakes.ShimSaslChallenge.AllInstances.ChallengeSetArraySegmentOfByte">
            <summary>Sets the shim of SaslChallenge.set_Challenge(ArraySegment`1&lt;Byte&gt; value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Sasl.Fakes.ShimSaslChallenge.AllInstances.EnsureRequired">
            <summary>Sets the shim of SaslChallenge.EnsureRequired()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Sasl.Fakes.ShimSaslChallenge.AllInstances.FieldCountGet">
            <summary>Sets the shim of SaslChallenge.get_FieldCount()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Sasl.Fakes.ShimSaslChallenge.AllInstances.OnDecodeByteBufferInt32">
            <summary>Sets the shim of SaslChallenge.OnDecode(ByteBuffer buffer, Int32 count)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Sasl.Fakes.ShimSaslChallenge.AllInstances.OnEncodeByteBuffer">
            <summary>Sets the shim of SaslChallenge.OnEncode(ByteBuffer buffer)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Sasl.Fakes.ShimSaslChallenge.AllInstances.OnValueSize">
            <summary>Sets the shim of SaslChallenge.OnValueSize()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Sasl.Fakes.ShimSaslChallenge.AllInstances.ToString01">
            <summary>Sets the shim of SaslChallenge.ToString()</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Sasl.Fakes.ShimSaslChallenge.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Sasl.Fakes.ShimSaslChallenge.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Sasl.Fakes.ShimSaslChallenge.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Sasl.Fakes.ShimSaslChallenge.Bind(Microsoft.Azure.Amqp.Encoding.IAmqpSerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Sasl.Fakes.ShimSaslChallenge.ChallengeGet">
            <summary>Sets the shim of SaslChallenge.get_Challenge()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Sasl.Fakes.ShimSaslChallenge.ChallengeSetArraySegmentOfByte">
            <summary>Sets the shim of SaslChallenge.set_Challenge(ArraySegment`1&lt;Byte&gt; value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Sasl.Fakes.ShimSaslChallenge.Constructor">
            <summary>Sets the shim of SaslChallenge.SaslChallenge()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Sasl.Fakes.ShimSaslChallenge.EnsureRequired">
            <summary>Sets the shim of SaslChallenge.EnsureRequired()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Sasl.Fakes.ShimSaslChallenge.FieldCountGet">
            <summary>Sets the shim of SaslChallenge.get_FieldCount()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Sasl.Fakes.ShimSaslChallenge.OnDecodeByteBufferInt32">
            <summary>Sets the shim of SaslChallenge.OnDecode(ByteBuffer buffer, Int32 count)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Sasl.Fakes.ShimSaslChallenge.OnEncodeByteBuffer">
            <summary>Sets the shim of SaslChallenge.OnEncode(ByteBuffer buffer)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Sasl.Fakes.ShimSaslChallenge.OnValueSize">
            <summary>Sets the shim of SaslChallenge.OnValueSize()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Sasl.Fakes.ShimSaslChallenge.StaticConstructor">
            <summary>Sets the shim of SaslChallenge.SaslChallenge()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Sasl.Fakes.ShimSaslChallenge.ToString">
            <summary>Sets the shim of SaslChallenge.ToString()</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Sasl.Fakes.ShimSaslExternalHandler">
            <summary>Shim type of Microsoft.Azure.Amqp.Sasl.SaslExternalHandler</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Sasl.Fakes.ShimSaslExternalHandler.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Sasl.Fakes.ShimSaslExternalHandler.#ctor(Microsoft.Azure.Amqp.Sasl.SaslExternalHandler)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Sasl.Fakes.ShimSaslExternalHandler.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Sasl.Fakes.ShimSaslExternalHandler.AllInstances.Clone">
            <summary>Sets the shim of SaslExternalHandler.Clone()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Sasl.Fakes.ShimSaslExternalHandler.AllInstances.OnChallengeSaslChallenge">
            <summary>Sets the shim of SaslExternalHandler.OnChallenge(SaslChallenge challenge)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Sasl.Fakes.ShimSaslExternalHandler.AllInstances.OnResponseSaslResponse">
            <summary>Sets the shim of SaslExternalHandler.OnResponse(SaslResponse response)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Sasl.Fakes.ShimSaslExternalHandler.AllInstances.OnStartSaslInitBoolean">
            <summary>Sets the shim of SaslExternalHandler.OnStart(SaslInit init, Boolean isClient)</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Sasl.Fakes.ShimSaslExternalHandler.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Sasl.Fakes.ShimSaslExternalHandler.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Sasl.Fakes.ShimSaslExternalHandler.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Sasl.Fakes.ShimSaslExternalHandler.Clone">
            <summary>Sets the shim of SaslExternalHandler.Clone()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Sasl.Fakes.ShimSaslExternalHandler.Constructor">
            <summary>Sets the shim of SaslExternalHandler.SaslExternalHandler()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Sasl.Fakes.ShimSaslExternalHandler.OnChallengeSaslChallenge">
            <summary>Sets the shim of SaslExternalHandler.OnChallenge(SaslChallenge challenge)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Sasl.Fakes.ShimSaslExternalHandler.OnResponseSaslResponse">
            <summary>Sets the shim of SaslExternalHandler.OnResponse(SaslResponse response)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Sasl.Fakes.ShimSaslExternalHandler.OnStartSaslInitBoolean">
            <summary>Sets the shim of SaslExternalHandler.OnStart(SaslInit init, Boolean isClient)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Sasl.Fakes.ShimSaslExternalHandler.StaticConstructor">
            <summary>Sets the shim of SaslExternalHandler.SaslExternalHandler()</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Sasl.Fakes.ShimSaslHandler">
            <summary>Shim type of Microsoft.Azure.Amqp.Sasl.SaslHandler</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Sasl.Fakes.ShimSaslHandler.#ctor(Microsoft.Azure.Amqp.Sasl.SaslHandler)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Sasl.Fakes.ShimSaslHandler.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Sasl.Fakes.ShimSaslHandler.AllInstances.MechanismGet">
            <summary>Sets the shim of SaslHandler.get_Mechanism()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Sasl.Fakes.ShimSaslHandler.AllInstances.MechanismSetString">
            <summary>Sets the shim of SaslHandler.set_Mechanism(String value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Sasl.Fakes.ShimSaslHandler.AllInstances.NegotiatorGet">
            <summary>Sets the shim of SaslHandler.get_Negotiator()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Sasl.Fakes.ShimSaslHandler.AllInstances.PrincipalGet">
            <summary>Sets the shim of SaslHandler.get_Principal()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Sasl.Fakes.ShimSaslHandler.AllInstances.PrincipalSetIPrincipal">
            <summary>Sets the shim of SaslHandler.set_Principal(IPrincipal value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Sasl.Fakes.ShimSaslHandler.AllInstances.StartSaslNegotiatorSaslInitBoolean">
            <summary>Sets the shim of SaslHandler.Start(SaslNegotiator saslNegotiator, SaslInit init, Boolean isClient)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Sasl.Fakes.ShimSaslHandler.AllInstances.ToString01">
            <summary>Sets the shim of SaslHandler.ToString()</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Sasl.Fakes.ShimSaslHandler.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Sasl.Fakes.ShimSaslHandler.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Sasl.Fakes.ShimSaslHandler.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Sasl.Fakes.ShimSaslHandler.Constructor">
            <summary>Sets the shim of SaslHandler.SaslHandler()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Sasl.Fakes.ShimSaslHandler.MechanismGet">
            <summary>Sets the shim of SaslHandler.get_Mechanism()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Sasl.Fakes.ShimSaslHandler.MechanismSetString">
            <summary>Sets the shim of SaslHandler.set_Mechanism(String value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Sasl.Fakes.ShimSaslHandler.NegotiatorGet">
            <summary>Sets the shim of SaslHandler.get_Negotiator()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Sasl.Fakes.ShimSaslHandler.PrincipalGet">
            <summary>Sets the shim of SaslHandler.get_Principal()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Sasl.Fakes.ShimSaslHandler.PrincipalSetIPrincipal">
            <summary>Sets the shim of SaslHandler.set_Principal(IPrincipal value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Sasl.Fakes.ShimSaslHandler.StartSaslNegotiatorSaslInitBoolean">
            <summary>Sets the shim of SaslHandler.Start(SaslNegotiator saslNegotiator, SaslInit init, Boolean isClient)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Sasl.Fakes.ShimSaslHandler.ToString">
            <summary>Sets the shim of SaslHandler.ToString()</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Sasl.Fakes.ShimSaslInit">
            <summary>Shim type of Microsoft.Azure.Amqp.Sasl.SaslInit</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Sasl.Fakes.ShimSaslInit.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Sasl.Fakes.ShimSaslInit.#ctor(Microsoft.Azure.Amqp.Sasl.SaslInit)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Sasl.Fakes.ShimSaslInit.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Sasl.Fakes.ShimSaslInit.AllInstances.EnsureRequired">
            <summary>Sets the shim of SaslInit.EnsureRequired()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Sasl.Fakes.ShimSaslInit.AllInstances.FieldCountGet">
            <summary>Sets the shim of SaslInit.get_FieldCount()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Sasl.Fakes.ShimSaslInit.AllInstances.HostNameGet">
            <summary>Sets the shim of SaslInit.get_HostName()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Sasl.Fakes.ShimSaslInit.AllInstances.HostNameSetString">
            <summary>Sets the shim of SaslInit.set_HostName(String value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Sasl.Fakes.ShimSaslInit.AllInstances.InitialResponseGet">
            <summary>Sets the shim of SaslInit.get_InitialResponse()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Sasl.Fakes.ShimSaslInit.AllInstances.InitialResponseSetArraySegmentOfByte">
            <summary>Sets the shim of SaslInit.set_InitialResponse(ArraySegment`1&lt;Byte&gt; value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Sasl.Fakes.ShimSaslInit.AllInstances.MechanismGet">
            <summary>Sets the shim of SaslInit.get_Mechanism()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Sasl.Fakes.ShimSaslInit.AllInstances.MechanismSetAmqpSymbol">
            <summary>Sets the shim of SaslInit.set_Mechanism(AmqpSymbol value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Sasl.Fakes.ShimSaslInit.AllInstances.OnDecodeByteBufferInt32">
            <summary>Sets the shim of SaslInit.OnDecode(ByteBuffer buffer, Int32 count)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Sasl.Fakes.ShimSaslInit.AllInstances.OnEncodeByteBuffer">
            <summary>Sets the shim of SaslInit.OnEncode(ByteBuffer buffer)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Sasl.Fakes.ShimSaslInit.AllInstances.OnValueSize">
            <summary>Sets the shim of SaslInit.OnValueSize()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Sasl.Fakes.ShimSaslInit.AllInstances.ToString01">
            <summary>Sets the shim of SaslInit.ToString()</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Sasl.Fakes.ShimSaslInit.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Sasl.Fakes.ShimSaslInit.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Sasl.Fakes.ShimSaslInit.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Sasl.Fakes.ShimSaslInit.Bind(Microsoft.Azure.Amqp.Encoding.IAmqpSerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Sasl.Fakes.ShimSaslInit.Constructor">
            <summary>Sets the shim of SaslInit.SaslInit()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Sasl.Fakes.ShimSaslInit.EnsureRequired">
            <summary>Sets the shim of SaslInit.EnsureRequired()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Sasl.Fakes.ShimSaslInit.FieldCountGet">
            <summary>Sets the shim of SaslInit.get_FieldCount()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Sasl.Fakes.ShimSaslInit.HostNameGet">
            <summary>Sets the shim of SaslInit.get_HostName()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Sasl.Fakes.ShimSaslInit.HostNameSetString">
            <summary>Sets the shim of SaslInit.set_HostName(String value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Sasl.Fakes.ShimSaslInit.InitialResponseGet">
            <summary>Sets the shim of SaslInit.get_InitialResponse()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Sasl.Fakes.ShimSaslInit.InitialResponseSetArraySegmentOfByte">
            <summary>Sets the shim of SaslInit.set_InitialResponse(ArraySegment`1&lt;Byte&gt; value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Sasl.Fakes.ShimSaslInit.MechanismGet">
            <summary>Sets the shim of SaslInit.get_Mechanism()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Sasl.Fakes.ShimSaslInit.MechanismSetAmqpSymbol">
            <summary>Sets the shim of SaslInit.set_Mechanism(AmqpSymbol value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Sasl.Fakes.ShimSaslInit.OnDecodeByteBufferInt32">
            <summary>Sets the shim of SaslInit.OnDecode(ByteBuffer buffer, Int32 count)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Sasl.Fakes.ShimSaslInit.OnEncodeByteBuffer">
            <summary>Sets the shim of SaslInit.OnEncode(ByteBuffer buffer)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Sasl.Fakes.ShimSaslInit.OnValueSize">
            <summary>Sets the shim of SaslInit.OnValueSize()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Sasl.Fakes.ShimSaslInit.StaticConstructor">
            <summary>Sets the shim of SaslInit.SaslInit()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Sasl.Fakes.ShimSaslInit.ToString">
            <summary>Sets the shim of SaslInit.ToString()</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Sasl.Fakes.ShimSaslNegotiator">
            <summary>Shim type of Microsoft.Azure.Amqp.Sasl.SaslNegotiator</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Sasl.Fakes.ShimSaslNegotiator.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Sasl.Fakes.ShimSaslNegotiator.#ctor(Microsoft.Azure.Amqp.Sasl.SaslNegotiator)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Sasl.Fakes.ShimSaslNegotiator.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Sasl.Fakes.ShimSaslNegotiator.AllInstances.CompleteNegotiationSaslCodeException">
            <summary>Sets the shim of SaslNegotiator.CompleteNegotiation(SaslCode code, Exception exception)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Sasl.Fakes.ShimSaslNegotiator.AllInstances.CompleteTransport">
            <summary>Sets the shim of SaslNegotiator.CompleteTransport()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Sasl.Fakes.ShimSaslNegotiator.AllInstances.HandleExceptionStringException">
            <summary>Sets the shim of SaslNegotiator.HandleException(String action, Exception exception)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Sasl.Fakes.ShimSaslNegotiator.AllInstances.HandleSaslCommandPerformative">
            <summary>Sets the shim of SaslNegotiator.HandleSaslCommand(Performative command)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Sasl.Fakes.ShimSaslNegotiator.AllInstances.MicrosoftAzureAmqpIIoHandlerOnIoEventIoEventInt64">
            <summary>Sets the shim of SaslNegotiator.Microsoft.Azure.Amqp.IIoHandler.OnIoEvent(IoEvent ioEvent, Int64 queueSize)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Sasl.Fakes.ShimSaslNegotiator.AllInstances.MicrosoftAzureAmqpIIoHandlerOnIoFaultException">
            <summary>Sets the shim of SaslNegotiator.Microsoft.Azure.Amqp.IIoHandler.OnIoFault(Exception exception)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Sasl.Fakes.ShimSaslNegotiator.AllInstances.MicrosoftAzureAmqpIIoHandlerOnReceiveBufferByteBuffer">
            <summary>Sets the shim of SaslNegotiator.Microsoft.Azure.Amqp.IIoHandler.OnReceiveBuffer(ByteBuffer buffer)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Sasl.Fakes.ShimSaslNegotiator.AllInstances.OnSaslInitSaslInit">
            <summary>Sets the shim of SaslNegotiator.OnSaslInit(SaslInit init)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Sasl.Fakes.ShimSaslNegotiator.AllInstances.ReadFrame">
            <summary>Sets the shim of SaslNegotiator.ReadFrame()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Sasl.Fakes.ShimSaslNegotiator.AllInstances.SendServerMechanisms">
            <summary>Sets the shim of SaslNegotiator.SendServerMechanisms()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Sasl.Fakes.ShimSaslNegotiator.AllInstances.Start">
            <summary>Sets the shim of SaslNegotiator.Start()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Sasl.Fakes.ShimSaslNegotiator.AllInstances.ToString01">
            <summary>Sets the shim of SaslNegotiator.ToString()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Sasl.Fakes.ShimSaslNegotiator.AllInstances.WriteFramePerformativeBoolean">
            <summary>Sets the shim of SaslNegotiator.WriteFrame(Performative command, Boolean needReply)</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Sasl.Fakes.ShimSaslNegotiator.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Sasl.Fakes.ShimSaslNegotiator.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Sasl.Fakes.ShimSaslNegotiator.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Sasl.Fakes.ShimSaslNegotiator.Bind(Microsoft.Azure.Amqp.IIoHandler)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Sasl.Fakes.ShimSaslNegotiator.CompleteNegotiationSaslCodeException">
            <summary>Sets the shim of SaslNegotiator.CompleteNegotiation(SaslCode code, Exception exception)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Sasl.Fakes.ShimSaslNegotiator.CompleteTransport">
            <summary>Sets the shim of SaslNegotiator.CompleteTransport()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Sasl.Fakes.ShimSaslNegotiator.ConstructorSaslTransportSaslTransportProviderBoolean">
            <summary>Sets the shim of SaslNegotiator.SaslNegotiator(SaslTransport transport, SaslTransportProvider provider, Boolean isInitiator)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Sasl.Fakes.ShimSaslNegotiator.HandleExceptionStringException">
            <summary>Sets the shim of SaslNegotiator.HandleException(String action, Exception exception)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Sasl.Fakes.ShimSaslNegotiator.HandleSaslCommandPerformative">
            <summary>Sets the shim of SaslNegotiator.HandleSaslCommand(Performative command)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Sasl.Fakes.ShimSaslNegotiator.MicrosoftAzureAmqpIIoHandlerOnIoEventIoEventInt64">
            <summary>Sets the shim of SaslNegotiator.Microsoft.Azure.Amqp.IIoHandler.OnIoEvent(IoEvent ioEvent, Int64 queueSize)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Sasl.Fakes.ShimSaslNegotiator.MicrosoftAzureAmqpIIoHandlerOnIoFaultException">
            <summary>Sets the shim of SaslNegotiator.Microsoft.Azure.Amqp.IIoHandler.OnIoFault(Exception exception)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Sasl.Fakes.ShimSaslNegotiator.MicrosoftAzureAmqpIIoHandlerOnReceiveBufferByteBuffer">
            <summary>Sets the shim of SaslNegotiator.Microsoft.Azure.Amqp.IIoHandler.OnReceiveBuffer(ByteBuffer buffer)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Sasl.Fakes.ShimSaslNegotiator.OnSaslInitSaslInit">
            <summary>Sets the shim of SaslNegotiator.OnSaslInit(SaslInit init)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Sasl.Fakes.ShimSaslNegotiator.OnWriteFrameCompleteTransportAsyncCallbackArgs">
            <summary>Sets the shim of SaslNegotiator.OnWriteFrameComplete(TransportAsyncCallbackArgs args)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Sasl.Fakes.ShimSaslNegotiator.ReadFrame">
            <summary>Sets the shim of SaslNegotiator.ReadFrame()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Sasl.Fakes.ShimSaslNegotiator.SendServerMechanisms">
            <summary>Sets the shim of SaslNegotiator.SendServerMechanisms()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Sasl.Fakes.ShimSaslNegotiator.Start">
            <summary>Sets the shim of SaslNegotiator.Start()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Sasl.Fakes.ShimSaslNegotiator.StaticConstructor">
            <summary>Sets the shim of SaslNegotiator.SaslNegotiator()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Sasl.Fakes.ShimSaslNegotiator.ToString">
            <summary>Sets the shim of SaslNegotiator.ToString()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Sasl.Fakes.ShimSaslNegotiator.WriteFramePerformativeBoolean">
            <summary>Sets the shim of SaslNegotiator.WriteFrame(Performative command, Boolean needReply)</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Sasl.Fakes.ShimSaslPlainHandler">
            <summary>Shim type of Microsoft.Azure.Amqp.Sasl.SaslPlainHandler</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Sasl.Fakes.ShimSaslPlainHandler.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Sasl.Fakes.ShimSaslPlainHandler.#ctor(Microsoft.Azure.Amqp.Sasl.SaslPlainHandler)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Sasl.Fakes.ShimSaslPlainHandler.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Sasl.Fakes.ShimSaslPlainHandler.AllInstances.AuthenticationIdentityGet">
            <summary>Sets the shim of SaslPlainHandler.get_AuthenticationIdentity()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Sasl.Fakes.ShimSaslPlainHandler.AllInstances.AuthenticationIdentitySetString">
            <summary>Sets the shim of SaslPlainHandler.set_AuthenticationIdentity(String value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Sasl.Fakes.ShimSaslPlainHandler.AllInstances.AuthorizationIdentityGet">
            <summary>Sets the shim of SaslPlainHandler.get_AuthorizationIdentity()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Sasl.Fakes.ShimSaslPlainHandler.AllInstances.AuthorizationIdentitySetString">
            <summary>Sets the shim of SaslPlainHandler.set_AuthorizationIdentity(String value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Sasl.Fakes.ShimSaslPlainHandler.AllInstances.Clone">
            <summary>Sets the shim of SaslPlainHandler.Clone()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Sasl.Fakes.ShimSaslPlainHandler.AllInstances.CompleteNegotiationTaskOfIPrincipal">
            <summary>Sets the shim of SaslPlainHandler.CompleteNegotiation(Task`1&lt;IPrincipal&gt; authenticateTask)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Sasl.Fakes.ShimSaslPlainHandler.AllInstances.GetClientMessage">
            <summary>Sets the shim of SaslPlainHandler.GetClientMessage()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Sasl.Fakes.ShimSaslPlainHandler.AllInstances.OnChallengeSaslChallenge">
            <summary>Sets the shim of SaslPlainHandler.OnChallenge(SaslChallenge challenge)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Sasl.Fakes.ShimSaslPlainHandler.AllInstances.OnInitSaslInit">
            <summary>Sets the shim of SaslPlainHandler.OnInit(SaslInit init)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Sasl.Fakes.ShimSaslPlainHandler.AllInstances.OnResponseSaslResponse">
            <summary>Sets the shim of SaslPlainHandler.OnResponse(SaslResponse response)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Sasl.Fakes.ShimSaslPlainHandler.AllInstances.OnStartSaslInitBoolean">
            <summary>Sets the shim of SaslPlainHandler.OnStart(SaslInit init, Boolean isClient)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Sasl.Fakes.ShimSaslPlainHandler.AllInstances.PasswordGet">
            <summary>Sets the shim of SaslPlainHandler.get_Password()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Sasl.Fakes.ShimSaslPlainHandler.AllInstances.PasswordSetString">
            <summary>Sets the shim of SaslPlainHandler.set_Password(String value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Sasl.Fakes.ShimSaslPlainHandler.AllInstances._OnInitb__21_0TaskOfIPrincipal">
            <summary>Sets the shim of SaslPlainHandler.&lt;OnInit&gt;b__21_0(Task`1&lt;IPrincipal&gt; t)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Sasl.Fakes.ShimSaslPlainHandler.AuthenticationIdentityGet">
            <summary>Sets the shim of SaslPlainHandler.get_AuthenticationIdentity()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Sasl.Fakes.ShimSaslPlainHandler.AuthenticationIdentitySetString">
            <summary>Sets the shim of SaslPlainHandler.set_AuthenticationIdentity(String value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Sasl.Fakes.ShimSaslPlainHandler.AuthorizationIdentityGet">
            <summary>Sets the shim of SaslPlainHandler.get_AuthorizationIdentity()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Sasl.Fakes.ShimSaslPlainHandler.AuthorizationIdentitySetString">
            <summary>Sets the shim of SaslPlainHandler.set_AuthorizationIdentity(String value)</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Sasl.Fakes.ShimSaslPlainHandler.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Sasl.Fakes.ShimSaslPlainHandler.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Sasl.Fakes.ShimSaslPlainHandler.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Sasl.Fakes.ShimSaslPlainHandler.Clone">
            <summary>Sets the shim of SaslPlainHandler.Clone()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Sasl.Fakes.ShimSaslPlainHandler.CompleteNegotiationTaskOfIPrincipal">
            <summary>Sets the shim of SaslPlainHandler.CompleteNegotiation(Task`1&lt;IPrincipal&gt; authenticateTask)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Sasl.Fakes.ShimSaslPlainHandler.Constructor">
            <summary>Sets the shim of SaslPlainHandler.SaslPlainHandler()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Sasl.Fakes.ShimSaslPlainHandler.ConstructorISaslPlainAuthenticator">
            <summary>Sets the shim of SaslPlainHandler.SaslPlainHandler(ISaslPlainAuthenticator authenticator)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Sasl.Fakes.ShimSaslPlainHandler.GetClientMessage">
            <summary>Sets the shim of SaslPlainHandler.GetClientMessage()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Sasl.Fakes.ShimSaslPlainHandler.OnChallengeSaslChallenge">
            <summary>Sets the shim of SaslPlainHandler.OnChallenge(SaslChallenge challenge)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Sasl.Fakes.ShimSaslPlainHandler.OnInitSaslInit">
            <summary>Sets the shim of SaslPlainHandler.OnInit(SaslInit init)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Sasl.Fakes.ShimSaslPlainHandler.OnResponseSaslResponse">
            <summary>Sets the shim of SaslPlainHandler.OnResponse(SaslResponse response)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Sasl.Fakes.ShimSaslPlainHandler.OnStartSaslInitBoolean">
            <summary>Sets the shim of SaslPlainHandler.OnStart(SaslInit init, Boolean isClient)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Sasl.Fakes.ShimSaslPlainHandler.PasswordGet">
            <summary>Sets the shim of SaslPlainHandler.get_Password()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Sasl.Fakes.ShimSaslPlainHandler.PasswordSetString">
            <summary>Sets the shim of SaslPlainHandler.set_Password(String value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Sasl.Fakes.ShimSaslPlainHandler.StaticConstructor">
            <summary>Sets the shim of SaslPlainHandler.SaslPlainHandler()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Sasl.Fakes.ShimSaslPlainHandler._OnInitb__21_0TaskOfIPrincipal">
            <summary>Sets the shim of SaslPlainHandler.&lt;OnInit&gt;b__21_0(Task`1&lt;IPrincipal&gt; t)</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Sasl.Fakes.ShimSaslResponse">
            <summary>Shim type of Microsoft.Azure.Amqp.Sasl.SaslResponse</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Sasl.Fakes.ShimSaslResponse.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Sasl.Fakes.ShimSaslResponse.#ctor(Microsoft.Azure.Amqp.Sasl.SaslResponse)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Sasl.Fakes.ShimSaslResponse.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Sasl.Fakes.ShimSaslResponse.AllInstances.EnsureRequired">
            <summary>Sets the shim of SaslResponse.EnsureRequired()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Sasl.Fakes.ShimSaslResponse.AllInstances.FieldCountGet">
            <summary>Sets the shim of SaslResponse.get_FieldCount()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Sasl.Fakes.ShimSaslResponse.AllInstances.OnDecodeByteBufferInt32">
            <summary>Sets the shim of SaslResponse.OnDecode(ByteBuffer buffer, Int32 count)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Sasl.Fakes.ShimSaslResponse.AllInstances.OnEncodeByteBuffer">
            <summary>Sets the shim of SaslResponse.OnEncode(ByteBuffer buffer)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Sasl.Fakes.ShimSaslResponse.AllInstances.OnValueSize">
            <summary>Sets the shim of SaslResponse.OnValueSize()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Sasl.Fakes.ShimSaslResponse.AllInstances.ResponseGet">
            <summary>Sets the shim of SaslResponse.get_Response()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Sasl.Fakes.ShimSaslResponse.AllInstances.ResponseSetArraySegmentOfByte">
            <summary>Sets the shim of SaslResponse.set_Response(ArraySegment`1&lt;Byte&gt; value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Sasl.Fakes.ShimSaslResponse.AllInstances.ToString01">
            <summary>Sets the shim of SaslResponse.ToString()</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Sasl.Fakes.ShimSaslResponse.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Sasl.Fakes.ShimSaslResponse.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Sasl.Fakes.ShimSaslResponse.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Sasl.Fakes.ShimSaslResponse.Bind(Microsoft.Azure.Amqp.Encoding.IAmqpSerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Sasl.Fakes.ShimSaslResponse.Constructor">
            <summary>Sets the shim of SaslResponse.SaslResponse()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Sasl.Fakes.ShimSaslResponse.EnsureRequired">
            <summary>Sets the shim of SaslResponse.EnsureRequired()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Sasl.Fakes.ShimSaslResponse.FieldCountGet">
            <summary>Sets the shim of SaslResponse.get_FieldCount()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Sasl.Fakes.ShimSaslResponse.OnDecodeByteBufferInt32">
            <summary>Sets the shim of SaslResponse.OnDecode(ByteBuffer buffer, Int32 count)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Sasl.Fakes.ShimSaslResponse.OnEncodeByteBuffer">
            <summary>Sets the shim of SaslResponse.OnEncode(ByteBuffer buffer)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Sasl.Fakes.ShimSaslResponse.OnValueSize">
            <summary>Sets the shim of SaslResponse.OnValueSize()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Sasl.Fakes.ShimSaslResponse.ResponseGet">
            <summary>Sets the shim of SaslResponse.get_Response()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Sasl.Fakes.ShimSaslResponse.ResponseSetArraySegmentOfByte">
            <summary>Sets the shim of SaslResponse.set_Response(ArraySegment`1&lt;Byte&gt; value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Sasl.Fakes.ShimSaslResponse.StaticConstructor">
            <summary>Sets the shim of SaslResponse.SaslResponse()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Sasl.Fakes.ShimSaslResponse.ToString">
            <summary>Sets the shim of SaslResponse.ToString()</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Sasl.Fakes.ShimSaslTransport">
            <summary>Shim type of Microsoft.Azure.Amqp.Sasl.SaslTransport</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Sasl.Fakes.ShimSaslTransport.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Sasl.Fakes.ShimSaslTransport.#ctor(Microsoft.Azure.Amqp.Sasl.SaslTransport)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Sasl.Fakes.ShimSaslTransport.AbortInternal">
            <summary>Sets the shim of SaslTransport.AbortInternal()</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Sasl.Fakes.ShimSaslTransport.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Sasl.Fakes.ShimSaslTransport.AllInstances.AbortInternal">
            <summary>Sets the shim of SaslTransport.AbortInternal()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Sasl.Fakes.ShimSaslTransport.AllInstances.CloseInternal">
            <summary>Sets the shim of SaslTransport.CloseInternal()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Sasl.Fakes.ShimSaslTransport.AllInstances.IsSecureGet">
            <summary>Sets the shim of SaslTransport.get_IsSecure()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Sasl.Fakes.ShimSaslTransport.AllInstances.LocalEndPointGet">
            <summary>Sets the shim of SaslTransport.get_LocalEndPoint()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Sasl.Fakes.ShimSaslTransport.AllInstances.OnNegotiationFailException">
            <summary>Sets the shim of SaslTransport.OnNegotiationFail(Exception exception)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Sasl.Fakes.ShimSaslTransport.AllInstances.OnNegotiationSucceedIPrincipal">
            <summary>Sets the shim of SaslTransport.OnNegotiationSucceed(IPrincipal principal)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Sasl.Fakes.ShimSaslTransport.AllInstances.OpenInternal">
            <summary>Sets the shim of SaslTransport.OpenInternal()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Sasl.Fakes.ShimSaslTransport.AllInstances.ReadAsyncTransportAsyncCallbackArgs">
            <summary>Sets the shim of SaslTransport.ReadAsync(TransportAsyncCallbackArgs args)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Sasl.Fakes.ShimSaslTransport.AllInstances.RemoteEndPointGet">
            <summary>Sets the shim of SaslTransport.get_RemoteEndPoint()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Sasl.Fakes.ShimSaslTransport.AllInstances.RequiresCompleteFramesGet">
            <summary>Sets the shim of SaslTransport.get_RequiresCompleteFrames()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Sasl.Fakes.ShimSaslTransport.AllInstances.SetMonitorITransportMonitor">
            <summary>Sets the shim of SaslTransport.SetMonitor(ITransportMonitor usageMeter)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Sasl.Fakes.ShimSaslTransport.AllInstances.WriteAsyncTransportAsyncCallbackArgs">
            <summary>Sets the shim of SaslTransport.WriteAsync(TransportAsyncCallbackArgs args)</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Sasl.Fakes.ShimSaslTransport.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Sasl.Fakes.ShimSaslTransport.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Sasl.Fakes.ShimSaslTransport.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Sasl.Fakes.ShimSaslTransport.CloseInternal">
            <summary>Sets the shim of SaslTransport.CloseInternal()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Sasl.Fakes.ShimSaslTransport.ConstructorTransportBaseSaslTransportProviderBoolean">
            <summary>Sets the shim of SaslTransport.SaslTransport(TransportBase transport, SaslTransportProvider provider, Boolean isInitiator)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Sasl.Fakes.ShimSaslTransport.IsSecureGet">
            <summary>Sets the shim of SaslTransport.get_IsSecure()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Sasl.Fakes.ShimSaslTransport.LocalEndPointGet">
            <summary>Sets the shim of SaslTransport.get_LocalEndPoint()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Sasl.Fakes.ShimSaslTransport.OnNegotiationFailException">
            <summary>Sets the shim of SaslTransport.OnNegotiationFail(Exception exception)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Sasl.Fakes.ShimSaslTransport.OnNegotiationSucceedIPrincipal">
            <summary>Sets the shim of SaslTransport.OnNegotiationSucceed(IPrincipal principal)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Sasl.Fakes.ShimSaslTransport.OpenInternal">
            <summary>Sets the shim of SaslTransport.OpenInternal()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Sasl.Fakes.ShimSaslTransport.ReadAsyncTransportAsyncCallbackArgs">
            <summary>Sets the shim of SaslTransport.ReadAsync(TransportAsyncCallbackArgs args)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Sasl.Fakes.ShimSaslTransport.RemoteEndPointGet">
            <summary>Sets the shim of SaslTransport.get_RemoteEndPoint()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Sasl.Fakes.ShimSaslTransport.RequiresCompleteFramesGet">
            <summary>Sets the shim of SaslTransport.get_RequiresCompleteFrames()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Sasl.Fakes.ShimSaslTransport.SetMonitorITransportMonitor">
            <summary>Sets the shim of SaslTransport.SetMonitor(ITransportMonitor usageMeter)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Sasl.Fakes.ShimSaslTransport.WriteAsyncTransportAsyncCallbackArgs">
            <summary>Sets the shim of SaslTransport.WriteAsync(TransportAsyncCallbackArgs args)</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Sasl.Fakes.ShimSaslTransportProvider">
            <summary>Shim type of Microsoft.Azure.Amqp.Sasl.SaslTransportProvider</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Sasl.Fakes.ShimSaslTransportProvider.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Sasl.Fakes.ShimSaslTransportProvider.#ctor(Microsoft.Azure.Amqp.Sasl.SaslTransportProvider)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Sasl.Fakes.ShimSaslTransportProvider.AddHandlerSaslHandler">
            <summary>Sets the shim of SaslTransportProvider.AddHandler(SaslHandler handler)</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Sasl.Fakes.ShimSaslTransportProvider.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Sasl.Fakes.ShimSaslTransportProvider.AllInstances.AddHandlerSaslHandler">
            <summary>Sets the shim of SaslTransportProvider.AddHandler(SaslHandler handler)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Sasl.Fakes.ShimSaslTransportProvider.AllInstances.GetHandlerStringBoolean">
            <summary>Sets the shim of SaslTransportProvider.GetHandler(String mechanism, Boolean clone)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Sasl.Fakes.ShimSaslTransportProvider.AllInstances.MaxFrameSizeGet">
            <summary>Sets the shim of SaslTransportProvider.get_MaxFrameSize()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Sasl.Fakes.ShimSaslTransportProvider.AllInstances.MaxFrameSizeSetInt32">
            <summary>Sets the shim of SaslTransportProvider.set_MaxFrameSize(Int32 value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Sasl.Fakes.ShimSaslTransportProvider.AllInstances.MechanismsGet">
            <summary>Sets the shim of SaslTransportProvider.get_Mechanisms()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Sasl.Fakes.ShimSaslTransportProvider.AllInstances.OnCreateTransportTransportBaseBoolean">
            <summary>Sets the shim of SaslTransportProvider.OnCreateTransport(TransportBase innerTransport, Boolean isInitiator)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Sasl.Fakes.ShimSaslTransportProvider.AllInstances.ToString01">
            <summary>Sets the shim of SaslTransportProvider.ToString()</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Sasl.Fakes.ShimSaslTransportProvider.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Sasl.Fakes.ShimSaslTransportProvider.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Sasl.Fakes.ShimSaslTransportProvider.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Sasl.Fakes.ShimSaslTransportProvider.Constructor">
            <summary>Sets the shim of SaslTransportProvider.SaslTransportProvider()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Sasl.Fakes.ShimSaslTransportProvider.GetHandlerStringBoolean">
            <summary>Sets the shim of SaslTransportProvider.GetHandler(String mechanism, Boolean clone)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Sasl.Fakes.ShimSaslTransportProvider.MaxFrameSizeGet">
            <summary>Sets the shim of SaslTransportProvider.get_MaxFrameSize()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Sasl.Fakes.ShimSaslTransportProvider.MaxFrameSizeSetInt32">
            <summary>Sets the shim of SaslTransportProvider.set_MaxFrameSize(Int32 value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Sasl.Fakes.ShimSaslTransportProvider.MechanismsGet">
            <summary>Sets the shim of SaslTransportProvider.get_Mechanisms()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Sasl.Fakes.ShimSaslTransportProvider.OnCreateTransportTransportBaseBoolean">
            <summary>Sets the shim of SaslTransportProvider.OnCreateTransport(TransportBase innerTransport, Boolean isInitiator)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Sasl.Fakes.ShimSaslTransportProvider.ToString">
            <summary>Sets the shim of SaslTransportProvider.ToString()</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Sasl.Fakes.StubISaslPlainAuthenticator">
            <summary>Stub type of Microsoft.Azure.Amqp.Sasl.ISaslPlainAuthenticator</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Sasl.Fakes.StubISaslPlainAuthenticator.#ctor">
            <summary>Initializes a new instance of type StubISaslPlainAuthenticator</summary>
        </member>
        <member name="F:Microsoft.Azure.Amqp.Sasl.Fakes.StubISaslPlainAuthenticator.AuthenticateAsyncStringString">
            <summary>Sets the stub of ISaslPlainAuthenticator.AuthenticateAsync(String identity, String password)</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Sasl.Fakes.StubISaslPlainAuthenticator.Microsoft#Azure#Amqp#Sasl#ISaslPlainAuthenticator#AuthenticateAsync(System.String,System.String)">
            <summary>Sets the stub of ISaslPlainAuthenticator.AuthenticateAsync(String identity, String password)</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Sasl.Fakes.StubSaslExternalHandler">
            <summary>Stub type of Microsoft.Azure.Amqp.Sasl.SaslExternalHandler</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Sasl.Fakes.StubSaslExternalHandler.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Sasl.Fakes.StubSaslExternalHandler.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Sasl.Fakes.StubSaslExternalHandler.Clone">
            <summary>Sets the stub of SaslExternalHandler.Clone()</summary>
        </member>
        <member name="F:Microsoft.Azure.Amqp.Sasl.Fakes.StubSaslExternalHandler.Clone01">
            <summary>Sets the stub of SaslExternalHandler.Clone()</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Sasl.Fakes.StubSaslExternalHandler.InitializeStub">
            <summary>Initializes a new instance of type StubSaslExternalHandler</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Sasl.Fakes.StubSaslExternalHandler.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Sasl.Fakes.StubSaslExternalHandler.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Sasl.Fakes.StubSaslExternalHandler.OnChallenge(Microsoft.Azure.Amqp.Sasl.SaslChallenge)">
            <summary>Sets the stub of SaslExternalHandler.OnChallenge(SaslChallenge challenge)</summary>
        </member>
        <member name="F:Microsoft.Azure.Amqp.Sasl.Fakes.StubSaslExternalHandler.OnChallengeSaslChallenge">
            <summary>Sets the stub of SaslExternalHandler.OnChallenge(SaslChallenge challenge)</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Sasl.Fakes.StubSaslExternalHandler.OnResponse(Microsoft.Azure.Amqp.Sasl.SaslResponse)">
            <summary>Sets the stub of SaslExternalHandler.OnResponse(SaslResponse response)</summary>
        </member>
        <member name="F:Microsoft.Azure.Amqp.Sasl.Fakes.StubSaslExternalHandler.OnResponseSaslResponse">
            <summary>Sets the stub of SaslExternalHandler.OnResponse(SaslResponse response)</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Sasl.Fakes.StubSaslExternalHandler.OnStart(Microsoft.Azure.Amqp.Sasl.SaslInit,System.Boolean)">
            <summary>Sets the stub of SaslExternalHandler.OnStart(SaslInit init, Boolean isClient)</summary>
        </member>
        <member name="F:Microsoft.Azure.Amqp.Sasl.Fakes.StubSaslExternalHandler.OnStartSaslInitBoolean">
            <summary>Sets the stub of SaslExternalHandler.OnStart(SaslInit init, Boolean isClient)</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Sasl.Fakes.StubSaslExternalHandler.ToString">
            <summary>Sets the stub of SaslHandler.ToString()</summary>
        </member>
        <member name="F:Microsoft.Azure.Amqp.Sasl.Fakes.StubSaslExternalHandler.ToString01">
            <summary>Sets the stub of SaslHandler.ToString()</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Sasl.Fakes.StubSaslHandler">
            <summary>Stub type of Microsoft.Azure.Amqp.Sasl.SaslHandler</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Sasl.Fakes.StubSaslHandler.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Sasl.Fakes.StubSaslHandler.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Sasl.Fakes.StubSaslHandler.Clone">
            <summary>Sets the stub of SaslHandler.Clone()</summary>
        </member>
        <member name="F:Microsoft.Azure.Amqp.Sasl.Fakes.StubSaslHandler.Clone01">
            <summary>Sets the stub of SaslHandler.Clone()</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Sasl.Fakes.StubSaslHandler.InitializeStub">
            <summary>Initializes a new instance of type StubSaslHandler</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Sasl.Fakes.StubSaslHandler.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Sasl.Fakes.StubSaslHandler.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Sasl.Fakes.StubSaslHandler.OnChallenge(Microsoft.Azure.Amqp.Sasl.SaslChallenge)">
            <summary>Sets the stub of SaslHandler.OnChallenge(SaslChallenge challenge)</summary>
        </member>
        <member name="F:Microsoft.Azure.Amqp.Sasl.Fakes.StubSaslHandler.OnChallengeSaslChallenge">
            <summary>Sets the stub of SaslHandler.OnChallenge(SaslChallenge challenge)</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Sasl.Fakes.StubSaslHandler.OnResponse(Microsoft.Azure.Amqp.Sasl.SaslResponse)">
            <summary>Sets the stub of SaslHandler.OnResponse(SaslResponse response)</summary>
        </member>
        <member name="F:Microsoft.Azure.Amqp.Sasl.Fakes.StubSaslHandler.OnResponseSaslResponse">
            <summary>Sets the stub of SaslHandler.OnResponse(SaslResponse response)</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Sasl.Fakes.StubSaslHandler.OnStart(Microsoft.Azure.Amqp.Sasl.SaslInit,System.Boolean)">
            <summary>Sets the stub of SaslHandler.OnStart(SaslInit init, Boolean isClient)</summary>
        </member>
        <member name="F:Microsoft.Azure.Amqp.Sasl.Fakes.StubSaslHandler.OnStartSaslInitBoolean">
            <summary>Sets the stub of SaslHandler.OnStart(SaslInit init, Boolean isClient)</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Sasl.Fakes.StubSaslHandler.ToString">
            <summary>Sets the stub of SaslHandler.ToString()</summary>
        </member>
        <member name="F:Microsoft.Azure.Amqp.Sasl.Fakes.StubSaslHandler.ToString01">
            <summary>Sets the stub of SaslHandler.ToString()</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Serialization.Fakes.ShimAmqpContractAttribute">
            <summary>Shim type of Microsoft.Azure.Amqp.Serialization.AmqpContractAttribute</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Serialization.Fakes.ShimAmqpContractAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Serialization.Fakes.ShimAmqpContractAttribute.#ctor(Microsoft.Azure.Amqp.Serialization.AmqpContractAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Serialization.Fakes.ShimAmqpContractAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Serialization.Fakes.ShimAmqpContractAttribute.AllInstances.CodeGet">
            <summary>Sets the shim of AmqpContractAttribute.get_Code()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Serialization.Fakes.ShimAmqpContractAttribute.AllInstances.CodeSetInt64">
            <summary>Sets the shim of AmqpContractAttribute.set_Code(Int64 value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Serialization.Fakes.ShimAmqpContractAttribute.AllInstances.EncodingGet">
            <summary>Sets the shim of AmqpContractAttribute.get_Encoding()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Serialization.Fakes.ShimAmqpContractAttribute.AllInstances.EncodingSetEncodingType">
            <summary>Sets the shim of AmqpContractAttribute.set_Encoding(EncodingType value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Serialization.Fakes.ShimAmqpContractAttribute.AllInstances.InternalCodeGet">
            <summary>Sets the shim of AmqpContractAttribute.get_InternalCode()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Serialization.Fakes.ShimAmqpContractAttribute.AllInstances.NameGet">
            <summary>Sets the shim of AmqpContractAttribute.get_Name()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Serialization.Fakes.ShimAmqpContractAttribute.AllInstances.NameSetString">
            <summary>Sets the shim of AmqpContractAttribute.set_Name(String value)</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Serialization.Fakes.ShimAmqpContractAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Serialization.Fakes.ShimAmqpContractAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Serialization.Fakes.ShimAmqpContractAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Serialization.Fakes.ShimAmqpContractAttribute.CodeGet">
            <summary>Sets the shim of AmqpContractAttribute.get_Code()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Serialization.Fakes.ShimAmqpContractAttribute.CodeSetInt64">
            <summary>Sets the shim of AmqpContractAttribute.set_Code(Int64 value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Serialization.Fakes.ShimAmqpContractAttribute.Constructor">
            <summary>Sets the shim of AmqpContractAttribute.AmqpContractAttribute()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Serialization.Fakes.ShimAmqpContractAttribute.EncodingGet">
            <summary>Sets the shim of AmqpContractAttribute.get_Encoding()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Serialization.Fakes.ShimAmqpContractAttribute.EncodingSetEncodingType">
            <summary>Sets the shim of AmqpContractAttribute.set_Encoding(EncodingType value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Serialization.Fakes.ShimAmqpContractAttribute.InternalCodeGet">
            <summary>Sets the shim of AmqpContractAttribute.get_InternalCode()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Serialization.Fakes.ShimAmqpContractAttribute.NameGet">
            <summary>Sets the shim of AmqpContractAttribute.get_Name()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Serialization.Fakes.ShimAmqpContractAttribute.NameSetString">
            <summary>Sets the shim of AmqpContractAttribute.set_Name(String value)</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Serialization.Fakes.ShimAmqpContractSerializer">
            <summary>Shim type of Microsoft.Azure.Amqp.Serialization.AmqpContractSerializer</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Serialization.Fakes.ShimAmqpContractSerializer.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Serialization.Fakes.ShimAmqpContractSerializer.#ctor(Microsoft.Azure.Amqp.Serialization.AmqpContractSerializer)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Serialization.Fakes.ShimAmqpContractSerializer.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Serialization.Fakes.ShimAmqpContractSerializer.AllInstances.CompileNonContractTypesType">
            <summary>Sets the shim of AmqpContractSerializer.CompileNonContractTypes(Type type)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Serialization.Fakes.ShimAmqpContractSerializer.AllInstances.CompileTypeTypeBoolean">
            <summary>Sets the shim of AmqpContractSerializer.CompileType(Type type, Boolean describedOnly)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Serialization.Fakes.ShimAmqpContractSerializer.AllInstances.GetOrCompileTypeTypeBoolean">
            <summary>Sets the shim of AmqpContractSerializer.GetOrCompileType(Type type, Boolean describedOnly)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Serialization.Fakes.ShimAmqpContractSerializer.AllInstances.GetTypeType">
            <summary>Sets the shim of AmqpContractSerializer.GetType(Type type)</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Serialization.Fakes.ShimAmqpContractSerializer.AllInstances.ReadObjectInternalOf1ByteBuffer``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Microsoft.Azure.Amqp.Serialization.AmqpContractSerializer,Microsoft.Azure.Amqp.ByteBuffer,``0})">
            <summary>Sets the shim of AmqpContractSerializer.ReadObjectInternal(ByteBuffer buffer)</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Serialization.Fakes.ShimAmqpContractSerializer.AllInstances.ReadObjectInternalOf1Stream``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Microsoft.Azure.Amqp.Serialization.AmqpContractSerializer,System.IO.Stream,``0})">
            <summary>Sets the shim of AmqpContractSerializer.ReadObjectInternal(Stream stream)</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Serialization.Fakes.ShimAmqpContractSerializer.AllInstances.ReadObjectInternalOf2ByteBuffer``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Microsoft.Azure.Amqp.Serialization.AmqpContractSerializer,Microsoft.Azure.Amqp.ByteBuffer,``1})">
            <summary>Sets the shim of AmqpContractSerializer.ReadObjectInternal(ByteBuffer buffer)</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Serialization.Fakes.ShimAmqpContractSerializer.AllInstances.ReadObjectInternalOf2Stream``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Microsoft.Azure.Amqp.Serialization.AmqpContractSerializer,System.IO.Stream,``1})">
            <summary>Sets the shim of AmqpContractSerializer.ReadObjectInternal(Stream stream)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Serialization.Fakes.ShimAmqpContractSerializer.AllInstances.TryGetSerializableTypeTypeSerializableTypeOut">
            <summary>Sets the shim of AmqpContractSerializer.TryGetSerializableType(Type type, SerializableType&amp; serializableType)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Serialization.Fakes.ShimAmqpContractSerializer.AllInstances.WriteObjectInternalByteBufferObject">
            <summary>Sets the shim of AmqpContractSerializer.WriteObjectInternal(ByteBuffer buffer, Object graph)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Serialization.Fakes.ShimAmqpContractSerializer.AllInstances.WriteObjectInternalStreamObject">
            <summary>Sets the shim of AmqpContractSerializer.WriteObjectInternal(Stream stream, Object graph)</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Serialization.Fakes.ShimAmqpContractSerializer.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Serialization.Fakes.ShimAmqpContractSerializer.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Serialization.Fakes.ShimAmqpContractSerializer.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Serialization.Fakes.ShimAmqpContractSerializer.CompileNonContractTypesType">
            <summary>Sets the shim of AmqpContractSerializer.CompileNonContractTypes(Type type)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Serialization.Fakes.ShimAmqpContractSerializer.CompileTypeTypeBoolean">
            <summary>Sets the shim of AmqpContractSerializer.CompileType(Type type, Boolean describedOnly)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Serialization.Fakes.ShimAmqpContractSerializer.Constructor">
            <summary>Sets the shim of AmqpContractSerializer.AmqpContractSerializer()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Serialization.Fakes.ShimAmqpContractSerializer.ConstructorFuncOfTypeSerializableType">
            <summary>Sets the shim of AmqpContractSerializer.AmqpContractSerializer(Func`2&lt;Type,SerializableType&gt; compiler)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Serialization.Fakes.ShimAmqpContractSerializer.GetOrCompileTypeTypeBoolean">
            <summary>Sets the shim of AmqpContractSerializer.GetOrCompileType(Type type, Boolean describedOnly)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Serialization.Fakes.ShimAmqpContractSerializer.GetTypeType">
            <summary>Sets the shim of AmqpContractSerializer.GetType(Type type)</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Serialization.Fakes.ShimAmqpContractSerializer.ReadObjectInternalOf1ByteBuffer``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Microsoft.Azure.Amqp.ByteBuffer,``0})">
            <summary>Sets the shim of AmqpContractSerializer.ReadObjectInternal(ByteBuffer buffer)</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Serialization.Fakes.ShimAmqpContractSerializer.ReadObjectInternalOf1Stream``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.IO.Stream,``0})">
            <summary>Sets the shim of AmqpContractSerializer.ReadObjectInternal(Stream stream)</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Serialization.Fakes.ShimAmqpContractSerializer.ReadObjectInternalOf2ByteBuffer``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Microsoft.Azure.Amqp.ByteBuffer,``1})">
            <summary>Sets the shim of AmqpContractSerializer.ReadObjectInternal(ByteBuffer buffer)</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Serialization.Fakes.ShimAmqpContractSerializer.ReadObjectInternalOf2Stream``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.IO.Stream,``1})">
            <summary>Sets the shim of AmqpContractSerializer.ReadObjectInternal(Stream stream)</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Serialization.Fakes.ShimAmqpContractSerializer.ReadObjectOf1Stream``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.IO.Stream,``0})">
            <summary>Sets the shim of AmqpContractSerializer.ReadObject(Stream stream)</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Serialization.Fakes.ShimAmqpContractSerializer.ReadObjectOf2Stream``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.IO.Stream,``1})">
            <summary>Sets the shim of AmqpContractSerializer.ReadObject(Stream stream)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Serialization.Fakes.ShimAmqpContractSerializer.StaticConstructor">
            <summary>Sets the shim of AmqpContractSerializer.AmqpContractSerializer()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Serialization.Fakes.ShimAmqpContractSerializer.TryGetSerializableTypeTypeSerializableTypeOut">
            <summary>Sets the shim of AmqpContractSerializer.TryGetSerializableType(Type type, SerializableType&amp; serializableType)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Serialization.Fakes.ShimAmqpContractSerializer.WriteObjectInternalByteBufferObject">
            <summary>Sets the shim of AmqpContractSerializer.WriteObjectInternal(ByteBuffer buffer, Object graph)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Serialization.Fakes.ShimAmqpContractSerializer.WriteObjectInternalStreamObject">
            <summary>Sets the shim of AmqpContractSerializer.WriteObjectInternal(Stream stream, Object graph)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Serialization.Fakes.ShimAmqpContractSerializer.WriteObjectStreamObject">
            <summary>Sets the shim of AmqpContractSerializer.WriteObject(Stream stream, Object graph)</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Serialization.Fakes.ShimAmqpMemberAttribute">
            <summary>Shim type of Microsoft.Azure.Amqp.Serialization.AmqpMemberAttribute</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Serialization.Fakes.ShimAmqpMemberAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Serialization.Fakes.ShimAmqpMemberAttribute.#ctor(Microsoft.Azure.Amqp.Serialization.AmqpMemberAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Serialization.Fakes.ShimAmqpMemberAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Serialization.Fakes.ShimAmqpMemberAttribute.AllInstances.InternalMandatoryGet">
            <summary>Sets the shim of AmqpMemberAttribute.get_InternalMandatory()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Serialization.Fakes.ShimAmqpMemberAttribute.AllInstances.InternalOrderGet">
            <summary>Sets the shim of AmqpMemberAttribute.get_InternalOrder()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Serialization.Fakes.ShimAmqpMemberAttribute.AllInstances.MandatoryGet">
            <summary>Sets the shim of AmqpMemberAttribute.get_Mandatory()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Serialization.Fakes.ShimAmqpMemberAttribute.AllInstances.MandatorySetBoolean">
            <summary>Sets the shim of AmqpMemberAttribute.set_Mandatory(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Serialization.Fakes.ShimAmqpMemberAttribute.AllInstances.NameGet">
            <summary>Sets the shim of AmqpMemberAttribute.get_Name()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Serialization.Fakes.ShimAmqpMemberAttribute.AllInstances.NameSetString">
            <summary>Sets the shim of AmqpMemberAttribute.set_Name(String value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Serialization.Fakes.ShimAmqpMemberAttribute.AllInstances.OrderGet">
            <summary>Sets the shim of AmqpMemberAttribute.get_Order()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Serialization.Fakes.ShimAmqpMemberAttribute.AllInstances.OrderSetInt32">
            <summary>Sets the shim of AmqpMemberAttribute.set_Order(Int32 value)</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Serialization.Fakes.ShimAmqpMemberAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Serialization.Fakes.ShimAmqpMemberAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Serialization.Fakes.ShimAmqpMemberAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Serialization.Fakes.ShimAmqpMemberAttribute.Constructor">
            <summary>Sets the shim of AmqpMemberAttribute.AmqpMemberAttribute()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Serialization.Fakes.ShimAmqpMemberAttribute.InternalMandatoryGet">
            <summary>Sets the shim of AmqpMemberAttribute.get_InternalMandatory()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Serialization.Fakes.ShimAmqpMemberAttribute.InternalOrderGet">
            <summary>Sets the shim of AmqpMemberAttribute.get_InternalOrder()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Serialization.Fakes.ShimAmqpMemberAttribute.MandatoryGet">
            <summary>Sets the shim of AmqpMemberAttribute.get_Mandatory()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Serialization.Fakes.ShimAmqpMemberAttribute.MandatorySetBoolean">
            <summary>Sets the shim of AmqpMemberAttribute.set_Mandatory(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Serialization.Fakes.ShimAmqpMemberAttribute.NameGet">
            <summary>Sets the shim of AmqpMemberAttribute.get_Name()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Serialization.Fakes.ShimAmqpMemberAttribute.NameSetString">
            <summary>Sets the shim of AmqpMemberAttribute.set_Name(String value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Serialization.Fakes.ShimAmqpMemberAttribute.OrderGet">
            <summary>Sets the shim of AmqpMemberAttribute.get_Order()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Serialization.Fakes.ShimAmqpMemberAttribute.OrderSetInt32">
            <summary>Sets the shim of AmqpMemberAttribute.set_Order(Int32 value)</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Serialization.Fakes.ShimMemberAccessor">
            <summary>Shim type of Microsoft.Azure.Amqp.Serialization.MemberAccessor</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Serialization.Fakes.ShimMemberAccessor.#ctor(Microsoft.Azure.Amqp.Serialization.MemberAccessor)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Serialization.Fakes.ShimMemberAccessor.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Serialization.Fakes.ShimMemberAccessor.AllInstances.GetObject">
            <summary>Sets the shim of MemberAccessor.Get(Object container)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Serialization.Fakes.ShimMemberAccessor.AllInstances.SetObjectObject">
            <summary>Sets the shim of MemberAccessor.Set(Object container, Object value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Serialization.Fakes.ShimMemberAccessor.AllInstances.TypeGet">
            <summary>Sets the shim of MemberAccessor.get_Type()</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Serialization.Fakes.ShimMemberAccessor.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Serialization.Fakes.ShimMemberAccessor.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Serialization.Fakes.ShimMemberAccessor.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Serialization.Fakes.ShimMemberAccessor.ConstructorType">
            <summary>Sets the shim of MemberAccessor.MemberAccessor(Type type)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Serialization.Fakes.ShimMemberAccessor.CreateMemberInfoBoolean">
            <summary>Sets the shim of MemberAccessor.Create(MemberInfo memberInfo, Boolean requiresSetter)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Serialization.Fakes.ShimMemberAccessor.EmitCallILGeneratorMethodInfo">
            <summary>Sets the shim of MemberAccessor.EmitCall(ILGenerator generator, MethodInfo method)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Serialization.Fakes.ShimMemberAccessor.EmitTypeConversionILGeneratorTypeBoolean">
            <summary>Sets the shim of MemberAccessor.EmitTypeConversion(ILGenerator generator, Type castType, Boolean isContainer)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Serialization.Fakes.ShimMemberAccessor.GetAccessorNameBooleanString">
            <summary>Sets the shim of MemberAccessor.GetAccessorName(Boolean isGetter, String name)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Serialization.Fakes.ShimMemberAccessor.GetObject">
            <summary>Sets the shim of MemberAccessor.Get(Object container)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Serialization.Fakes.ShimMemberAccessor.SetObjectObject">
            <summary>Sets the shim of MemberAccessor.Set(Object container, Object value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Serialization.Fakes.ShimMemberAccessor.TypeGet">
            <summary>Sets the shim of MemberAccessor.get_Type()</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Serialization.Fakes.ShimMethodAccessor">
            <summary>Shim type of Microsoft.Azure.Amqp.Serialization.MethodAccessor</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Serialization.Fakes.ShimMethodAccessor.#ctor(Microsoft.Azure.Amqp.Serialization.MethodAccessor)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Serialization.Fakes.ShimMethodAccessor.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Serialization.Fakes.ShimMethodAccessor.AllInstances.GetParametersTypeParameterInfoArray">
            <summary>Sets the shim of MethodAccessor.GetParametersType(ParameterInfo[] paramsInfo)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Serialization.Fakes.ShimMethodAccessor.AllInstances.InvokeObjectArray">
            <summary>Sets the shim of MethodAccessor.Invoke(Object[] parameters)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Serialization.Fakes.ShimMethodAccessor.AllInstances.InvokeObjectObjectArray">
            <summary>Sets the shim of MethodAccessor.Invoke(Object container, Object[] parameters)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Serialization.Fakes.ShimMethodAccessor.AllInstances.LoadArgumentsILGeneratorTypeArray">
            <summary>Sets the shim of MethodAccessor.LoadArguments(ILGenerator generator, Type[] paramsType)</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Serialization.Fakes.ShimMethodAccessor.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Serialization.Fakes.ShimMethodAccessor.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Serialization.Fakes.ShimMethodAccessor.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Serialization.Fakes.ShimMethodAccessor.Constructor">
            <summary>Sets the shim of MethodAccessor.MethodAccessor()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Serialization.Fakes.ShimMethodAccessor.CreateConstructorInfo">
            <summary>Sets the shim of MethodAccessor.Create(ConstructorInfo constructorInfo)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Serialization.Fakes.ShimMethodAccessor.CreateMethodInfo">
            <summary>Sets the shim of MethodAccessor.Create(MethodInfo methodInfo)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Serialization.Fakes.ShimMethodAccessor.GetParametersTypeParameterInfoArray">
            <summary>Sets the shim of MethodAccessor.GetParametersType(ParameterInfo[] paramsInfo)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Serialization.Fakes.ShimMethodAccessor.InvokeObjectArray">
            <summary>Sets the shim of MethodAccessor.Invoke(Object[] parameters)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Serialization.Fakes.ShimMethodAccessor.InvokeObjectObjectArray">
            <summary>Sets the shim of MethodAccessor.Invoke(Object container, Object[] parameters)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Serialization.Fakes.ShimMethodAccessor.LoadArgumentsILGeneratorTypeArray">
            <summary>Sets the shim of MethodAccessor.LoadArguments(ILGenerator generator, Type[] paramsType)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Serialization.Fakes.ShimMethodAccessor.StaticConstructor">
            <summary>Sets the shim of MethodAccessor.MethodAccessor()</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Serialization.Fakes.ShimSerialiableMember">
            <summary>Shim type of Microsoft.Azure.Amqp.Serialization.SerialiableMember</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Serialization.Fakes.ShimSerialiableMember.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Serialization.Fakes.ShimSerialiableMember.#ctor(Microsoft.Azure.Amqp.Serialization.SerialiableMember)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Serialization.Fakes.ShimSerialiableMember.AccessorGet">
            <summary>Sets the shim of SerialiableMember.get_Accessor()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Serialization.Fakes.ShimSerialiableMember.AccessorSetMemberAccessor">
            <summary>Sets the shim of SerialiableMember.set_Accessor(MemberAccessor value)</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Serialization.Fakes.ShimSerialiableMember.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Serialization.Fakes.ShimSerialiableMember.AllInstances.AccessorGet">
            <summary>Sets the shim of SerialiableMember.get_Accessor()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Serialization.Fakes.ShimSerialiableMember.AllInstances.AccessorSetMemberAccessor">
            <summary>Sets the shim of SerialiableMember.set_Accessor(MemberAccessor value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Serialization.Fakes.ShimSerialiableMember.AllInstances.MandatoryGet">
            <summary>Sets the shim of SerialiableMember.get_Mandatory()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Serialization.Fakes.ShimSerialiableMember.AllInstances.MandatorySetBoolean">
            <summary>Sets the shim of SerialiableMember.set_Mandatory(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Serialization.Fakes.ShimSerialiableMember.AllInstances.NameGet">
            <summary>Sets the shim of SerialiableMember.get_Name()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Serialization.Fakes.ShimSerialiableMember.AllInstances.NameSetString">
            <summary>Sets the shim of SerialiableMember.set_Name(String value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Serialization.Fakes.ShimSerialiableMember.AllInstances.OrderGet">
            <summary>Sets the shim of SerialiableMember.get_Order()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Serialization.Fakes.ShimSerialiableMember.AllInstances.OrderSetInt32">
            <summary>Sets the shim of SerialiableMember.set_Order(Int32 value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Serialization.Fakes.ShimSerialiableMember.AllInstances.TypeGet">
            <summary>Sets the shim of SerialiableMember.get_Type()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Serialization.Fakes.ShimSerialiableMember.AllInstances.TypeSetSerializableType">
            <summary>Sets the shim of SerialiableMember.set_Type(SerializableType value)</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Serialization.Fakes.ShimSerialiableMember.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Serialization.Fakes.ShimSerialiableMember.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Serialization.Fakes.ShimSerialiableMember.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Serialization.Fakes.ShimSerialiableMember.Constructor">
            <summary>Sets the shim of SerialiableMember.SerialiableMember()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Serialization.Fakes.ShimSerialiableMember.MandatoryGet">
            <summary>Sets the shim of SerialiableMember.get_Mandatory()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Serialization.Fakes.ShimSerialiableMember.MandatorySetBoolean">
            <summary>Sets the shim of SerialiableMember.set_Mandatory(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Serialization.Fakes.ShimSerialiableMember.NameGet">
            <summary>Sets the shim of SerialiableMember.get_Name()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Serialization.Fakes.ShimSerialiableMember.NameSetString">
            <summary>Sets the shim of SerialiableMember.set_Name(String value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Serialization.Fakes.ShimSerialiableMember.OrderGet">
            <summary>Sets the shim of SerialiableMember.get_Order()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Serialization.Fakes.ShimSerialiableMember.OrderSetInt32">
            <summary>Sets the shim of SerialiableMember.set_Order(Int32 value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Serialization.Fakes.ShimSerialiableMember.TypeGet">
            <summary>Sets the shim of SerialiableMember.get_Type()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Serialization.Fakes.ShimSerialiableMember.TypeSetSerializableType">
            <summary>Sets the shim of SerialiableMember.set_Type(SerializableType value)</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Serialization.Fakes.ShimSerializableType">
            <summary>Shim type of Microsoft.Azure.Amqp.Serialization.SerializableType</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Serialization.Fakes.ShimSerializableType.#ctor(Microsoft.Azure.Amqp.Serialization.SerializableType)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Serialization.Fakes.ShimSerializableType.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Serialization.Fakes.ShimSerializableType.AllInstances.AmqpTypeGet">
            <summary>Sets the shim of SerializableType.get_AmqpType()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Serialization.Fakes.ShimSerializableType.AllInstances.AmqpTypeSetAmqpType">
            <summary>Sets the shim of SerializableType.set_AmqpType(AmqpType value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Serialization.Fakes.ShimSerializableType.AllInstances.CreateInstance">
            <summary>Sets the shim of SerializableType.CreateInstance()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Serialization.Fakes.ShimSerializableType.AllInstances.FinalGet">
            <summary>Sets the shim of SerializableType.get_Final()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Serialization.Fakes.ShimSerializableType.AllInstances.FinalSetBoolean">
            <summary>Sets the shim of SerializableType.set_Final(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Serialization.Fakes.ShimSerializableType.AllInstances.UnderlyingTypeGet">
            <summary>Sets the shim of SerializableType.get_UnderlyingType()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Serialization.Fakes.ShimSerializableType.AmqpTypeGet">
            <summary>Sets the shim of SerializableType.get_AmqpType()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Serialization.Fakes.ShimSerializableType.AmqpTypeSetAmqpType">
            <summary>Sets the shim of SerializableType.set_AmqpType(AmqpType value)</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Serialization.Fakes.ShimSerializableType.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Serialization.Fakes.ShimSerializableType.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Serialization.Fakes.ShimSerializableType.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Serialization.Fakes.ShimSerializableType.ConstructorAmqpContractSerializerType">
            <summary>Sets the shim of SerializableType.SerializableType(AmqpContractSerializer serializer, Type type)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Serialization.Fakes.ShimSerializableType.CreateInstance">
            <summary>Sets the shim of SerializableType.CreateInstance()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Serialization.Fakes.ShimSerializableType.CreatePrimitiveTypeType">
            <summary>Sets the shim of SerializableType.CreatePrimitiveType(Type type)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Serialization.Fakes.ShimSerializableType.FinalGet">
            <summary>Sets the shim of SerializableType.get_Final()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Serialization.Fakes.ShimSerializableType.FinalSetBoolean">
            <summary>Sets the shim of SerializableType.set_Final(Boolean value)</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Serialization.Fakes.ShimSerializableType.ShimCollection">
            <summary>Shim type of Microsoft.Azure.Amqp.Serialization.SerializableType+Collection</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Serialization.Fakes.ShimSerializableType.ShimCollection.#ctor(Microsoft.Azure.Amqp.Serialization.SerializableType.Collection)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Serialization.Fakes.ShimSerializableType.ShimCollection.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Serialization.Fakes.ShimSerializableType.ShimCollection.AllInstances.ReadObjectByteBuffer">
            <summary>Sets the shim of Collection.ReadObject(ByteBuffer buffer)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Serialization.Fakes.ShimSerializableType.ShimCollection.AllInstances.WriteObjectByteBufferObject">
            <summary>Sets the shim of Collection.WriteObject(ByteBuffer buffer, Object graph)</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Serialization.Fakes.ShimSerializableType.ShimCollection.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Serialization.Fakes.ShimSerializableType.ShimCollection.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Serialization.Fakes.ShimSerializableType.ShimCollection.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Serialization.Fakes.ShimSerializableType.ShimCollection.ConstructorAmqpContractSerializerType">
            <summary>Sets the shim of Collection.Collection(AmqpContractSerializer serializer, Type type)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Serialization.Fakes.ShimSerializableType.ShimCollection.ReadObjectByteBuffer">
            <summary>Sets the shim of Collection.ReadObject(ByteBuffer buffer)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Serialization.Fakes.ShimSerializableType.ShimCollection.WriteObjectByteBufferObject">
            <summary>Sets the shim of Collection.WriteObject(ByteBuffer buffer, Object graph)</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Serialization.Fakes.ShimSerializableType.ShimComposite">
            <summary>Shim type of Microsoft.Azure.Amqp.Serialization.SerializableType+Composite</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Serialization.Fakes.ShimSerializableType.ShimComposite.#ctor(Microsoft.Azure.Amqp.Serialization.SerializableType.Composite)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Serialization.Fakes.ShimSerializableType.ShimComposite.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Serialization.Fakes.ShimSerializableType.ShimComposite.AllInstances.AreEqualNullableOfUInt64AmqpSymbolNullableOfUInt64AmqpSymbol">
            <summary>Sets the shim of Composite.AreEqual(Nullable`1&lt;UInt64&gt; code1, AmqpSymbol symbol1, Nullable`1&lt;UInt64&gt; code2, AmqpSymbol symbol2)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Serialization.Fakes.ShimSerializableType.ShimComposite.AllInstances.BaseTypeGet">
            <summary>Sets the shim of Composite.get_BaseType()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Serialization.Fakes.ShimSerializableType.ShimComposite.AllInstances.EncodingTypeGet">
            <summary>Sets the shim of Composite.get_EncodingType()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Serialization.Fakes.ShimSerializableType.ShimComposite.AllInstances.EncodingTypeSetEncodingType">
            <summary>Sets the shim of Composite.set_EncodingType(EncodingType value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Serialization.Fakes.ShimSerializableType.ShimComposite.AllInstances.InitializeByteBufferFormatCodeInt32OutInt32OutInt32OutSerializableTypeCollectionOut">
            <summary>Sets the shim of Composite.Initialize(ByteBuffer buffer, FormatCode formatCode, Int32&amp; size, Int32&amp; count, Int32&amp; encodeWidth, Collection&amp; effectiveType)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Serialization.Fakes.ShimSerializableType.ShimComposite.AllInstances.InvokeDeserializedObject">
            <summary>Sets the shim of Composite.InvokeDeserialized(Object container)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Serialization.Fakes.ShimSerializableType.ShimComposite.AllInstances.KnownTypesGet">
            <summary>Sets the shim of Composite.get_KnownTypes()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Serialization.Fakes.ShimSerializableType.ShimComposite.AllInstances.MembersGet">
            <summary>Sets the shim of Composite.get_Members()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Serialization.Fakes.ShimSerializableType.ShimComposite.AllInstances.NameGet">
            <summary>Sets the shim of Composite.get_Name()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Serialization.Fakes.ShimSerializableType.ShimComposite.AllInstances.WriteFormatCodeByteBuffer">
            <summary>Sets the shim of Composite.WriteFormatCode(ByteBuffer buffer)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Serialization.Fakes.ShimSerializableType.ShimComposite.AreEqualNullableOfUInt64AmqpSymbolNullableOfUInt64AmqpSymbol">
            <summary>Sets the shim of Composite.AreEqual(Nullable`1&lt;UInt64&gt; code1, AmqpSymbol symbol1, Nullable`1&lt;UInt64&gt; code2, AmqpSymbol symbol2)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Serialization.Fakes.ShimSerializableType.ShimComposite.BaseTypeGet">
            <summary>Sets the shim of Composite.get_BaseType()</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Serialization.Fakes.ShimSerializableType.ShimComposite.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Serialization.Fakes.ShimSerializableType.ShimComposite.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Serialization.Fakes.ShimSerializableType.ShimComposite.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Serialization.Fakes.ShimSerializableType.ShimComposite.ConstructorAmqpContractSerializerTypeSerializableTypeStringNullableOfUInt64SerialiableMemberArrayIListOfTypeMethodAccessor">
            <summary>Sets the shim of Composite.Composite(AmqpContractSerializer serializer, Type type, SerializableType baseType, String descriptorName, Nullable`1&lt;UInt64&gt; descriptorCode, SerialiableMember[] members, IList`1&lt;Type&gt; knownTypes, MethodAccessor onDesrialized)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Serialization.Fakes.ShimSerializableType.ShimComposite.EncodingTypeGet">
            <summary>Sets the shim of Composite.get_EncodingType()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Serialization.Fakes.ShimSerializableType.ShimComposite.EncodingTypeSetEncodingType">
            <summary>Sets the shim of Composite.set_EncodingType(EncodingType value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Serialization.Fakes.ShimSerializableType.ShimComposite.InvokeDeserializedObject">
            <summary>Sets the shim of Composite.InvokeDeserialized(Object container)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Serialization.Fakes.ShimSerializableType.ShimComposite.KnownTypesGet">
            <summary>Sets the shim of Composite.get_KnownTypes()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Serialization.Fakes.ShimSerializableType.ShimComposite.MembersGet">
            <summary>Sets the shim of Composite.get_Members()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Serialization.Fakes.ShimSerializableType.ShimComposite.NameGet">
            <summary>Sets the shim of Composite.get_Name()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Serialization.Fakes.ShimSerializableType.ShimComposite.WriteFormatCodeByteBuffer">
            <summary>Sets the shim of Composite.WriteFormatCode(ByteBuffer buffer)</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Serialization.Fakes.ShimSerializableType.ShimCompositeList">
            <summary>Shim type of Microsoft.Azure.Amqp.Serialization.SerializableType+CompositeList</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Serialization.Fakes.ShimSerializableType.ShimCompositeList.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Serialization.Fakes.ShimSerializableType.ShimCompositeList.#ctor(Microsoft.Azure.Amqp.Serialization.SerializableType.CompositeList)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Serialization.Fakes.ShimSerializableType.ShimCompositeList.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Serialization.Fakes.ShimSerializableType.ShimCompositeList.AllInstances.CodeGet">
            <summary>Sets the shim of CompositeList.get_Code()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Serialization.Fakes.ShimSerializableType.ShimCompositeList.AllInstances.ReadMembersByteBufferObjectInt32Ref">
            <summary>Sets the shim of CompositeList.ReadMembers(ByteBuffer buffer, Object container, Int32&amp; count)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Serialization.Fakes.ShimSerializableType.ShimCompositeList.AllInstances.WriteMembersByteBufferObject">
            <summary>Sets the shim of CompositeList.WriteMembers(ByteBuffer buffer, Object container)</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Serialization.Fakes.ShimSerializableType.ShimCompositeList.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Serialization.Fakes.ShimSerializableType.ShimCompositeList.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Serialization.Fakes.ShimSerializableType.ShimCompositeList.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Serialization.Fakes.ShimSerializableType.ShimCompositeList.CodeGet">
            <summary>Sets the shim of CompositeList.get_Code()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Serialization.Fakes.ShimSerializableType.ShimCompositeList.ConstructorAmqpContractSerializerTypeSerializableTypeStringNullableOfUInt64SerialiableMemberArrayIListOfTypeMethodAccessor">
            <summary>Sets the shim of CompositeList.CompositeList(AmqpContractSerializer serializer, Type type, SerializableType baseType, String descriptorName, Nullable`1&lt;UInt64&gt; descriptorCode, SerialiableMember[] members, IList`1&lt;Type&gt; knownTypes, MethodAccessor onDesrialized)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Serialization.Fakes.ShimSerializableType.ShimCompositeList.ReadMembersByteBufferObjectInt32Ref">
            <summary>Sets the shim of CompositeList.ReadMembers(ByteBuffer buffer, Object container, Int32&amp; count)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Serialization.Fakes.ShimSerializableType.ShimCompositeList.WriteMembersByteBufferObject">
            <summary>Sets the shim of CompositeList.WriteMembers(ByteBuffer buffer, Object container)</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Serialization.Fakes.ShimSerializableType.ShimCompositeMap">
            <summary>Shim type of Microsoft.Azure.Amqp.Serialization.SerializableType+CompositeMap</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Serialization.Fakes.ShimSerializableType.ShimCompositeMap.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Serialization.Fakes.ShimSerializableType.ShimCompositeMap.#ctor(Microsoft.Azure.Amqp.Serialization.SerializableType.CompositeMap)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Serialization.Fakes.ShimSerializableType.ShimCompositeMap.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Serialization.Fakes.ShimSerializableType.ShimCompositeMap.AllInstances.CodeGet">
            <summary>Sets the shim of CompositeMap.get_Code()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Serialization.Fakes.ShimSerializableType.ShimCompositeMap.AllInstances.ReadMembersByteBufferObjectInt32Ref">
            <summary>Sets the shim of CompositeMap.ReadMembers(ByteBuffer buffer, Object container, Int32&amp; count)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Serialization.Fakes.ShimSerializableType.ShimCompositeMap.AllInstances.WriteMembersByteBufferObject">
            <summary>Sets the shim of CompositeMap.WriteMembers(ByteBuffer buffer, Object container)</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Serialization.Fakes.ShimSerializableType.ShimCompositeMap.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Serialization.Fakes.ShimSerializableType.ShimCompositeMap.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Serialization.Fakes.ShimSerializableType.ShimCompositeMap.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Serialization.Fakes.ShimSerializableType.ShimCompositeMap.CodeGet">
            <summary>Sets the shim of CompositeMap.get_Code()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Serialization.Fakes.ShimSerializableType.ShimCompositeMap.ConstructorAmqpContractSerializerTypeSerializableTypeStringNullableOfUInt64SerialiableMemberArrayIListOfTypeMethodAccessor">
            <summary>Sets the shim of CompositeMap.CompositeMap(AmqpContractSerializer serializer, Type type, SerializableType baseType, String descriptorName, Nullable`1&lt;UInt64&gt; descriptorCode, SerialiableMember[] members, IList`1&lt;Type&gt; knownTypes, MethodAccessor onDesrialized)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Serialization.Fakes.ShimSerializableType.ShimCompositeMap.ReadMembersByteBufferObjectInt32Ref">
            <summary>Sets the shim of CompositeMap.ReadMembers(ByteBuffer buffer, Object container, Int32&amp; count)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Serialization.Fakes.ShimSerializableType.ShimCompositeMap.WriteMembersByteBufferObject">
            <summary>Sets the shim of CompositeMap.WriteMembers(ByteBuffer buffer, Object container)</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Serialization.Fakes.ShimSerializableType.ShimConverted">
            <summary>Shim type of Microsoft.Azure.Amqp.Serialization.SerializableType+Converted</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Serialization.Fakes.ShimSerializableType.ShimConverted.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Serialization.Fakes.ShimSerializableType.ShimConverted.#ctor(Microsoft.Azure.Amqp.Serialization.SerializableType.Converted)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Serialization.Fakes.ShimSerializableType.ShimConverted.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Serialization.Fakes.ShimSerializableType.ShimConverted.AllInstances.GetSourceObject">
            <summary>Sets the shim of Converted.GetSource(Object value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Serialization.Fakes.ShimSerializableType.ShimConverted.AllInstances.GetTargetObject">
            <summary>Sets the shim of Converted.GetTarget(Object value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Serialization.Fakes.ShimSerializableType.ShimConverted.AllInstances.ReadObjectByteBuffer">
            <summary>Sets the shim of Converted.ReadObject(ByteBuffer buffer)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Serialization.Fakes.ShimSerializableType.ShimConverted.AllInstances.WriteObjectByteBufferObject">
            <summary>Sets the shim of Converted.WriteObject(ByteBuffer buffer, Object value)</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Serialization.Fakes.ShimSerializableType.ShimConverted.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Serialization.Fakes.ShimSerializableType.ShimConverted.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Serialization.Fakes.ShimSerializableType.ShimConverted.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Serialization.Fakes.ShimSerializableType.ShimConverted.ConstructorAmqpTypeTypeTypeFuncOfObjectTypeObjectFuncOfObjectTypeObject">
            <summary>Sets the shim of Converted.Converted(AmqpType amqpType, Type source, Type target, Func`3&lt;Object,Type,Object&gt; getTarget, Func`3&lt;Object,Type,Object&gt; getSource)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Serialization.Fakes.ShimSerializableType.ShimConverted.GetSourceObject">
            <summary>Sets the shim of Converted.GetSource(Object value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Serialization.Fakes.ShimSerializableType.ShimConverted.GetTargetObject">
            <summary>Sets the shim of Converted.GetTarget(Object value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Serialization.Fakes.ShimSerializableType.ShimConverted.ReadObjectByteBuffer">
            <summary>Sets the shim of Converted.ReadObject(ByteBuffer buffer)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Serialization.Fakes.ShimSerializableType.ShimConverted.WriteObjectByteBufferObject">
            <summary>Sets the shim of Converted.WriteObject(ByteBuffer buffer, Object value)</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Serialization.Fakes.ShimSerializableType.ShimList">
            <summary>Shim type of Microsoft.Azure.Amqp.Serialization.SerializableType+List</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Serialization.Fakes.ShimSerializableType.ShimList.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Serialization.Fakes.ShimSerializableType.ShimList.#ctor(Microsoft.Azure.Amqp.Serialization.SerializableType.List)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Serialization.Fakes.ShimSerializableType.ShimList.AddGet">
            <summary>Sets the shim of List.get_Add()</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Serialization.Fakes.ShimSerializableType.ShimList.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Serialization.Fakes.ShimSerializableType.ShimList.AllInstances.AddGet">
            <summary>Sets the shim of List.get_Add()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Serialization.Fakes.ShimSerializableType.ShimList.AllInstances.InitializeByteBufferFormatCodeInt32OutInt32OutInt32OutSerializableTypeCollectionOut">
            <summary>Sets the shim of List.Initialize(ByteBuffer buffer, FormatCode formatCode, Int32&amp; size, Int32&amp; count, Int32&amp; encodeWidth, Collection&amp; effectiveType)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Serialization.Fakes.ShimSerializableType.ShimList.AllInstances.ItemTypeGet">
            <summary>Sets the shim of List.get_ItemType()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Serialization.Fakes.ShimSerializableType.ShimList.AllInstances.ReadMembersByteBufferObjectInt32Ref">
            <summary>Sets the shim of List.ReadMembers(ByteBuffer buffer, Object container, Int32&amp; count)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Serialization.Fakes.ShimSerializableType.ShimList.AllInstances.WriteFormatCodeByteBuffer">
            <summary>Sets the shim of List.WriteFormatCode(ByteBuffer buffer)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Serialization.Fakes.ShimSerializableType.ShimList.AllInstances.WriteMembersByteBufferObject">
            <summary>Sets the shim of List.WriteMembers(ByteBuffer buffer, Object container)</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Serialization.Fakes.ShimSerializableType.ShimList.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Serialization.Fakes.ShimSerializableType.ShimList.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Serialization.Fakes.ShimSerializableType.ShimList.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Serialization.Fakes.ShimSerializableType.ShimList.ConstructorAmqpContractSerializerTypeTypeMethodAccessor">
            <summary>Sets the shim of List.List(AmqpContractSerializer serializer, Type type, Type itemType, MethodAccessor addAccessor)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Serialization.Fakes.ShimSerializableType.ShimList.ItemTypeGet">
            <summary>Sets the shim of List.get_ItemType()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Serialization.Fakes.ShimSerializableType.ShimList.ReadMembersByteBufferObjectInt32Ref">
            <summary>Sets the shim of List.ReadMembers(ByteBuffer buffer, Object container, Int32&amp; count)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Serialization.Fakes.ShimSerializableType.ShimList.WriteFormatCodeByteBuffer">
            <summary>Sets the shim of List.WriteFormatCode(ByteBuffer buffer)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Serialization.Fakes.ShimSerializableType.ShimList.WriteMembersByteBufferObject">
            <summary>Sets the shim of List.WriteMembers(ByteBuffer buffer, Object container)</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Serialization.Fakes.ShimSerializableType.ShimMap">
            <summary>Shim type of Microsoft.Azure.Amqp.Serialization.SerializableType+Map</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Serialization.Fakes.ShimSerializableType.ShimMap.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Serialization.Fakes.ShimSerializableType.ShimMap.#ctor(Microsoft.Azure.Amqp.Serialization.SerializableType.Map)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Serialization.Fakes.ShimSerializableType.ShimMap.AddGet">
            <summary>Sets the shim of Map.get_Add()</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Serialization.Fakes.ShimSerializableType.ShimMap.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Serialization.Fakes.ShimSerializableType.ShimMap.AllInstances.AddGet">
            <summary>Sets the shim of Map.get_Add()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Serialization.Fakes.ShimSerializableType.ShimMap.AllInstances.InitializeByteBufferFormatCodeInt32OutInt32OutInt32OutSerializableTypeCollectionOut">
            <summary>Sets the shim of Map.Initialize(ByteBuffer buffer, FormatCode formatCode, Int32&amp; size, Int32&amp; count, Int32&amp; encodeWidth, Collection&amp; effectiveType)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Serialization.Fakes.ShimSerializableType.ShimMap.AllInstances.KeyGet">
            <summary>Sets the shim of Map.get_Key()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Serialization.Fakes.ShimSerializableType.ShimMap.AllInstances.ReadMembersByteBufferObjectInt32Ref">
            <summary>Sets the shim of Map.ReadMembers(ByteBuffer buffer, Object container, Int32&amp; count)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Serialization.Fakes.ShimSerializableType.ShimMap.AllInstances.ValueGet">
            <summary>Sets the shim of Map.get_Value()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Serialization.Fakes.ShimSerializableType.ShimMap.AllInstances.WriteFormatCodeByteBuffer">
            <summary>Sets the shim of Map.WriteFormatCode(ByteBuffer buffer)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Serialization.Fakes.ShimSerializableType.ShimMap.AllInstances.WriteMembersByteBufferObject">
            <summary>Sets the shim of Map.WriteMembers(ByteBuffer buffer, Object container)</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Serialization.Fakes.ShimSerializableType.ShimMap.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Serialization.Fakes.ShimSerializableType.ShimMap.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Serialization.Fakes.ShimSerializableType.ShimMap.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Serialization.Fakes.ShimSerializableType.ShimMap.ConstructorAmqpContractSerializerTypeMemberAccessorMemberAccessorMethodAccessor">
            <summary>Sets the shim of Map.Map(AmqpContractSerializer serializer, Type type, MemberAccessor keyAccessor, MemberAccessor valueAccessor, MethodAccessor addAccessor)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Serialization.Fakes.ShimSerializableType.ShimMap.KeyGet">
            <summary>Sets the shim of Map.get_Key()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Serialization.Fakes.ShimSerializableType.ShimMap.ReadMembersByteBufferObjectInt32Ref">
            <summary>Sets the shim of Map.ReadMembers(ByteBuffer buffer, Object container, Int32&amp; count)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Serialization.Fakes.ShimSerializableType.ShimMap.ValueGet">
            <summary>Sets the shim of Map.get_Value()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Serialization.Fakes.ShimSerializableType.ShimMap.WriteFormatCodeByteBuffer">
            <summary>Sets the shim of Map.WriteFormatCode(ByteBuffer buffer)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Serialization.Fakes.ShimSerializableType.ShimMap.WriteMembersByteBufferObject">
            <summary>Sets the shim of Map.WriteMembers(ByteBuffer buffer, Object container)</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Serialization.Fakes.ShimSerializableType.ShimObject">
            <summary>Shim type of Microsoft.Azure.Amqp.Serialization.SerializableType+Object</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Serialization.Fakes.ShimSerializableType.ShimObject.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Serialization.Fakes.ShimSerializableType.ShimObject.#ctor(Microsoft.Azure.Amqp.Serialization.SerializableType.Object)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Serialization.Fakes.ShimSerializableType.ShimObject.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Serialization.Fakes.ShimSerializableType.ShimObject.AllInstances.ReadObjectByteBuffer">
            <summary>Sets the shim of Object.ReadObject(ByteBuffer buffer)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Serialization.Fakes.ShimSerializableType.ShimObject.AllInstances.WriteObjectByteBufferObject">
            <summary>Sets the shim of Object.WriteObject(ByteBuffer buffer, Object value)</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Serialization.Fakes.ShimSerializableType.ShimObject.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Serialization.Fakes.ShimSerializableType.ShimObject.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Serialization.Fakes.ShimSerializableType.ShimObject.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Serialization.Fakes.ShimSerializableType.ShimObject.ConstructorType">
            <summary>Sets the shim of Object.Object(Type type)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Serialization.Fakes.ShimSerializableType.ShimObject.ReadObjectByteBuffer">
            <summary>Sets the shim of Object.ReadObject(ByteBuffer buffer)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Serialization.Fakes.ShimSerializableType.ShimObject.WriteObjectByteBufferObject">
            <summary>Sets the shim of Object.WriteObject(ByteBuffer buffer, Object value)</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Serialization.Fakes.ShimSerializableType.ShimPrimitive">
            <summary>Shim type of Microsoft.Azure.Amqp.Serialization.SerializableType+Primitive</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Serialization.Fakes.ShimSerializableType.ShimPrimitive.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Serialization.Fakes.ShimSerializableType.ShimPrimitive.#ctor(Microsoft.Azure.Amqp.Serialization.SerializableType.Primitive)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Serialization.Fakes.ShimSerializableType.ShimPrimitive.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Serialization.Fakes.ShimSerializableType.ShimPrimitive.AllInstances.ReadObjectByteBuffer">
            <summary>Sets the shim of Primitive.ReadObject(ByteBuffer buffer)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Serialization.Fakes.ShimSerializableType.ShimPrimitive.AllInstances.WriteObjectByteBufferObject">
            <summary>Sets the shim of Primitive.WriteObject(ByteBuffer buffer, Object value)</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Serialization.Fakes.ShimSerializableType.ShimPrimitive.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Serialization.Fakes.ShimSerializableType.ShimPrimitive.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Serialization.Fakes.ShimSerializableType.ShimPrimitive.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Serialization.Fakes.ShimSerializableType.ShimPrimitive.ConstructorTypeEncodingBase">
            <summary>Sets the shim of Primitive.Primitive(Type type, EncodingBase encoder)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Serialization.Fakes.ShimSerializableType.ShimPrimitive.ReadObjectByteBuffer">
            <summary>Sets the shim of Primitive.ReadObject(ByteBuffer buffer)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Serialization.Fakes.ShimSerializableType.ShimPrimitive.WriteObjectByteBufferObject">
            <summary>Sets the shim of Primitive.WriteObject(ByteBuffer buffer, Object value)</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Serialization.Fakes.ShimSerializableType.ShimSerializable">
            <summary>Shim type of Microsoft.Azure.Amqp.Serialization.SerializableType+Serializable</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Serialization.Fakes.ShimSerializableType.ShimSerializable.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Serialization.Fakes.ShimSerializableType.ShimSerializable.#ctor(Microsoft.Azure.Amqp.Serialization.SerializableType.Serializable)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Serialization.Fakes.ShimSerializableType.ShimSerializable.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Serialization.Fakes.ShimSerializableType.ShimSerializable.AllInstances.ReadObjectByteBuffer">
            <summary>Sets the shim of Serializable.ReadObject(ByteBuffer buffer)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Serialization.Fakes.ShimSerializableType.ShimSerializable.AllInstances.WriteObjectByteBufferObject">
            <summary>Sets the shim of Serializable.WriteObject(ByteBuffer buffer, Object value)</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Serialization.Fakes.ShimSerializableType.ShimSerializable.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Serialization.Fakes.ShimSerializableType.ShimSerializable.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Serialization.Fakes.ShimSerializableType.ShimSerializable.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Serialization.Fakes.ShimSerializableType.ShimSerializable.ConstructorAmqpContractSerializerType">
            <summary>Sets the shim of Serializable.Serializable(AmqpContractSerializer serializer, Type type)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Serialization.Fakes.ShimSerializableType.ShimSerializable.ReadObjectByteBuffer">
            <summary>Sets the shim of Serializable.ReadObject(ByteBuffer buffer)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Serialization.Fakes.ShimSerializableType.ShimSerializable.WriteObjectByteBufferObject">
            <summary>Sets the shim of Serializable.WriteObject(ByteBuffer buffer, Object value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Serialization.Fakes.ShimSerializableType.UnderlyingTypeGet">
            <summary>Sets the shim of SerializableType.get_UnderlyingType()</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Serialization.Fakes.StubMemberAccessor">
            <summary>Stub type of Microsoft.Azure.Amqp.Serialization.MemberAccessor</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Serialization.Fakes.StubMemberAccessor.#ctor(System.Type)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Serialization.Fakes.StubMemberAccessor.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Serialization.Fakes.StubMemberAccessor.InitializeStub">
            <summary>Initializes a new instance of type StubMemberAccessor</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Serialization.Fakes.StubMemberAccessor.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Serialization.Fakes.StubMemberAccessor.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Serialization.Fakes.StubMethodAccessor">
            <summary>Stub type of Microsoft.Azure.Amqp.Serialization.MethodAccessor</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Serialization.Fakes.StubMethodAccessor.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Serialization.Fakes.StubMethodAccessor.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Serialization.Fakes.StubMethodAccessor.InitializeStub">
            <summary>Initializes a new instance of type StubMethodAccessor</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Serialization.Fakes.StubMethodAccessor.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Serialization.Fakes.StubMethodAccessor.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Serialization.Fakes.StubSerializableType">
            <summary>Stub type of Microsoft.Azure.Amqp.Serialization.SerializableType</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Serialization.Fakes.StubSerializableType.#ctor(Microsoft.Azure.Amqp.Serialization.AmqpContractSerializer,System.Type)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Serialization.Fakes.StubSerializableType.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Serialization.Fakes.StubSerializableType.InitializeStub">
            <summary>Initializes a new instance of type StubSerializableType</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Serialization.Fakes.StubSerializableType.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Serialization.Fakes.StubSerializableType.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Serialization.Fakes.StubSerializableType.ReadObject(Microsoft.Azure.Amqp.ByteBuffer)">
            <summary>Sets the stub of SerializableType.ReadObject(ByteBuffer buffer)</summary>
        </member>
        <member name="F:Microsoft.Azure.Amqp.Serialization.Fakes.StubSerializableType.ReadObjectByteBuffer">
            <summary>Sets the stub of SerializableType.ReadObject(ByteBuffer buffer)</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Serialization.Fakes.StubSerializableType.WriteObject(Microsoft.Azure.Amqp.ByteBuffer,System.Object)">
            <summary>Sets the stub of SerializableType.WriteObject(ByteBuffer buffer, Object graph)</summary>
        </member>
        <member name="F:Microsoft.Azure.Amqp.Serialization.Fakes.StubSerializableType.WriteObjectByteBufferObject">
            <summary>Sets the stub of SerializableType.WriteObject(ByteBuffer buffer, Object graph)</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Tracing.Fakes.ShimTrackingContext">
            <summary>Shim type of Microsoft.Azure.Amqp.Tracing.TrackingContext</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Tracing.Fakes.ShimTrackingContext.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Tracing.Fakes.ShimTrackingContext.#ctor(Microsoft.Azure.Amqp.Tracing.TrackingContext)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Tracing.Fakes.ShimTrackingContext.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Tracing.Fakes.ShimTrackingContext.AllInstances.CreateClientTrackingExceptionInfo">
            <summary>Sets the shim of TrackingContext.CreateClientTrackingExceptionInfo()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Tracing.Fakes.ShimTrackingContext.AllInstances.SystemTrackerGet">
            <summary>Sets the shim of TrackingContext.get_SystemTracker()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Tracing.Fakes.ShimTrackingContext.AllInstances.TrackingIdGet">
            <summary>Sets the shim of TrackingContext.get_TrackingId()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Tracing.Fakes.ShimTrackingContext.AppendRoleInstanceInformationToTrackingIdString">
            <summary>Sets the shim of TrackingContext.AppendRoleInstanceInformationToTrackingId(String trackingId)</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Tracing.Fakes.ShimTrackingContext.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Tracing.Fakes.ShimTrackingContext.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Tracing.Fakes.ShimTrackingContext.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Tracing.Fakes.ShimTrackingContext.ConstructorStringString">
            <summary>Sets the shim of TrackingContext.TrackingContext(String trackingId, String systemTracker)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Tracing.Fakes.ShimTrackingContext.CreateClientTrackingExceptionInfo">
            <summary>Sets the shim of TrackingContext.CreateClientTrackingExceptionInfo()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Tracing.Fakes.ShimTrackingContext.GetInstanceFromKeyString">
            <summary>Sets the shim of TrackingContext.GetInstanceFromKey(String key)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Tracing.Fakes.ShimTrackingContext.GetInstanceFromKeyStringString">
            <summary>Sets the shim of TrackingContext.GetInstanceFromKey(String key, String overrideSystemTracker)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Tracing.Fakes.ShimTrackingContext.GetInstanceGuid">
            <summary>Sets the shim of TrackingContext.GetInstance(Guid guidTrackingId)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Tracing.Fakes.ShimTrackingContext.GetInstanceGuidString">
            <summary>Sets the shim of TrackingContext.GetInstance(Guid guidTrackingId, String overrideSystemTracker)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Tracing.Fakes.ShimTrackingContext.GetInstanceStringBoolean">
            <summary>Sets the shim of TrackingContext.GetInstance(String stringTrackingId, Boolean embedRoleInformation)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Tracing.Fakes.ShimTrackingContext.GetInstanceStringStringBoolean">
            <summary>Sets the shim of TrackingContext.GetInstance(String stringTrackingId, String overrideSystemTracker, Boolean embedRoleInformation)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Tracing.Fakes.ShimTrackingContext.GetRoleInstanceInformation">
            <summary>Sets the shim of TrackingContext.GetRoleInstanceInformation()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Tracing.Fakes.ShimTrackingContext.GetTrackingIdUniqueId">
            <summary>Sets the shim of TrackingContext.GetTrackingId(UniqueId uniqueId)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Tracing.Fakes.ShimTrackingContext.RoleIdentifierGet">
            <summary>Sets the shim of TrackingContext.get_RoleIdentifier()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Tracing.Fakes.ShimTrackingContext.RoleIdentifierSetString">
            <summary>Sets the shim of TrackingContext.set_RoleIdentifier(String value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Tracing.Fakes.ShimTrackingContext.StaticConstructor">
            <summary>Sets the shim of TrackingContext.TrackingContext()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Tracing.Fakes.ShimTrackingContext.SystemTrackerGet">
            <summary>Sets the shim of TrackingContext.get_SystemTracker()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Tracing.Fakes.ShimTrackingContext.TrackingIdGet">
            <summary>Sets the shim of TrackingContext.get_TrackingId()</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Transaction.Fakes.ShimCoordinator">
            <summary>Shim type of Microsoft.Azure.Amqp.Transaction.Coordinator</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Transaction.Fakes.ShimCoordinator.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Transaction.Fakes.ShimCoordinator.#ctor(Microsoft.Azure.Amqp.Transaction.Coordinator)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Transaction.Fakes.ShimCoordinator.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transaction.Fakes.ShimCoordinator.AllInstances.CapabilitiesGet">
            <summary>Sets the shim of Coordinator.get_Capabilities()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transaction.Fakes.ShimCoordinator.AllInstances.CapabilitiesSetMultipleOfAmqpSymbol">
            <summary>Sets the shim of Coordinator.set_Capabilities(Multiple`1&lt;AmqpSymbol&gt; value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transaction.Fakes.ShimCoordinator.AllInstances.EnsureRequired">
            <summary>Sets the shim of Coordinator.EnsureRequired()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transaction.Fakes.ShimCoordinator.AllInstances.FieldCountGet">
            <summary>Sets the shim of Coordinator.get_FieldCount()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transaction.Fakes.ShimCoordinator.AllInstances.OnDecodeByteBufferInt32">
            <summary>Sets the shim of Coordinator.OnDecode(ByteBuffer buffer, Int32 count)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transaction.Fakes.ShimCoordinator.AllInstances.OnEncodeByteBuffer">
            <summary>Sets the shim of Coordinator.OnEncode(ByteBuffer buffer)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transaction.Fakes.ShimCoordinator.AllInstances.OnValueSize">
            <summary>Sets the shim of Coordinator.OnValueSize()</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Transaction.Fakes.ShimCoordinator.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Transaction.Fakes.ShimCoordinator.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transaction.Fakes.ShimCoordinator.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Transaction.Fakes.ShimCoordinator.Bind(Microsoft.Azure.Amqp.Encoding.IAmqpSerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transaction.Fakes.ShimCoordinator.CapabilitiesGet">
            <summary>Sets the shim of Coordinator.get_Capabilities()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transaction.Fakes.ShimCoordinator.CapabilitiesSetMultipleOfAmqpSymbol">
            <summary>Sets the shim of Coordinator.set_Capabilities(Multiple`1&lt;AmqpSymbol&gt; value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transaction.Fakes.ShimCoordinator.Constructor">
            <summary>Sets the shim of Coordinator.Coordinator()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transaction.Fakes.ShimCoordinator.EnsureRequired">
            <summary>Sets the shim of Coordinator.EnsureRequired()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transaction.Fakes.ShimCoordinator.FieldCountGet">
            <summary>Sets the shim of Coordinator.get_FieldCount()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transaction.Fakes.ShimCoordinator.OnDecodeByteBufferInt32">
            <summary>Sets the shim of Coordinator.OnDecode(ByteBuffer buffer, Int32 count)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transaction.Fakes.ShimCoordinator.OnEncodeByteBuffer">
            <summary>Sets the shim of Coordinator.OnEncode(ByteBuffer buffer)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transaction.Fakes.ShimCoordinator.OnValueSize">
            <summary>Sets the shim of Coordinator.OnValueSize()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transaction.Fakes.ShimCoordinator.StaticConstructor">
            <summary>Sets the shim of Coordinator.Coordinator()</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Transaction.Fakes.ShimDeclare">
            <summary>Shim type of Microsoft.Azure.Amqp.Transaction.Declare</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Transaction.Fakes.ShimDeclare.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Transaction.Fakes.ShimDeclare.#ctor(Microsoft.Azure.Amqp.Transaction.Declare)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Transaction.Fakes.ShimDeclare.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transaction.Fakes.ShimDeclare.AllInstances.FieldCountGet">
            <summary>Sets the shim of Declare.get_FieldCount()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transaction.Fakes.ShimDeclare.AllInstances.GlobalIdGet">
            <summary>Sets the shim of Declare.get_GlobalId()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transaction.Fakes.ShimDeclare.AllInstances.GlobalIdSetObject">
            <summary>Sets the shim of Declare.set_GlobalId(Object value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transaction.Fakes.ShimDeclare.AllInstances.OnDecodeByteBufferInt32">
            <summary>Sets the shim of Declare.OnDecode(ByteBuffer buffer, Int32 count)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transaction.Fakes.ShimDeclare.AllInstances.OnEncodeByteBuffer">
            <summary>Sets the shim of Declare.OnEncode(ByteBuffer buffer)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transaction.Fakes.ShimDeclare.AllInstances.OnValueSize">
            <summary>Sets the shim of Declare.OnValueSize()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transaction.Fakes.ShimDeclare.AllInstances.ToString01">
            <summary>Sets the shim of Declare.ToString()</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Transaction.Fakes.ShimDeclare.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Transaction.Fakes.ShimDeclare.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transaction.Fakes.ShimDeclare.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Transaction.Fakes.ShimDeclare.Bind(Microsoft.Azure.Amqp.Encoding.IAmqpSerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transaction.Fakes.ShimDeclare.Constructor">
            <summary>Sets the shim of Declare.Declare()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transaction.Fakes.ShimDeclare.FieldCountGet">
            <summary>Sets the shim of Declare.get_FieldCount()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transaction.Fakes.ShimDeclare.GlobalIdGet">
            <summary>Sets the shim of Declare.get_GlobalId()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transaction.Fakes.ShimDeclare.GlobalIdSetObject">
            <summary>Sets the shim of Declare.set_GlobalId(Object value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transaction.Fakes.ShimDeclare.OnDecodeByteBufferInt32">
            <summary>Sets the shim of Declare.OnDecode(ByteBuffer buffer, Int32 count)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transaction.Fakes.ShimDeclare.OnEncodeByteBuffer">
            <summary>Sets the shim of Declare.OnEncode(ByteBuffer buffer)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transaction.Fakes.ShimDeclare.OnValueSize">
            <summary>Sets the shim of Declare.OnValueSize()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transaction.Fakes.ShimDeclare.StaticConstructor">
            <summary>Sets the shim of Declare.Declare()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transaction.Fakes.ShimDeclare.ToString">
            <summary>Sets the shim of Declare.ToString()</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Transaction.Fakes.ShimDeclared">
            <summary>Shim type of Microsoft.Azure.Amqp.Transaction.Declared</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Transaction.Fakes.ShimDeclared.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Transaction.Fakes.ShimDeclared.#ctor(Microsoft.Azure.Amqp.Transaction.Declared)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Transaction.Fakes.ShimDeclared.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transaction.Fakes.ShimDeclared.AllInstances.FieldCountGet">
            <summary>Sets the shim of Declared.get_FieldCount()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transaction.Fakes.ShimDeclared.AllInstances.OnDecodeByteBufferInt32">
            <summary>Sets the shim of Declared.OnDecode(ByteBuffer buffer, Int32 count)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transaction.Fakes.ShimDeclared.AllInstances.OnEncodeByteBuffer">
            <summary>Sets the shim of Declared.OnEncode(ByteBuffer buffer)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transaction.Fakes.ShimDeclared.AllInstances.OnValueSize">
            <summary>Sets the shim of Declared.OnValueSize()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transaction.Fakes.ShimDeclared.AllInstances.ToString01">
            <summary>Sets the shim of Declared.ToString()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transaction.Fakes.ShimDeclared.AllInstances.TxnIdGet">
            <summary>Sets the shim of Declared.get_TxnId()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transaction.Fakes.ShimDeclared.AllInstances.TxnIdSetArraySegmentOfByte">
            <summary>Sets the shim of Declared.set_TxnId(ArraySegment`1&lt;Byte&gt; value)</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Transaction.Fakes.ShimDeclared.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Transaction.Fakes.ShimDeclared.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transaction.Fakes.ShimDeclared.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Transaction.Fakes.ShimDeclared.Bind(Microsoft.Azure.Amqp.Encoding.IAmqpSerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transaction.Fakes.ShimDeclared.Constructor">
            <summary>Sets the shim of Declared.Declared()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transaction.Fakes.ShimDeclared.FieldCountGet">
            <summary>Sets the shim of Declared.get_FieldCount()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transaction.Fakes.ShimDeclared.OnDecodeByteBufferInt32">
            <summary>Sets the shim of Declared.OnDecode(ByteBuffer buffer, Int32 count)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transaction.Fakes.ShimDeclared.OnEncodeByteBuffer">
            <summary>Sets the shim of Declared.OnEncode(ByteBuffer buffer)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transaction.Fakes.ShimDeclared.OnValueSize">
            <summary>Sets the shim of Declared.OnValueSize()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transaction.Fakes.ShimDeclared.StaticConstructor">
            <summary>Sets the shim of Declared.Declared()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transaction.Fakes.ShimDeclared.ToString">
            <summary>Sets the shim of Declared.ToString()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transaction.Fakes.ShimDeclared.TxnIdGet">
            <summary>Sets the shim of Declared.get_TxnId()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transaction.Fakes.ShimDeclared.TxnIdSetArraySegmentOfByte">
            <summary>Sets the shim of Declared.set_TxnId(ArraySegment`1&lt;Byte&gt; value)</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Transaction.Fakes.ShimDischarge">
            <summary>Shim type of Microsoft.Azure.Amqp.Transaction.Discharge</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Transaction.Fakes.ShimDischarge.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Transaction.Fakes.ShimDischarge.#ctor(Microsoft.Azure.Amqp.Transaction.Discharge)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Transaction.Fakes.ShimDischarge.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transaction.Fakes.ShimDischarge.AllInstances.FailGet">
            <summary>Sets the shim of Discharge.get_Fail()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transaction.Fakes.ShimDischarge.AllInstances.FailSetNullableOfBoolean">
            <summary>Sets the shim of Discharge.set_Fail(Nullable`1&lt;Boolean&gt; value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transaction.Fakes.ShimDischarge.AllInstances.FieldCountGet">
            <summary>Sets the shim of Discharge.get_FieldCount()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transaction.Fakes.ShimDischarge.AllInstances.OnDecodeByteBufferInt32">
            <summary>Sets the shim of Discharge.OnDecode(ByteBuffer buffer, Int32 count)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transaction.Fakes.ShimDischarge.AllInstances.OnEncodeByteBuffer">
            <summary>Sets the shim of Discharge.OnEncode(ByteBuffer buffer)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transaction.Fakes.ShimDischarge.AllInstances.OnValueSize">
            <summary>Sets the shim of Discharge.OnValueSize()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transaction.Fakes.ShimDischarge.AllInstances.ToString01">
            <summary>Sets the shim of Discharge.ToString()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transaction.Fakes.ShimDischarge.AllInstances.TxnIdGet">
            <summary>Sets the shim of Discharge.get_TxnId()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transaction.Fakes.ShimDischarge.AllInstances.TxnIdSetArraySegmentOfByte">
            <summary>Sets the shim of Discharge.set_TxnId(ArraySegment`1&lt;Byte&gt; value)</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Transaction.Fakes.ShimDischarge.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Transaction.Fakes.ShimDischarge.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transaction.Fakes.ShimDischarge.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Transaction.Fakes.ShimDischarge.Bind(Microsoft.Azure.Amqp.Encoding.IAmqpSerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transaction.Fakes.ShimDischarge.Constructor">
            <summary>Sets the shim of Discharge.Discharge()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transaction.Fakes.ShimDischarge.FailGet">
            <summary>Sets the shim of Discharge.get_Fail()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transaction.Fakes.ShimDischarge.FailSetNullableOfBoolean">
            <summary>Sets the shim of Discharge.set_Fail(Nullable`1&lt;Boolean&gt; value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transaction.Fakes.ShimDischarge.FieldCountGet">
            <summary>Sets the shim of Discharge.get_FieldCount()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transaction.Fakes.ShimDischarge.OnDecodeByteBufferInt32">
            <summary>Sets the shim of Discharge.OnDecode(ByteBuffer buffer, Int32 count)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transaction.Fakes.ShimDischarge.OnEncodeByteBuffer">
            <summary>Sets the shim of Discharge.OnEncode(ByteBuffer buffer)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transaction.Fakes.ShimDischarge.OnValueSize">
            <summary>Sets the shim of Discharge.OnValueSize()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transaction.Fakes.ShimDischarge.StaticConstructor">
            <summary>Sets the shim of Discharge.Discharge()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transaction.Fakes.ShimDischarge.ToString">
            <summary>Sets the shim of Discharge.ToString()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transaction.Fakes.ShimDischarge.TxnIdGet">
            <summary>Sets the shim of Discharge.get_TxnId()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transaction.Fakes.ShimDischarge.TxnIdSetArraySegmentOfByte">
            <summary>Sets the shim of Discharge.set_TxnId(ArraySegment`1&lt;Byte&gt; value)</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Transaction.Fakes.ShimTransactionalState">
            <summary>Shim type of Microsoft.Azure.Amqp.Transaction.TransactionalState</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Transaction.Fakes.ShimTransactionalState.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Transaction.Fakes.ShimTransactionalState.#ctor(Microsoft.Azure.Amqp.Transaction.TransactionalState)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Transaction.Fakes.ShimTransactionalState.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transaction.Fakes.ShimTransactionalState.AllInstances.FieldCountGet">
            <summary>Sets the shim of TransactionalState.get_FieldCount()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transaction.Fakes.ShimTransactionalState.AllInstances.OnDecodeByteBufferInt32">
            <summary>Sets the shim of TransactionalState.OnDecode(ByteBuffer buffer, Int32 count)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transaction.Fakes.ShimTransactionalState.AllInstances.OnEncodeByteBuffer">
            <summary>Sets the shim of TransactionalState.OnEncode(ByteBuffer buffer)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transaction.Fakes.ShimTransactionalState.AllInstances.OnValueSize">
            <summary>Sets the shim of TransactionalState.OnValueSize()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transaction.Fakes.ShimTransactionalState.AllInstances.OutcomeGet">
            <summary>Sets the shim of TransactionalState.get_Outcome()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transaction.Fakes.ShimTransactionalState.AllInstances.OutcomeSetOutcome">
            <summary>Sets the shim of TransactionalState.set_Outcome(Outcome value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transaction.Fakes.ShimTransactionalState.AllInstances.ToString01">
            <summary>Sets the shim of TransactionalState.ToString()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transaction.Fakes.ShimTransactionalState.AllInstances.TxnIdGet">
            <summary>Sets the shim of TransactionalState.get_TxnId()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transaction.Fakes.ShimTransactionalState.AllInstances.TxnIdSetArraySegmentOfByte">
            <summary>Sets the shim of TransactionalState.set_TxnId(ArraySegment`1&lt;Byte&gt; value)</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Transaction.Fakes.ShimTransactionalState.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Transaction.Fakes.ShimTransactionalState.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transaction.Fakes.ShimTransactionalState.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Transaction.Fakes.ShimTransactionalState.Bind(Microsoft.Azure.Amqp.Encoding.IAmqpSerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transaction.Fakes.ShimTransactionalState.Constructor">
            <summary>Sets the shim of TransactionalState.TransactionalState()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transaction.Fakes.ShimTransactionalState.FieldCountGet">
            <summary>Sets the shim of TransactionalState.get_FieldCount()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transaction.Fakes.ShimTransactionalState.OnDecodeByteBufferInt32">
            <summary>Sets the shim of TransactionalState.OnDecode(ByteBuffer buffer, Int32 count)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transaction.Fakes.ShimTransactionalState.OnEncodeByteBuffer">
            <summary>Sets the shim of TransactionalState.OnEncode(ByteBuffer buffer)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transaction.Fakes.ShimTransactionalState.OnValueSize">
            <summary>Sets the shim of TransactionalState.OnValueSize()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transaction.Fakes.ShimTransactionalState.OutcomeGet">
            <summary>Sets the shim of TransactionalState.get_Outcome()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transaction.Fakes.ShimTransactionalState.OutcomeSetOutcome">
            <summary>Sets the shim of TransactionalState.set_Outcome(Outcome value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transaction.Fakes.ShimTransactionalState.StaticConstructor">
            <summary>Sets the shim of TransactionalState.TransactionalState()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transaction.Fakes.ShimTransactionalState.ToString">
            <summary>Sets the shim of TransactionalState.ToString()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transaction.Fakes.ShimTransactionalState.TxnIdGet">
            <summary>Sets the shim of TransactionalState.get_TxnId()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transaction.Fakes.ShimTransactionalState.TxnIdSetArraySegmentOfByte">
            <summary>Sets the shim of TransactionalState.set_TxnId(ArraySegment`1&lt;Byte&gt; value)</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Transport.Fakes.ShimAmqpTransportInitiator">
            <summary>Shim type of Microsoft.Azure.Amqp.Transport.AmqpTransportInitiator</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Transport.Fakes.ShimAmqpTransportInitiator.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Transport.Fakes.ShimAmqpTransportInitiator.#ctor(Microsoft.Azure.Amqp.Transport.AmqpTransportInitiator)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Transport.Fakes.ShimAmqpTransportInitiator.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimAmqpTransportInitiator.AllInstances.BeginConnectTimeSpanAsyncCallbackObject">
            <summary>Sets the shim of AmqpTransportInitiator.BeginConnect(TimeSpan timeout, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimAmqpTransportInitiator.AllInstances.CompleteTransportAsyncCallbackArgs">
            <summary>Sets the shim of AmqpTransportInitiator.Complete(TransportAsyncCallbackArgs args)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimAmqpTransportInitiator.AllInstances.ConnectAsyncTimeSpanTransportAsyncCallbackArgs">
            <summary>Sets the shim of AmqpTransportInitiator.ConnectAsync(TimeSpan timeout, TransportAsyncCallbackArgs callbackArgs)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimAmqpTransportInitiator.AllInstances.ConnectTaskAsyncTimeSpan">
            <summary>Sets the shim of AmqpTransportInitiator.ConnectTaskAsync(TimeSpan timeout)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimAmqpTransportInitiator.AllInstances.EndConnectIAsyncResult">
            <summary>Sets the shim of AmqpTransportInitiator.EndConnect(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimAmqpTransportInitiator.AllInstances.HandleTransportOpenedIAsyncResult">
            <summary>Sets the shim of AmqpTransportInitiator.HandleTransportOpened(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimAmqpTransportInitiator.AllInstances.OnConnectCompleteTransportAsyncCallbackArgs">
            <summary>Sets the shim of AmqpTransportInitiator.OnConnectComplete(TransportAsyncCallbackArgs args)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimAmqpTransportInitiator.AllInstances.OnReadHeaderCompleteTransportAsyncCallbackArgs">
            <summary>Sets the shim of AmqpTransportInitiator.OnReadHeaderComplete(TransportAsyncCallbackArgs args)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimAmqpTransportInitiator.AllInstances.OnTransportOpenCompeteIAsyncResult">
            <summary>Sets the shim of AmqpTransportInitiator.OnTransportOpenCompete(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimAmqpTransportInitiator.AllInstances.OnWriteHeaderCompleteTransportAsyncCallbackArgs">
            <summary>Sets the shim of AmqpTransportInitiator.OnWriteHeaderComplete(TransportAsyncCallbackArgs args)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimAmqpTransportInitiator.AllInstances.ToString01">
            <summary>Sets the shim of AmqpTransportInitiator.ToString()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimAmqpTransportInitiator.AllInstances.WriteSecurityHeaderTransportAsyncCallbackArgs">
            <summary>Sets the shim of AmqpTransportInitiator.WriteSecurityHeader(TransportAsyncCallbackArgs args)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimAmqpTransportInitiator.BeginConnectTimeSpanAsyncCallbackObject">
            <summary>Sets the shim of AmqpTransportInitiator.BeginConnect(TimeSpan timeout, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Transport.Fakes.ShimAmqpTransportInitiator.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Transport.Fakes.ShimAmqpTransportInitiator.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimAmqpTransportInitiator.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimAmqpTransportInitiator.CompleteTransportAsyncCallbackArgs">
            <summary>Sets the shim of AmqpTransportInitiator.Complete(TransportAsyncCallbackArgs args)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimAmqpTransportInitiator.ConnectAsyncTimeSpanTransportAsyncCallbackArgs">
            <summary>Sets the shim of AmqpTransportInitiator.ConnectAsync(TimeSpan timeout, TransportAsyncCallbackArgs callbackArgs)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimAmqpTransportInitiator.ConnectTaskAsyncTimeSpan">
            <summary>Sets the shim of AmqpTransportInitiator.ConnectTaskAsync(TimeSpan timeout)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimAmqpTransportInitiator.ConstructorAmqpSettingsTransportSettings">
            <summary>Sets the shim of AmqpTransportInitiator.AmqpTransportInitiator(AmqpSettings settings, TransportSettings transportSettings)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimAmqpTransportInitiator.CurrentThreadIdGet">
            <summary>Sets the shim of AmqpTransportInitiator.get_CurrentThreadId()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimAmqpTransportInitiator.EndConnectIAsyncResult">
            <summary>Sets the shim of AmqpTransportInitiator.EndConnect(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimAmqpTransportInitiator.HandleTransportOpenedIAsyncResult">
            <summary>Sets the shim of AmqpTransportInitiator.HandleTransportOpened(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimAmqpTransportInitiator.OnConnectCompleteTransportAsyncCallbackArgs">
            <summary>Sets the shim of AmqpTransportInitiator.OnConnectComplete(TransportAsyncCallbackArgs args)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimAmqpTransportInitiator.OnReadHeaderCompleteTransportAsyncCallbackArgs">
            <summary>Sets the shim of AmqpTransportInitiator.OnReadHeaderComplete(TransportAsyncCallbackArgs args)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimAmqpTransportInitiator.OnTransportOpenCompeteIAsyncResult">
            <summary>Sets the shim of AmqpTransportInitiator.OnTransportOpenCompete(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimAmqpTransportInitiator.OnWriteHeaderCompleteTransportAsyncCallbackArgs">
            <summary>Sets the shim of AmqpTransportInitiator.OnWriteHeaderComplete(TransportAsyncCallbackArgs args)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimAmqpTransportInitiator.ToString">
            <summary>Sets the shim of AmqpTransportInitiator.ToString()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimAmqpTransportInitiator.WriteSecurityHeaderTransportAsyncCallbackArgs">
            <summary>Sets the shim of AmqpTransportInitiator.WriteSecurityHeader(TransportAsyncCallbackArgs args)</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Transport.Fakes.ShimAmqpTransportListener">
            <summary>Shim type of Microsoft.Azure.Amqp.Transport.AmqpTransportListener</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Transport.Fakes.ShimAmqpTransportListener.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Transport.Fakes.ShimAmqpTransportListener.#ctor(Microsoft.Azure.Amqp.Transport.AmqpTransportListener)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimAmqpTransportListener.AbortInternal">
            <summary>Sets the shim of AmqpTransportListener.AbortInternal()</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Transport.Fakes.ShimAmqpTransportListener.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimAmqpTransportListener.AllInstances.AbortInternal">
            <summary>Sets the shim of AmqpTransportListener.AbortInternal()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimAmqpTransportListener.AllInstances.AmqpSettingsGet">
            <summary>Sets the shim of AmqpTransportListener.get_AmqpSettings()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimAmqpTransportListener.AllInstances.CloseInternal">
            <summary>Sets the shim of AmqpTransportListener.CloseInternal()</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Transport.Fakes.ShimAmqpTransportListener.AllInstances.FindOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Microsoft.Azure.Amqp.Transport.AmqpTransportListener,``0})">
            <summary>Sets the shim of AmqpTransportListener.Find()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimAmqpTransportListener.AllInstances.OnAcceptTransportTransportListenerTransportAsyncCallbackArgs">
            <summary>Sets the shim of AmqpTransportListener.OnAcceptTransport(TransportListener innerListener, TransportAsyncCallbackArgs args)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimAmqpTransportListener.AllInstances.OnHandleTransportCompleteTransportAsyncCallbackArgs">
            <summary>Sets the shim of AmqpTransportListener.OnHandleTransportComplete(TransportAsyncCallbackArgs args)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimAmqpTransportListener.AllInstances.OnListen">
            <summary>Sets the shim of AmqpTransportListener.OnListen()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimAmqpTransportListener.AllInstances.OnListenerClosedObjectEventArgs">
            <summary>Sets the shim of AmqpTransportListener.OnListenerClosed(Object sender, EventArgs e)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimAmqpTransportListener.AmqpSettingsGet">
            <summary>Sets the shim of AmqpTransportListener.get_AmqpSettings()</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Transport.Fakes.ShimAmqpTransportListener.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Transport.Fakes.ShimAmqpTransportListener.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimAmqpTransportListener.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimAmqpTransportListener.CloseInternal">
            <summary>Sets the shim of AmqpTransportListener.CloseInternal()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimAmqpTransportListener.ConstructorIEnumerableOfTransportListenerAmqpSettings">
            <summary>Sets the shim of AmqpTransportListener.AmqpTransportListener(IEnumerable`1&lt;TransportListener&gt; listeners, AmqpSettings settings)</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Transport.Fakes.ShimAmqpTransportListener.FindOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0})">
            <summary>Sets the shim of AmqpTransportListener.Find()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimAmqpTransportListener.OnAcceptTransportTransportListenerTransportAsyncCallbackArgs">
            <summary>Sets the shim of AmqpTransportListener.OnAcceptTransport(TransportListener innerListener, TransportAsyncCallbackArgs args)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimAmqpTransportListener.OnHandleTransportCompleteTransportAsyncCallbackArgs">
            <summary>Sets the shim of AmqpTransportListener.OnHandleTransportComplete(TransportAsyncCallbackArgs args)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimAmqpTransportListener.OnListen">
            <summary>Sets the shim of AmqpTransportListener.OnListen()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimAmqpTransportListener.OnListenerClosedObjectEventArgs">
            <summary>Sets the shim of AmqpTransportListener.OnListenerClosed(Object sender, EventArgs e)</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Transport.Fakes.ShimAmqpTransportProvider">
            <summary>Shim type of Microsoft.Azure.Amqp.Transport.AmqpTransportProvider</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Transport.Fakes.ShimAmqpTransportProvider.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Transport.Fakes.ShimAmqpTransportProvider.#ctor(Microsoft.Azure.Amqp.Transport.AmqpTransportProvider)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Transport.Fakes.ShimAmqpTransportProvider.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimAmqpTransportProvider.AllInstances.OnCreateTransportTransportBaseBoolean">
            <summary>Sets the shim of AmqpTransportProvider.OnCreateTransport(TransportBase innerTransport, Boolean isInitiator)</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Transport.Fakes.ShimAmqpTransportProvider.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Transport.Fakes.ShimAmqpTransportProvider.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimAmqpTransportProvider.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimAmqpTransportProvider.Constructor">
            <summary>Sets the shim of AmqpTransportProvider.AmqpTransportProvider()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimAmqpTransportProvider.OnCreateTransportTransportBaseBoolean">
            <summary>Sets the shim of AmqpTransportProvider.OnCreateTransport(TransportBase innerTransport, Boolean isInitiator)</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Transport.Fakes.ShimCustomSslStream">
            <summary>Shim type of Microsoft.Azure.Amqp.Transport.CustomSslStream</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Transport.Fakes.ShimCustomSslStream.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Transport.Fakes.ShimCustomSslStream.#ctor(Microsoft.Azure.Amqp.Transport.CustomSslStream)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Transport.Fakes.ShimCustomSslStream.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimCustomSslStream.AllInstances.IsClientGet">
            <summary>Sets the shim of CustomSslStream.get_IsClient()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimCustomSslStream.AllInstances.IsClientSetBoolean">
            <summary>Sets the shim of CustomSslStream.set_IsClient(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimCustomSslStream.AllInstances.IsRemoteCertificateValidGet">
            <summary>Sets the shim of CustomSslStream.get_IsRemoteCertificateValid()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimCustomSslStream.AllInstances.IsRemoteCertificateValidSetBoolean">
            <summary>Sets the shim of CustomSslStream.set_IsRemoteCertificateValid(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimCustomSslStream.AllInstances.RequireMutualAuthenticationGet">
            <summary>Sets the shim of CustomSslStream.get_RequireMutualAuthentication()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimCustomSslStream.AllInstances.RequireMutualAuthenticationSetBoolean">
            <summary>Sets the shim of CustomSslStream.set_RequireMutualAuthentication(Boolean value)</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Transport.Fakes.ShimCustomSslStream.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Transport.Fakes.ShimCustomSslStream.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimCustomSslStream.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Transport.Fakes.ShimCustomSslStream.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimCustomSslStream.ConstructorStreamBooleanBoolean">
            <summary>Sets the shim of CustomSslStream.CustomSslStream(Stream innerStream, Boolean leaveInnerStreamOpen, Boolean isClient)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimCustomSslStream.ConstructorStreamBooleanRemoteCertificateValidationCallbackBoolean">
            <summary>Sets the shim of CustomSslStream.CustomSslStream(Stream innerStream, Boolean leaveInnerStreamOpen, RemoteCertificateValidationCallback userCertificateValidationCallback, Boolean isClient)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimCustomSslStream.IsClientGet">
            <summary>Sets the shim of CustomSslStream.get_IsClient()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimCustomSslStream.IsClientSetBoolean">
            <summary>Sets the shim of CustomSslStream.set_IsClient(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimCustomSslStream.IsRemoteCertificateValidGet">
            <summary>Sets the shim of CustomSslStream.get_IsRemoteCertificateValid()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimCustomSslStream.IsRemoteCertificateValidSetBoolean">
            <summary>Sets the shim of CustomSslStream.set_IsRemoteCertificateValid(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimCustomSslStream.RequireMutualAuthenticationGet">
            <summary>Sets the shim of CustomSslStream.get_RequireMutualAuthentication()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimCustomSslStream.RequireMutualAuthenticationSetBoolean">
            <summary>Sets the shim of CustomSslStream.set_RequireMutualAuthentication(Boolean value)</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Transport.Fakes.ShimTcpTransportSettings">
            <summary>Shim type of Microsoft.Azure.Amqp.Transport.TcpTransportSettings</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Transport.Fakes.ShimTcpTransportSettings.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Transport.Fakes.ShimTcpTransportSettings.#ctor(Microsoft.Azure.Amqp.Transport.TcpTransportSettings)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Transport.Fakes.ShimTcpTransportSettings.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimTcpTransportSettings.AllInstances.CreateInitiator">
            <summary>Sets the shim of TcpTransportSettings.CreateInitiator()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimTcpTransportSettings.AllInstances.CreateListener">
            <summary>Sets the shim of TcpTransportSettings.CreateListener()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimTcpTransportSettings.AllInstances.HostGet">
            <summary>Sets the shim of TcpTransportSettings.get_Host()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimTcpTransportSettings.AllInstances.HostSetString">
            <summary>Sets the shim of TcpTransportSettings.set_Host(String value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimTcpTransportSettings.AllInstances.PortGet">
            <summary>Sets the shim of TcpTransportSettings.get_Port()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimTcpTransportSettings.AllInstances.PortSetInt32">
            <summary>Sets the shim of TcpTransportSettings.set_Port(Int32 value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimTcpTransportSettings.AllInstances.TcpBacklogGet">
            <summary>Sets the shim of TcpTransportSettings.get_TcpBacklog()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimTcpTransportSettings.AllInstances.TcpBacklogSetInt32">
            <summary>Sets the shim of TcpTransportSettings.set_TcpBacklog(Int32 value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimTcpTransportSettings.AllInstances.ToString01">
            <summary>Sets the shim of TcpTransportSettings.ToString()</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Transport.Fakes.ShimTcpTransportSettings.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Transport.Fakes.ShimTcpTransportSettings.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimTcpTransportSettings.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimTcpTransportSettings.Constructor">
            <summary>Sets the shim of TcpTransportSettings.TcpTransportSettings()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimTcpTransportSettings.CreateInitiator">
            <summary>Sets the shim of TcpTransportSettings.CreateInitiator()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimTcpTransportSettings.CreateListener">
            <summary>Sets the shim of TcpTransportSettings.CreateListener()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimTcpTransportSettings.HostGet">
            <summary>Sets the shim of TcpTransportSettings.get_Host()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimTcpTransportSettings.HostSetString">
            <summary>Sets the shim of TcpTransportSettings.set_Host(String value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimTcpTransportSettings.PortGet">
            <summary>Sets the shim of TcpTransportSettings.get_Port()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimTcpTransportSettings.PortSetInt32">
            <summary>Sets the shim of TcpTransportSettings.set_Port(Int32 value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimTcpTransportSettings.TcpBacklogGet">
            <summary>Sets the shim of TcpTransportSettings.get_TcpBacklog()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimTcpTransportSettings.TcpBacklogSetInt32">
            <summary>Sets the shim of TcpTransportSettings.set_TcpBacklog(Int32 value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimTcpTransportSettings.ToString">
            <summary>Sets the shim of TcpTransportSettings.ToString()</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Transport.Fakes.ShimTlsTransport">
            <summary>Shim type of Microsoft.Azure.Amqp.Transport.TlsTransport</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Transport.Fakes.ShimTlsTransport.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Transport.Fakes.ShimTlsTransport.#ctor(Microsoft.Azure.Amqp.Transport.TlsTransport)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimTlsTransport.AbortInternal">
            <summary>Sets the shim of TlsTransport.AbortInternal()</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Transport.Fakes.ShimTlsTransport.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimTlsTransport.AllInstances.AbortInternal">
            <summary>Sets the shim of TlsTransport.AbortInternal()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimTlsTransport.AllInstances.CloseInternal">
            <summary>Sets the shim of TlsTransport.CloseInternal()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimTlsTransport.AllInstances.Dispose">
            <summary>Sets the shim of TlsTransport.Dispose()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimTlsTransport.AllInstances.HandleOpenCompleteIAsyncResultBoolean">
            <summary>Sets the shim of TlsTransport.HandleOpenComplete(IAsyncResult result, Boolean syncComplete)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimTlsTransport.AllInstances.HandleOperationCompleteIAsyncResultBooleanBoolean">
            <summary>Sets the shim of TlsTransport.HandleOperationComplete(IAsyncResult result, Boolean write, Boolean syncComplete)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimTlsTransport.AllInstances.IsSecureGet">
            <summary>Sets the shim of TlsTransport.get_IsSecure()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimTlsTransport.AllInstances.LocalEndPointGet">
            <summary>Sets the shim of TlsTransport.get_LocalEndPoint()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimTlsTransport.AllInstances.OpenInternal">
            <summary>Sets the shim of TlsTransport.OpenInternal()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimTlsTransport.AllInstances.ReadAsyncTransportAsyncCallbackArgs">
            <summary>Sets the shim of TlsTransport.ReadAsync(TransportAsyncCallbackArgs args)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimTlsTransport.AllInstances.RemoteEndPointGet">
            <summary>Sets the shim of TlsTransport.get_RemoteEndPoint()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimTlsTransport.AllInstances.SetMonitorITransportMonitor">
            <summary>Sets the shim of TlsTransport.SetMonitor(ITransportMonitor usageMeter)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimTlsTransport.AllInstances.TlsSettingsGet">
            <summary>Sets the shim of TlsTransport.get_TlsSettings()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimTlsTransport.AllInstances.WriteAsyncTransportAsyncCallbackArgs">
            <summary>Sets the shim of TlsTransport.WriteAsync(TransportAsyncCallbackArgs args)</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Transport.Fakes.ShimTlsTransport.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Transport.Fakes.ShimTlsTransport.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimTlsTransport.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Transport.Fakes.ShimTlsTransport.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimTlsTransport.CloseInternal">
            <summary>Sets the shim of TlsTransport.CloseInternal()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimTlsTransport.ConstructorTransportBaseTlsTransportSettings">
            <summary>Sets the shim of TlsTransport.TlsTransport(TransportBase innerTransport, TlsTransportSettings tlsSettings)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimTlsTransport.Dispose">
            <summary>Sets the shim of TlsTransport.Dispose()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimTlsTransport.HandleOpenCompleteIAsyncResultBoolean">
            <summary>Sets the shim of TlsTransport.HandleOpenComplete(IAsyncResult result, Boolean syncComplete)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimTlsTransport.HandleOperationCompleteIAsyncResultBooleanBoolean">
            <summary>Sets the shim of TlsTransport.HandleOperationComplete(IAsyncResult result, Boolean write, Boolean syncComplete)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimTlsTransport.IsSecureGet">
            <summary>Sets the shim of TlsTransport.get_IsSecure()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimTlsTransport.LocalEndPointGet">
            <summary>Sets the shim of TlsTransport.get_LocalEndPoint()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimTlsTransport.OnOpenCompleteIAsyncResult">
            <summary>Sets the shim of TlsTransport.OnOpenComplete(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimTlsTransport.OnReadCompleteIAsyncResult">
            <summary>Sets the shim of TlsTransport.OnReadComplete(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimTlsTransport.OnWriteCompleteIAsyncResult">
            <summary>Sets the shim of TlsTransport.OnWriteComplete(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimTlsTransport.OpenInternal">
            <summary>Sets the shim of TlsTransport.OpenInternal()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimTlsTransport.ReadAsyncTransportAsyncCallbackArgs">
            <summary>Sets the shim of TlsTransport.ReadAsync(TransportAsyncCallbackArgs args)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimTlsTransport.RemoteEndPointGet">
            <summary>Sets the shim of TlsTransport.get_RemoteEndPoint()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimTlsTransport.SetMonitorITransportMonitor">
            <summary>Sets the shim of TlsTransport.SetMonitor(ITransportMonitor usageMeter)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimTlsTransport.StaticConstructor">
            <summary>Sets the shim of TlsTransport.TlsTransport()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimTlsTransport.TlsSettingsGet">
            <summary>Sets the shim of TlsTransport.get_TlsSettings()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimTlsTransport.WriteAsyncTransportAsyncCallbackArgs">
            <summary>Sets the shim of TlsTransport.WriteAsync(TransportAsyncCallbackArgs args)</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Transport.Fakes.ShimTlsTransportInitiator">
            <summary>Shim type of Microsoft.Azure.Amqp.Transport.TlsTransportInitiator</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Transport.Fakes.ShimTlsTransportInitiator.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Transport.Fakes.ShimTlsTransportInitiator.#ctor(Microsoft.Azure.Amqp.Transport.TlsTransportInitiator)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Transport.Fakes.ShimTlsTransportInitiator.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimTlsTransportInitiator.AllInstances.Complete">
            <summary>Sets the shim of TlsTransportInitiator.Complete()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimTlsTransportInitiator.AllInstances.ConnectAsyncTimeSpanTransportAsyncCallbackArgs">
            <summary>Sets the shim of TlsTransportInitiator.ConnectAsync(TimeSpan timeout, TransportAsyncCallbackArgs callbackArgs)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimTlsTransportInitiator.AllInstances.HandleInnerTransportConnectedTransportAsyncCallbackArgs">
            <summary>Sets the shim of TlsTransportInitiator.HandleInnerTransportConnected(TransportAsyncCallbackArgs innerArgs)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimTlsTransportInitiator.AllInstances.HandleTransportOpenedIAsyncResult">
            <summary>Sets the shim of TlsTransportInitiator.HandleTransportOpened(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimTlsTransportInitiator.AllInstances.OnCreateTransportTransportBaseTlsTransportSettings">
            <summary>Sets the shim of TlsTransportInitiator.OnCreateTransport(TransportBase innerTransport, TlsTransportSettings tlsTransportSettings)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimTlsTransportInitiator.AllInstances.ToString01">
            <summary>Sets the shim of TlsTransportInitiator.ToString()</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Transport.Fakes.ShimTlsTransportInitiator.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Transport.Fakes.ShimTlsTransportInitiator.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimTlsTransportInitiator.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimTlsTransportInitiator.Complete">
            <summary>Sets the shim of TlsTransportInitiator.Complete()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimTlsTransportInitiator.ConnectAsyncTimeSpanTransportAsyncCallbackArgs">
            <summary>Sets the shim of TlsTransportInitiator.ConnectAsync(TimeSpan timeout, TransportAsyncCallbackArgs callbackArgs)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimTlsTransportInitiator.ConstructorTlsTransportSettings">
            <summary>Sets the shim of TlsTransportInitiator.TlsTransportInitiator(TlsTransportSettings transportSettings)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimTlsTransportInitiator.HandleInnerTransportConnectedTransportAsyncCallbackArgs">
            <summary>Sets the shim of TlsTransportInitiator.HandleInnerTransportConnected(TransportAsyncCallbackArgs innerArgs)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimTlsTransportInitiator.HandleTransportOpenedIAsyncResult">
            <summary>Sets the shim of TlsTransportInitiator.HandleTransportOpened(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimTlsTransportInitiator.OnCreateTransportTransportBaseTlsTransportSettings">
            <summary>Sets the shim of TlsTransportInitiator.OnCreateTransport(TransportBase innerTransport, TlsTransportSettings tlsTransportSettings)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimTlsTransportInitiator.OnInnerTransportConnectedTransportAsyncCallbackArgs">
            <summary>Sets the shim of TlsTransportInitiator.OnInnerTransportConnected(TransportAsyncCallbackArgs innerArgs)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimTlsTransportInitiator.OnTransportOpenedIAsyncResult">
            <summary>Sets the shim of TlsTransportInitiator.OnTransportOpened(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimTlsTransportInitiator.StaticConstructor">
            <summary>Sets the shim of TlsTransportInitiator.TlsTransportInitiator()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimTlsTransportInitiator.ToString">
            <summary>Sets the shim of TlsTransportInitiator.ToString()</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Transport.Fakes.ShimTlsTransportListener">
            <summary>Shim type of Microsoft.Azure.Amqp.Transport.TlsTransportListener</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Transport.Fakes.ShimTlsTransportListener.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Transport.Fakes.ShimTlsTransportListener.#ctor(Microsoft.Azure.Amqp.Transport.TlsTransportListener)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimTlsTransportListener.AbortInternal">
            <summary>Sets the shim of TlsTransportListener.AbortInternal()</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Transport.Fakes.ShimTlsTransportListener.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimTlsTransportListener.AllInstances.AbortInternal">
            <summary>Sets the shim of TlsTransportListener.AbortInternal()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimTlsTransportListener.AllInstances.CloseInternal">
            <summary>Sets the shim of TlsTransportListener.CloseInternal()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimTlsTransportListener.AllInstances.HandleTransportOpenedIAsyncResult">
            <summary>Sets the shim of TlsTransportListener.HandleTransportOpened(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimTlsTransportListener.AllInstances.OnAcceptInnerTransportTransportListenerTransportAsyncCallbackArgs">
            <summary>Sets the shim of TlsTransportListener.OnAcceptInnerTransport(TransportListener innerListener, TransportAsyncCallbackArgs innerArgs)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimTlsTransportListener.AllInstances.OnCreateTransportTransportBaseTlsTransportSettings">
            <summary>Sets the shim of TlsTransportListener.OnCreateTransport(TransportBase innerTransport, TlsTransportSettings tlsTransportSettings)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimTlsTransportListener.AllInstances.OnInnerListenerClosedObjectEventArgs">
            <summary>Sets the shim of TlsTransportListener.OnInnerListenerClosed(Object sender, EventArgs e)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimTlsTransportListener.AllInstances.OnListen">
            <summary>Sets the shim of TlsTransportListener.OnListen()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimTlsTransportListener.AllInstances.OnTransportOpenedIAsyncResult">
            <summary>Sets the shim of TlsTransportListener.OnTransportOpened(IAsyncResult result)</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Transport.Fakes.ShimTlsTransportListener.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Transport.Fakes.ShimTlsTransportListener.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimTlsTransportListener.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimTlsTransportListener.CloseInternal">
            <summary>Sets the shim of TlsTransportListener.CloseInternal()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimTlsTransportListener.ConstructorTlsTransportSettings">
            <summary>Sets the shim of TlsTransportListener.TlsTransportListener(TlsTransportSettings transportSettings)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimTlsTransportListener.HandleTransportOpenedIAsyncResult">
            <summary>Sets the shim of TlsTransportListener.HandleTransportOpened(IAsyncResult result)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimTlsTransportListener.OnAcceptInnerTransportTransportListenerTransportAsyncCallbackArgs">
            <summary>Sets the shim of TlsTransportListener.OnAcceptInnerTransport(TransportListener innerListener, TransportAsyncCallbackArgs innerArgs)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimTlsTransportListener.OnCreateTransportTransportBaseTlsTransportSettings">
            <summary>Sets the shim of TlsTransportListener.OnCreateTransport(TransportBase innerTransport, TlsTransportSettings tlsTransportSettings)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimTlsTransportListener.OnInnerListenerClosedObjectEventArgs">
            <summary>Sets the shim of TlsTransportListener.OnInnerListenerClosed(Object sender, EventArgs e)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimTlsTransportListener.OnListen">
            <summary>Sets the shim of TlsTransportListener.OnListen()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimTlsTransportListener.OnTransportOpenedIAsyncResult">
            <summary>Sets the shim of TlsTransportListener.OnTransportOpened(IAsyncResult result)</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Transport.Fakes.ShimTlsTransportProvider">
            <summary>Shim type of Microsoft.Azure.Amqp.Transport.TlsTransportProvider</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Transport.Fakes.ShimTlsTransportProvider.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Transport.Fakes.ShimTlsTransportProvider.#ctor(Microsoft.Azure.Amqp.Transport.TlsTransportProvider)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Transport.Fakes.ShimTlsTransportProvider.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimTlsTransportProvider.AllInstances.OnCreateTransportTransportBaseBoolean">
            <summary>Sets the shim of TlsTransportProvider.OnCreateTransport(TransportBase innerTransport, Boolean isInitiator)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimTlsTransportProvider.AllInstances.SettingsGet">
            <summary>Sets the shim of TlsTransportProvider.get_Settings()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimTlsTransportProvider.AllInstances.ToString01">
            <summary>Sets the shim of TlsTransportProvider.ToString()</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Transport.Fakes.ShimTlsTransportProvider.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Transport.Fakes.ShimTlsTransportProvider.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimTlsTransportProvider.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimTlsTransportProvider.ConstructorTlsTransportSettings">
            <summary>Sets the shim of TlsTransportProvider.TlsTransportProvider(TlsTransportSettings tlsSettings)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimTlsTransportProvider.OnCreateTransportTransportBaseBoolean">
            <summary>Sets the shim of TlsTransportProvider.OnCreateTransport(TransportBase innerTransport, Boolean isInitiator)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimTlsTransportProvider.SettingsGet">
            <summary>Sets the shim of TlsTransportProvider.get_Settings()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimTlsTransportProvider.ToString">
            <summary>Sets the shim of TlsTransportProvider.ToString()</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Transport.Fakes.ShimTlsTransportSettings">
            <summary>Shim type of Microsoft.Azure.Amqp.Transport.TlsTransportSettings</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Transport.Fakes.ShimTlsTransportSettings.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Transport.Fakes.ShimTlsTransportSettings.#ctor(Microsoft.Azure.Amqp.Transport.TlsTransportSettings)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Transport.Fakes.ShimTlsTransportSettings.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimTlsTransportSettings.AllInstances.CertificateValidationCallbackGet">
            <summary>Sets the shim of TlsTransportSettings.get_CertificateValidationCallback()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimTlsTransportSettings.AllInstances.CertificateValidationCallbackSetRemoteCertificateValidationCallback">
            <summary>Sets the shim of TlsTransportSettings.set_CertificateValidationCallback(RemoteCertificateValidationCallback value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimTlsTransportSettings.AllInstances.CheckCertificateRevocationGet">
            <summary>Sets the shim of TlsTransportSettings.get_CheckCertificateRevocation()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimTlsTransportSettings.AllInstances.CheckCertificateRevocationSetBoolean">
            <summary>Sets the shim of TlsTransportSettings.set_CheckCertificateRevocation(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimTlsTransportSettings.AllInstances.CreateInitiator">
            <summary>Sets the shim of TlsTransportSettings.CreateInitiator()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimTlsTransportSettings.AllInstances.CreateListener">
            <summary>Sets the shim of TlsTransportSettings.CreateListener()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimTlsTransportSettings.AllInstances.InnerTransportSettingsGet">
            <summary>Sets the shim of TlsTransportSettings.get_InnerTransportSettings()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimTlsTransportSettings.AllInstances.IsInitiatorGet">
            <summary>Sets the shim of TlsTransportSettings.get_IsInitiator()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimTlsTransportSettings.AllInstances.IsInitiatorSetBoolean">
            <summary>Sets the shim of TlsTransportSettings.set_IsInitiator(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimTlsTransportSettings.AllInstances.ProtocolsGet">
            <summary>Sets the shim of TlsTransportSettings.get_Protocols()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimTlsTransportSettings.AllInstances.ProtocolsSetSslProtocols">
            <summary>Sets the shim of TlsTransportSettings.set_Protocols(SslProtocols value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimTlsTransportSettings.AllInstances.TargetHostGet">
            <summary>Sets the shim of TlsTransportSettings.get_TargetHost()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimTlsTransportSettings.AllInstances.TargetHostSetString">
            <summary>Sets the shim of TlsTransportSettings.set_TargetHost(String value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimTlsTransportSettings.AllInstances.ToString01">
            <summary>Sets the shim of TlsTransportSettings.ToString()</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Transport.Fakes.ShimTlsTransportSettings.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Transport.Fakes.ShimTlsTransportSettings.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimTlsTransportSettings.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimTlsTransportSettings.CertificateValidationCallbackGet">
            <summary>Sets the shim of TlsTransportSettings.get_CertificateValidationCallback()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimTlsTransportSettings.CertificateValidationCallbackSetRemoteCertificateValidationCallback">
            <summary>Sets the shim of TlsTransportSettings.set_CertificateValidationCallback(RemoteCertificateValidationCallback value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimTlsTransportSettings.CheckCertificateRevocationGet">
            <summary>Sets the shim of TlsTransportSettings.get_CheckCertificateRevocation()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimTlsTransportSettings.CheckCertificateRevocationSetBoolean">
            <summary>Sets the shim of TlsTransportSettings.set_CheckCertificateRevocation(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimTlsTransportSettings.Constructor">
            <summary>Sets the shim of TlsTransportSettings.TlsTransportSettings()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimTlsTransportSettings.ConstructorTransportSettings">
            <summary>Sets the shim of TlsTransportSettings.TlsTransportSettings(TransportSettings innerSettings)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimTlsTransportSettings.ConstructorTransportSettingsBoolean">
            <summary>Sets the shim of TlsTransportSettings.TlsTransportSettings(TransportSettings innerSettings, Boolean isInitiator)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimTlsTransportSettings.CreateInitiator">
            <summary>Sets the shim of TlsTransportSettings.CreateInitiator()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimTlsTransportSettings.CreateListener">
            <summary>Sets the shim of TlsTransportSettings.CreateListener()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimTlsTransportSettings.InnerTransportSettingsGet">
            <summary>Sets the shim of TlsTransportSettings.get_InnerTransportSettings()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimTlsTransportSettings.IsInitiatorGet">
            <summary>Sets the shim of TlsTransportSettings.get_IsInitiator()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimTlsTransportSettings.IsInitiatorSetBoolean">
            <summary>Sets the shim of TlsTransportSettings.set_IsInitiator(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimTlsTransportSettings.ProtocolsGet">
            <summary>Sets the shim of TlsTransportSettings.get_Protocols()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimTlsTransportSettings.ProtocolsSetSslProtocols">
            <summary>Sets the shim of TlsTransportSettings.set_Protocols(SslProtocols value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimTlsTransportSettings.TargetHostGet">
            <summary>Sets the shim of TlsTransportSettings.get_TargetHost()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimTlsTransportSettings.TargetHostSetString">
            <summary>Sets the shim of TlsTransportSettings.set_TargetHost(String value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimTlsTransportSettings.ToString">
            <summary>Sets the shim of TlsTransportSettings.ToString()</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Transport.Fakes.ShimTransportAsyncCallbackArgs">
            <summary>Shim type of Microsoft.Azure.Amqp.Transport.TransportAsyncCallbackArgs</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Transport.Fakes.ShimTransportAsyncCallbackArgs.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Transport.Fakes.ShimTransportAsyncCallbackArgs.#ctor(Microsoft.Azure.Amqp.Transport.TransportAsyncCallbackArgs)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Transport.Fakes.ShimTransportAsyncCallbackArgs.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimTransportAsyncCallbackArgs.AllInstances.AsyncStateSystemIAsyncResultget">
            <summary>Sets the shim of TransportAsyncCallbackArgs.System.IAsyncResult.get_AsyncState()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimTransportAsyncCallbackArgs.AllInstances.AsyncWaitHandleSystemIAsyncResultget">
            <summary>Sets the shim of TransportAsyncCallbackArgs.System.IAsyncResult.get_AsyncWaitHandle()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimTransportAsyncCallbackArgs.AllInstances.BufferGet">
            <summary>Sets the shim of TransportAsyncCallbackArgs.get_Buffer()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimTransportAsyncCallbackArgs.AllInstances.BufferSetByteArray">
            <summary>Sets the shim of TransportAsyncCallbackArgs.set_Buffer(Byte[] value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimTransportAsyncCallbackArgs.AllInstances.ByteBufferGet">
            <summary>Sets the shim of TransportAsyncCallbackArgs.get_ByteBuffer()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimTransportAsyncCallbackArgs.AllInstances.ByteBufferListGet">
            <summary>Sets the shim of TransportAsyncCallbackArgs.get_ByteBufferList()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimTransportAsyncCallbackArgs.AllInstances.ByteBufferListSetIListOfByteBuffer">
            <summary>Sets the shim of TransportAsyncCallbackArgs.set_ByteBufferList(IList`1&lt;ByteBuffer&gt; value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimTransportAsyncCallbackArgs.AllInstances.ByteBufferSetByteBuffer">
            <summary>Sets the shim of TransportAsyncCallbackArgs.set_ByteBuffer(ByteBuffer value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimTransportAsyncCallbackArgs.AllInstances.BytesTransferedGet">
            <summary>Sets the shim of TransportAsyncCallbackArgs.get_BytesTransfered()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimTransportAsyncCallbackArgs.AllInstances.BytesTransferedSetInt32">
            <summary>Sets the shim of TransportAsyncCallbackArgs.set_BytesTransfered(Int32 value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimTransportAsyncCallbackArgs.AllInstances.CompletedCallbackGet">
            <summary>Sets the shim of TransportAsyncCallbackArgs.get_CompletedCallback()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimTransportAsyncCallbackArgs.AllInstances.CompletedCallbackSetActionOfTransportAsyncCallbackArgs">
            <summary>Sets the shim of TransportAsyncCallbackArgs.set_CompletedCallback(Action`1&lt;TransportAsyncCallbackArgs&gt; value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimTransportAsyncCallbackArgs.AllInstances.CompletedSynchronouslyGet">
            <summary>Sets the shim of TransportAsyncCallbackArgs.get_CompletedSynchronously()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimTransportAsyncCallbackArgs.AllInstances.CompletedSynchronouslySetBoolean">
            <summary>Sets the shim of TransportAsyncCallbackArgs.set_CompletedSynchronously(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimTransportAsyncCallbackArgs.AllInstances.CompletedSynchronouslySystemIAsyncResultget">
            <summary>Sets the shim of TransportAsyncCallbackArgs.System.IAsyncResult.get_CompletedSynchronously()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimTransportAsyncCallbackArgs.AllInstances.CountGet">
            <summary>Sets the shim of TransportAsyncCallbackArgs.get_Count()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimTransportAsyncCallbackArgs.AllInstances.CountSetInt32">
            <summary>Sets the shim of TransportAsyncCallbackArgs.set_Count(Int32 value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimTransportAsyncCallbackArgs.AllInstances.ExceptionGet">
            <summary>Sets the shim of TransportAsyncCallbackArgs.get_Exception()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimTransportAsyncCallbackArgs.AllInstances.ExceptionSetException">
            <summary>Sets the shim of TransportAsyncCallbackArgs.set_Exception(Exception value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimTransportAsyncCallbackArgs.AllInstances.IsCompletedSystemIAsyncResultget">
            <summary>Sets the shim of TransportAsyncCallbackArgs.System.IAsyncResult.get_IsCompleted()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimTransportAsyncCallbackArgs.AllInstances.OffsetGet">
            <summary>Sets the shim of TransportAsyncCallbackArgs.get_Offset()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimTransportAsyncCallbackArgs.AllInstances.OffsetSetInt32">
            <summary>Sets the shim of TransportAsyncCallbackArgs.set_Offset(Int32 value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimTransportAsyncCallbackArgs.AllInstances.Reset">
            <summary>Sets the shim of TransportAsyncCallbackArgs.Reset()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimTransportAsyncCallbackArgs.AllInstances.SetBufferByteArrayInt32Int32">
            <summary>Sets the shim of TransportAsyncCallbackArgs.SetBuffer(Byte[] buffer, Int32 offset, Int32 count)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimTransportAsyncCallbackArgs.AllInstances.SetBufferByteBuffer">
            <summary>Sets the shim of TransportAsyncCallbackArgs.SetBuffer(ByteBuffer byteBuffer)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimTransportAsyncCallbackArgs.AllInstances.SetBufferIListOfByteBuffer">
            <summary>Sets the shim of TransportAsyncCallbackArgs.SetBuffer(IList`1&lt;ByteBuffer&gt; byteBufferList)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimTransportAsyncCallbackArgs.AllInstances.TransportGet">
            <summary>Sets the shim of TransportAsyncCallbackArgs.get_Transport()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimTransportAsyncCallbackArgs.AllInstances.TransportSetTransportBase">
            <summary>Sets the shim of TransportAsyncCallbackArgs.set_Transport(TransportBase value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimTransportAsyncCallbackArgs.AllInstances.UserToken2Get">
            <summary>Sets the shim of TransportAsyncCallbackArgs.get_UserToken2()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimTransportAsyncCallbackArgs.AllInstances.UserToken2SetObject">
            <summary>Sets the shim of TransportAsyncCallbackArgs.set_UserToken2(Object value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimTransportAsyncCallbackArgs.AllInstances.UserTokenGet">
            <summary>Sets the shim of TransportAsyncCallbackArgs.get_UserToken()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimTransportAsyncCallbackArgs.AllInstances.UserTokenSetObject">
            <summary>Sets the shim of TransportAsyncCallbackArgs.set_UserToken(Object value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimTransportAsyncCallbackArgs.AsyncStateSystemIAsyncResultget">
            <summary>Sets the shim of TransportAsyncCallbackArgs.System.IAsyncResult.get_AsyncState()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimTransportAsyncCallbackArgs.AsyncWaitHandleSystemIAsyncResultget">
            <summary>Sets the shim of TransportAsyncCallbackArgs.System.IAsyncResult.get_AsyncWaitHandle()</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Transport.Fakes.ShimTransportAsyncCallbackArgs.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Transport.Fakes.ShimTransportAsyncCallbackArgs.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimTransportAsyncCallbackArgs.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Transport.Fakes.ShimTransportAsyncCallbackArgs.Bind(System.IAsyncResult)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimTransportAsyncCallbackArgs.BufferGet">
            <summary>Sets the shim of TransportAsyncCallbackArgs.get_Buffer()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimTransportAsyncCallbackArgs.BufferSetByteArray">
            <summary>Sets the shim of TransportAsyncCallbackArgs.set_Buffer(Byte[] value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimTransportAsyncCallbackArgs.ByteBufferGet">
            <summary>Sets the shim of TransportAsyncCallbackArgs.get_ByteBuffer()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimTransportAsyncCallbackArgs.ByteBufferListGet">
            <summary>Sets the shim of TransportAsyncCallbackArgs.get_ByteBufferList()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimTransportAsyncCallbackArgs.ByteBufferListSetIListOfByteBuffer">
            <summary>Sets the shim of TransportAsyncCallbackArgs.set_ByteBufferList(IList`1&lt;ByteBuffer&gt; value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimTransportAsyncCallbackArgs.ByteBufferSetByteBuffer">
            <summary>Sets the shim of TransportAsyncCallbackArgs.set_ByteBuffer(ByteBuffer value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimTransportAsyncCallbackArgs.BytesTransferedGet">
            <summary>Sets the shim of TransportAsyncCallbackArgs.get_BytesTransfered()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimTransportAsyncCallbackArgs.BytesTransferedSetInt32">
            <summary>Sets the shim of TransportAsyncCallbackArgs.set_BytesTransfered(Int32 value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimTransportAsyncCallbackArgs.CompletedCallbackGet">
            <summary>Sets the shim of TransportAsyncCallbackArgs.get_CompletedCallback()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimTransportAsyncCallbackArgs.CompletedCallbackSetActionOfTransportAsyncCallbackArgs">
            <summary>Sets the shim of TransportAsyncCallbackArgs.set_CompletedCallback(Action`1&lt;TransportAsyncCallbackArgs&gt; value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimTransportAsyncCallbackArgs.CompletedSynchronouslyGet">
            <summary>Sets the shim of TransportAsyncCallbackArgs.get_CompletedSynchronously()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimTransportAsyncCallbackArgs.CompletedSynchronouslySetBoolean">
            <summary>Sets the shim of TransportAsyncCallbackArgs.set_CompletedSynchronously(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimTransportAsyncCallbackArgs.CompletedSynchronouslySystemIAsyncResultget">
            <summary>Sets the shim of TransportAsyncCallbackArgs.System.IAsyncResult.get_CompletedSynchronously()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimTransportAsyncCallbackArgs.Constructor">
            <summary>Sets the shim of TransportAsyncCallbackArgs.TransportAsyncCallbackArgs()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimTransportAsyncCallbackArgs.CountGet">
            <summary>Sets the shim of TransportAsyncCallbackArgs.get_Count()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimTransportAsyncCallbackArgs.CountSetInt32">
            <summary>Sets the shim of TransportAsyncCallbackArgs.set_Count(Int32 value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimTransportAsyncCallbackArgs.ExceptionGet">
            <summary>Sets the shim of TransportAsyncCallbackArgs.get_Exception()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimTransportAsyncCallbackArgs.ExceptionSetException">
            <summary>Sets the shim of TransportAsyncCallbackArgs.set_Exception(Exception value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimTransportAsyncCallbackArgs.IsCompletedSystemIAsyncResultget">
            <summary>Sets the shim of TransportAsyncCallbackArgs.System.IAsyncResult.get_IsCompleted()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimTransportAsyncCallbackArgs.OffsetGet">
            <summary>Sets the shim of TransportAsyncCallbackArgs.get_Offset()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimTransportAsyncCallbackArgs.OffsetSetInt32">
            <summary>Sets the shim of TransportAsyncCallbackArgs.set_Offset(Int32 value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimTransportAsyncCallbackArgs.Reset">
            <summary>Sets the shim of TransportAsyncCallbackArgs.Reset()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimTransportAsyncCallbackArgs.SetBufferByteArrayInt32Int32">
            <summary>Sets the shim of TransportAsyncCallbackArgs.SetBuffer(Byte[] buffer, Int32 offset, Int32 count)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimTransportAsyncCallbackArgs.SetBufferByteBuffer">
            <summary>Sets the shim of TransportAsyncCallbackArgs.SetBuffer(ByteBuffer byteBuffer)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimTransportAsyncCallbackArgs.SetBufferIListOfByteBuffer">
            <summary>Sets the shim of TransportAsyncCallbackArgs.SetBuffer(IList`1&lt;ByteBuffer&gt; byteBufferList)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimTransportAsyncCallbackArgs.TransportGet">
            <summary>Sets the shim of TransportAsyncCallbackArgs.get_Transport()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimTransportAsyncCallbackArgs.TransportSetTransportBase">
            <summary>Sets the shim of TransportAsyncCallbackArgs.set_Transport(TransportBase value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimTransportAsyncCallbackArgs.UserToken2Get">
            <summary>Sets the shim of TransportAsyncCallbackArgs.get_UserToken2()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimTransportAsyncCallbackArgs.UserToken2SetObject">
            <summary>Sets the shim of TransportAsyncCallbackArgs.set_UserToken2(Object value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimTransportAsyncCallbackArgs.UserTokenGet">
            <summary>Sets the shim of TransportAsyncCallbackArgs.get_UserToken()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimTransportAsyncCallbackArgs.UserTokenSetObject">
            <summary>Sets the shim of TransportAsyncCallbackArgs.set_UserToken(Object value)</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Transport.Fakes.ShimTransportBase">
            <summary>Shim type of Microsoft.Azure.Amqp.Transport.TransportBase</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Transport.Fakes.ShimTransportBase.#ctor(Microsoft.Azure.Amqp.Transport.TransportBase)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Transport.Fakes.ShimTransportBase.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimTransportBase.AllInstances.IsAuthenticatedGet">
            <summary>Sets the shim of TransportBase.get_IsAuthenticated()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimTransportBase.AllInstances.IsSecureGet">
            <summary>Sets the shim of TransportBase.get_IsSecure()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimTransportBase.AllInstances.OnCloseTimeSpan">
            <summary>Sets the shim of TransportBase.OnClose(TimeSpan timeout)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimTransportBase.AllInstances.OnOpenTimeSpan">
            <summary>Sets the shim of TransportBase.OnOpen(TimeSpan timeout)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimTransportBase.AllInstances.OpenInternal">
            <summary>Sets the shim of TransportBase.OpenInternal()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimTransportBase.AllInstances.PrincipalGet">
            <summary>Sets the shim of TransportBase.get_Principal()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimTransportBase.AllInstances.PrincipalSetIPrincipal">
            <summary>Sets the shim of TransportBase.set_Principal(IPrincipal value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimTransportBase.AllInstances.RequiresCompleteFramesGet">
            <summary>Sets the shim of TransportBase.get_RequiresCompleteFrames()</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Transport.Fakes.ShimTransportBase.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Transport.Fakes.ShimTransportBase.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimTransportBase.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimTransportBase.ConstructorString">
            <summary>Sets the shim of TransportBase.TransportBase(String type)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimTransportBase.ConstructorStringSequenceNumber">
            <summary>Sets the shim of TransportBase.TransportBase(String type, SequenceNumber identifier)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimTransportBase.IsAuthenticatedGet">
            <summary>Sets the shim of TransportBase.get_IsAuthenticated()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimTransportBase.IsSecureGet">
            <summary>Sets the shim of TransportBase.get_IsSecure()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimTransportBase.OnCloseTimeSpan">
            <summary>Sets the shim of TransportBase.OnClose(TimeSpan timeout)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimTransportBase.OnOpenTimeSpan">
            <summary>Sets the shim of TransportBase.OnOpen(TimeSpan timeout)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimTransportBase.OpenInternal">
            <summary>Sets the shim of TransportBase.OpenInternal()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimTransportBase.PrincipalGet">
            <summary>Sets the shim of TransportBase.get_Principal()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimTransportBase.PrincipalSetIPrincipal">
            <summary>Sets the shim of TransportBase.set_Principal(IPrincipal value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimTransportBase.RequiresCompleteFramesGet">
            <summary>Sets the shim of TransportBase.get_RequiresCompleteFrames()</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Transport.Fakes.ShimTransportInitiator">
            <summary>Shim type of Microsoft.Azure.Amqp.Transport.TransportInitiator</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Transport.Fakes.ShimTransportInitiator.#ctor(Microsoft.Azure.Amqp.Transport.TransportInitiator)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Transport.Fakes.ShimTransportInitiator.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Transport.Fakes.ShimTransportInitiator.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Transport.Fakes.ShimTransportInitiator.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimTransportInitiator.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimTransportInitiator.Constructor">
            <summary>Sets the shim of TransportInitiator.TransportInitiator()</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Transport.Fakes.ShimTransportListener">
            <summary>Shim type of Microsoft.Azure.Amqp.Transport.TransportListener</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Transport.Fakes.ShimTransportListener.#ctor(Microsoft.Azure.Amqp.Transport.TransportListener)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimTransportListener.AbortInternal">
            <summary>Sets the shim of TransportListener.AbortInternal()</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Transport.Fakes.ShimTransportListener.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimTransportListener.AllInstances.AbortInternal">
            <summary>Sets the shim of TransportListener.AbortInternal()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimTransportListener.AllInstances.CloseInternal">
            <summary>Sets the shim of TransportListener.CloseInternal()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimTransportListener.AllInstances.ListenActionOfTransportListenerTransportAsyncCallbackArgs">
            <summary>Sets the shim of TransportListener.Listen(Action`2&lt;TransportListener,TransportAsyncCallbackArgs&gt; callback)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimTransportListener.AllInstances.NotifyAcceptObject">
            <summary>Sets the shim of TransportListener.NotifyAccept(Object state)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimTransportListener.AllInstances.OnCloseTimeSpan">
            <summary>Sets the shim of TransportListener.OnClose(TimeSpan timeout)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimTransportListener.AllInstances.OnOpenTimeSpan">
            <summary>Sets the shim of TransportListener.OnOpen(TimeSpan timeout)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimTransportListener.AllInstances.OnTransportAcceptedTransportAsyncCallbackArgs">
            <summary>Sets the shim of TransportListener.OnTransportAccepted(TransportAsyncCallbackArgs args)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimTransportListener.AllInstances.OpenInternal">
            <summary>Sets the shim of TransportListener.OpenInternal()</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Transport.Fakes.ShimTransportListener.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Transport.Fakes.ShimTransportListener.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimTransportListener.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimTransportListener.CloseInternal">
            <summary>Sets the shim of TransportListener.CloseInternal()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimTransportListener.ConstructorString">
            <summary>Sets the shim of TransportListener.TransportListener(String type)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimTransportListener.ListenActionOfTransportListenerTransportAsyncCallbackArgs">
            <summary>Sets the shim of TransportListener.Listen(Action`2&lt;TransportListener,TransportAsyncCallbackArgs&gt; callback)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimTransportListener.NotifyAcceptObject">
            <summary>Sets the shim of TransportListener.NotifyAccept(Object state)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimTransportListener.OnCloseTimeSpan">
            <summary>Sets the shim of TransportListener.OnClose(TimeSpan timeout)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimTransportListener.OnOpenTimeSpan">
            <summary>Sets the shim of TransportListener.OnOpen(TimeSpan timeout)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimTransportListener.OnTransportAcceptedTransportAsyncCallbackArgs">
            <summary>Sets the shim of TransportListener.OnTransportAccepted(TransportAsyncCallbackArgs args)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimTransportListener.OpenInternal">
            <summary>Sets the shim of TransportListener.OpenInternal()</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Transport.Fakes.ShimTransportProvider">
            <summary>Shim type of Microsoft.Azure.Amqp.Transport.TransportProvider</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Transport.Fakes.ShimTransportProvider.#ctor(Microsoft.Azure.Amqp.Transport.TransportProvider)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Transport.Fakes.ShimTransportProvider.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimTransportProvider.AllInstances.CreateTransportTransportBaseBoolean">
            <summary>Sets the shim of TransportProvider.CreateTransport(TransportBase innerTransport, Boolean isInitiator)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimTransportProvider.AllInstances.DefaultVersionGet">
            <summary>Sets the shim of TransportProvider.get_DefaultVersion()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimTransportProvider.AllInstances.ProtocolIdGet">
            <summary>Sets the shim of TransportProvider.get_ProtocolId()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimTransportProvider.AllInstances.ProtocolIdSetProtocolId">
            <summary>Sets the shim of TransportProvider.set_ProtocolId(ProtocolId value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimTransportProvider.AllInstances.TryGetVersionAmqpVersionAmqpVersionOut">
            <summary>Sets the shim of TransportProvider.TryGetVersion(AmqpVersion requestedVersion, AmqpVersion&amp; supportedVersion)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimTransportProvider.AllInstances.VersionsGet">
            <summary>Sets the shim of TransportProvider.get_Versions()</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Transport.Fakes.ShimTransportProvider.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Transport.Fakes.ShimTransportProvider.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimTransportProvider.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimTransportProvider.Constructor">
            <summary>Sets the shim of TransportProvider.TransportProvider()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimTransportProvider.CreateTransportTransportBaseBoolean">
            <summary>Sets the shim of TransportProvider.CreateTransport(TransportBase innerTransport, Boolean isInitiator)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimTransportProvider.DefaultVersionGet">
            <summary>Sets the shim of TransportProvider.get_DefaultVersion()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimTransportProvider.ProtocolIdGet">
            <summary>Sets the shim of TransportProvider.get_ProtocolId()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimTransportProvider.ProtocolIdSetProtocolId">
            <summary>Sets the shim of TransportProvider.set_ProtocolId(ProtocolId value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimTransportProvider.TryGetVersionAmqpVersionAmqpVersionOut">
            <summary>Sets the shim of TransportProvider.TryGetVersion(AmqpVersion requestedVersion, AmqpVersion&amp; supportedVersion)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimTransportProvider.VersionsGet">
            <summary>Sets the shim of TransportProvider.get_Versions()</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Transport.Fakes.ShimTransportSettings">
            <summary>Shim type of Microsoft.Azure.Amqp.Transport.TransportSettings</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Transport.Fakes.ShimTransportSettings.#ctor(Microsoft.Azure.Amqp.Transport.TransportSettings)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Transport.Fakes.ShimTransportSettings.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimTransportSettings.AllInstances.ListenerAcceptorCountGet">
            <summary>Sets the shim of TransportSettings.get_ListenerAcceptorCount()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimTransportSettings.AllInstances.ListenerAcceptorCountSetInt32">
            <summary>Sets the shim of TransportSettings.set_ListenerAcceptorCount(Int32 value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimTransportSettings.AllInstances.ReceiveBufferSizeGet">
            <summary>Sets the shim of TransportSettings.get_ReceiveBufferSize()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimTransportSettings.AllInstances.ReceiveBufferSizeSetInt32">
            <summary>Sets the shim of TransportSettings.set_ReceiveBufferSize(Int32 value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimTransportSettings.AllInstances.SendBufferSizeGet">
            <summary>Sets the shim of TransportSettings.get_SendBufferSize()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimTransportSettings.AllInstances.SendBufferSizeSetInt32">
            <summary>Sets the shim of TransportSettings.set_SendBufferSize(Int32 value)</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Transport.Fakes.ShimTransportSettings.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Transport.Fakes.ShimTransportSettings.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimTransportSettings.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimTransportSettings.Constructor">
            <summary>Sets the shim of TransportSettings.TransportSettings()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimTransportSettings.ListenerAcceptorCountGet">
            <summary>Sets the shim of TransportSettings.get_ListenerAcceptorCount()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimTransportSettings.ListenerAcceptorCountSetInt32">
            <summary>Sets the shim of TransportSettings.set_ListenerAcceptorCount(Int32 value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimTransportSettings.ReceiveBufferSizeGet">
            <summary>Sets the shim of TransportSettings.get_ReceiveBufferSize()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimTransportSettings.ReceiveBufferSizeSetInt32">
            <summary>Sets the shim of TransportSettings.set_ReceiveBufferSize(Int32 value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimTransportSettings.SendBufferSizeGet">
            <summary>Sets the shim of TransportSettings.get_SendBufferSize()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimTransportSettings.SendBufferSizeSetInt32">
            <summary>Sets the shim of TransportSettings.set_SendBufferSize(Int32 value)</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Transport.Fakes.ShimWebSocketTransport">
            <summary>Shim type of Microsoft.Azure.Amqp.Transport.WebSocketTransport</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Transport.Fakes.ShimWebSocketTransport.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Transport.Fakes.ShimWebSocketTransport.#ctor(Microsoft.Azure.Amqp.Transport.WebSocketTransport)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimWebSocketTransport.AbortInternal">
            <summary>Sets the shim of WebSocketTransport.AbortInternal()</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Transport.Fakes.ShimWebSocketTransport.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimWebSocketTransport.AllInstances.AbortInternal">
            <summary>Sets the shim of WebSocketTransport.AbortInternal()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimWebSocketTransport.AllInstances.CloseInternal">
            <summary>Sets the shim of WebSocketTransport.CloseInternal()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimWebSocketTransport.AllInstances.LocalEndPointGet">
            <summary>Sets the shim of WebSocketTransport.get_LocalEndPoint()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimWebSocketTransport.AllInstances.OnReadCompleteTransportAsyncCallbackArgsInt32DateTime">
            <summary>Sets the shim of WebSocketTransport.OnReadComplete(TransportAsyncCallbackArgs args, Int32 count, DateTime startTime)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimWebSocketTransport.AllInstances.OnWriteCompleteTransportAsyncCallbackArgsArraySegmentOfByteByteBufferDateTime">
            <summary>Sets the shim of WebSocketTransport.OnWriteComplete(TransportAsyncCallbackArgs args, ArraySegment`1&lt;Byte&gt; buffer, ByteBuffer byteBuffer, DateTime startTime)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimWebSocketTransport.AllInstances.OpenInternal">
            <summary>Sets the shim of WebSocketTransport.OpenInternal()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimWebSocketTransport.AllInstances.ReadAsyncTransportAsyncCallbackArgs">
            <summary>Sets the shim of WebSocketTransport.ReadAsync(TransportAsyncCallbackArgs args)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimWebSocketTransport.AllInstances.RemoteEndPointGet">
            <summary>Sets the shim of WebSocketTransport.get_RemoteEndPoint()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimWebSocketTransport.AllInstances.SetMonitorITransportMonitor">
            <summary>Sets the shim of WebSocketTransport.SetMonitor(ITransportMonitor usageMeter)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimWebSocketTransport.AllInstances.WriteAsyncTransportAsyncCallbackArgs">
            <summary>Sets the shim of WebSocketTransport.WriteAsync(TransportAsyncCallbackArgs args)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimWebSocketTransport.AllInstances._CloseInternalb__16_0Task">
            <summary>Sets the shim of WebSocketTransport.&lt;CloseInternal&gt;b__16_0(Task t)</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Transport.Fakes.ShimWebSocketTransport.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Transport.Fakes.ShimWebSocketTransport.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimWebSocketTransport.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimWebSocketTransport.CloseInternal">
            <summary>Sets the shim of WebSocketTransport.CloseInternal()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimWebSocketTransport.ConstructorWebSocketUri">
            <summary>Sets the shim of WebSocketTransport.WebSocketTransport(WebSocket webSocket, Uri uri)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimWebSocketTransport.LocalEndPointGet">
            <summary>Sets the shim of WebSocketTransport.get_LocalEndPoint()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimWebSocketTransport.MatchSchemeString">
            <summary>Sets the shim of WebSocketTransport.MatchScheme(String scheme)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimWebSocketTransport.OnReadCompleteTransportAsyncCallbackArgsInt32DateTime">
            <summary>Sets the shim of WebSocketTransport.OnReadComplete(TransportAsyncCallbackArgs args, Int32 count, DateTime startTime)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimWebSocketTransport.OnWriteCompleteTransportAsyncCallbackArgsArraySegmentOfByteByteBufferDateTime">
            <summary>Sets the shim of WebSocketTransport.OnWriteComplete(TransportAsyncCallbackArgs args, ArraySegment`1&lt;Byte&gt; buffer, ByteBuffer byteBuffer, DateTime startTime)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimWebSocketTransport.OpenInternal">
            <summary>Sets the shim of WebSocketTransport.OpenInternal()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimWebSocketTransport.ReadAsyncTransportAsyncCallbackArgs">
            <summary>Sets the shim of WebSocketTransport.ReadAsync(TransportAsyncCallbackArgs args)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimWebSocketTransport.RemoteEndPointGet">
            <summary>Sets the shim of WebSocketTransport.get_RemoteEndPoint()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimWebSocketTransport.SetMonitorITransportMonitor">
            <summary>Sets the shim of WebSocketTransport.SetMonitor(ITransportMonitor usageMeter)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimWebSocketTransport.WriteAsyncTransportAsyncCallbackArgs">
            <summary>Sets the shim of WebSocketTransport.WriteAsync(TransportAsyncCallbackArgs args)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimWebSocketTransport._CloseInternalb__16_0Task">
            <summary>Sets the shim of WebSocketTransport.&lt;CloseInternal&gt;b__16_0(Task t)</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Transport.Fakes.ShimWebSocketTransportSettings">
            <summary>Shim type of Microsoft.Azure.Amqp.Transport.WebSocketTransportSettings</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Transport.Fakes.ShimWebSocketTransportSettings.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Transport.Fakes.ShimWebSocketTransportSettings.#ctor(Microsoft.Azure.Amqp.Transport.WebSocketTransportSettings)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Transport.Fakes.ShimWebSocketTransportSettings.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimWebSocketTransportSettings.AllInstances.CreateInitiator">
            <summary>Sets the shim of WebSocketTransportSettings.CreateInitiator()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimWebSocketTransportSettings.AllInstances.CreateListener">
            <summary>Sets the shim of WebSocketTransportSettings.CreateListener()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimWebSocketTransportSettings.AllInstances.SubProtocolGet">
            <summary>Sets the shim of WebSocketTransportSettings.get_SubProtocol()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimWebSocketTransportSettings.AllInstances.SubProtocolSetString">
            <summary>Sets the shim of WebSocketTransportSettings.set_SubProtocol(String value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimWebSocketTransportSettings.AllInstances.UriGet">
            <summary>Sets the shim of WebSocketTransportSettings.get_Uri()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimWebSocketTransportSettings.AllInstances.UriSetUri">
            <summary>Sets the shim of WebSocketTransportSettings.set_Uri(Uri value)</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Transport.Fakes.ShimWebSocketTransportSettings.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Transport.Fakes.ShimWebSocketTransportSettings.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimWebSocketTransportSettings.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimWebSocketTransportSettings.Constructor">
            <summary>Sets the shim of WebSocketTransportSettings.WebSocketTransportSettings()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimWebSocketTransportSettings.CreateInitiator">
            <summary>Sets the shim of WebSocketTransportSettings.CreateInitiator()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimWebSocketTransportSettings.CreateListener">
            <summary>Sets the shim of WebSocketTransportSettings.CreateListener()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimWebSocketTransportSettings.SubProtocolGet">
            <summary>Sets the shim of WebSocketTransportSettings.get_SubProtocol()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimWebSocketTransportSettings.SubProtocolSetString">
            <summary>Sets the shim of WebSocketTransportSettings.set_SubProtocol(String value)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimWebSocketTransportSettings.UriGet">
            <summary>Sets the shim of WebSocketTransportSettings.get_Uri()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.ShimWebSocketTransportSettings.UriSetUri">
            <summary>Sets the shim of WebSocketTransportSettings.set_Uri(Uri value)</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Transport.Fakes.StubTlsTransport">
            <summary>Stub type of Microsoft.Azure.Amqp.Transport.TlsTransport</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Transport.Fakes.StubTlsTransport.#ctor(Microsoft.Azure.Amqp.Transport.TransportBase,Microsoft.Azure.Amqp.Transport.TlsTransportSettings)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Transport.Fakes.StubTlsTransport.AbortInternal">
            <summary>Sets the stub of TlsTransport.AbortInternal()</summary>
        </member>
        <member name="F:Microsoft.Azure.Amqp.Transport.Fakes.StubTlsTransport.AbortInternal01">
            <summary>Sets the stub of TlsTransport.AbortInternal()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.StubTlsTransport.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Transport.Fakes.StubTlsTransport.CloseInternal">
            <summary>Sets the stub of TlsTransport.CloseInternal()</summary>
        </member>
        <member name="F:Microsoft.Azure.Amqp.Transport.Fakes.StubTlsTransport.CloseInternal01">
            <summary>Sets the stub of TlsTransport.CloseInternal()</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Transport.Fakes.StubTlsTransport.InitializeStub">
            <summary>Initializes a new instance of type StubTlsTransport</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.StubTlsTransport.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.StubTlsTransport.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.StubTlsTransport.IsSecure">
            <summary>Sets the stub of TlsTransport.get_IsSecure()</summary>
        </member>
        <member name="F:Microsoft.Azure.Amqp.Transport.Fakes.StubTlsTransport.IsSecureGet">
            <summary>Sets the stub of TlsTransport.get_IsSecure()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.StubTlsTransport.LocalEndPoint">
            <summary>Sets the stub of TlsTransport.get_LocalEndPoint()</summary>
        </member>
        <member name="F:Microsoft.Azure.Amqp.Transport.Fakes.StubTlsTransport.LocalEndPointGet">
            <summary>Sets the stub of TlsTransport.get_LocalEndPoint()</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Transport.Fakes.StubTlsTransport.OnClose(System.TimeSpan)">
            <summary>Sets the stub of TransportBase.OnClose(TimeSpan timeout)</summary>
        </member>
        <member name="F:Microsoft.Azure.Amqp.Transport.Fakes.StubTlsTransport.OnCloseTimeSpan">
            <summary>Sets the stub of TransportBase.OnClose(TimeSpan timeout)</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Transport.Fakes.StubTlsTransport.OnOpen(System.TimeSpan)">
            <summary>Sets the stub of TransportBase.OnOpen(TimeSpan timeout)</summary>
        </member>
        <member name="F:Microsoft.Azure.Amqp.Transport.Fakes.StubTlsTransport.OnOpenTimeSpan">
            <summary>Sets the stub of TransportBase.OnOpen(TimeSpan timeout)</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Transport.Fakes.StubTlsTransport.OpenInternal">
            <summary>Sets the stub of TlsTransport.OpenInternal()</summary>
        </member>
        <member name="F:Microsoft.Azure.Amqp.Transport.Fakes.StubTlsTransport.OpenInternal01">
            <summary>Sets the stub of TlsTransport.OpenInternal()</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Transport.Fakes.StubTlsTransport.ReadAsync(Microsoft.Azure.Amqp.Transport.TransportAsyncCallbackArgs)">
            <summary>Sets the stub of TlsTransport.ReadAsync(TransportAsyncCallbackArgs args)</summary>
        </member>
        <member name="F:Microsoft.Azure.Amqp.Transport.Fakes.StubTlsTransport.ReadAsyncTransportAsyncCallbackArgs">
            <summary>Sets the stub of TlsTransport.ReadAsync(TransportAsyncCallbackArgs args)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.StubTlsTransport.RemoteEndPoint">
            <summary>Sets the stub of TlsTransport.get_RemoteEndPoint()</summary>
        </member>
        <member name="F:Microsoft.Azure.Amqp.Transport.Fakes.StubTlsTransport.RemoteEndPointGet">
            <summary>Sets the stub of TlsTransport.get_RemoteEndPoint()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.StubTlsTransport.RequiresCompleteFrames">
            <summary>Sets the stub of TransportBase.get_RequiresCompleteFrames()</summary>
        </member>
        <member name="F:Microsoft.Azure.Amqp.Transport.Fakes.StubTlsTransport.RequiresCompleteFramesGet">
            <summary>Sets the stub of TransportBase.get_RequiresCompleteFrames()</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Transport.Fakes.StubTlsTransport.SetMonitor(Microsoft.Azure.Amqp.ITransportMonitor)">
            <summary>Sets the stub of TlsTransport.SetMonitor(ITransportMonitor usageMeter)</summary>
        </member>
        <member name="F:Microsoft.Azure.Amqp.Transport.Fakes.StubTlsTransport.SetMonitorITransportMonitor">
            <summary>Sets the stub of TlsTransport.SetMonitor(ITransportMonitor usageMeter)</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Transport.Fakes.StubTlsTransport.ToString">
            <summary>Sets the stub of AmqpObject.ToString()</summary>
        </member>
        <member name="F:Microsoft.Azure.Amqp.Transport.Fakes.StubTlsTransport.ToString01">
            <summary>Sets the stub of AmqpObject.ToString()</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Transport.Fakes.StubTlsTransport.WriteAsync(Microsoft.Azure.Amqp.Transport.TransportAsyncCallbackArgs)">
            <summary>Sets the stub of TlsTransport.WriteAsync(TransportAsyncCallbackArgs args)</summary>
        </member>
        <member name="F:Microsoft.Azure.Amqp.Transport.Fakes.StubTlsTransport.WriteAsyncTransportAsyncCallbackArgs">
            <summary>Sets the stub of TlsTransport.WriteAsync(TransportAsyncCallbackArgs args)</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Transport.Fakes.StubTlsTransportInitiator">
            <summary>Stub type of Microsoft.Azure.Amqp.Transport.TlsTransportInitiator</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Transport.Fakes.StubTlsTransportInitiator.#ctor(Microsoft.Azure.Amqp.Transport.TlsTransportSettings)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.StubTlsTransportInitiator.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Transport.Fakes.StubTlsTransportInitiator.ConnectAsync(System.TimeSpan,Microsoft.Azure.Amqp.Transport.TransportAsyncCallbackArgs)">
            <summary>Sets the stub of TlsTransportInitiator.ConnectAsync(TimeSpan timeout, TransportAsyncCallbackArgs callbackArgs)</summary>
        </member>
        <member name="F:Microsoft.Azure.Amqp.Transport.Fakes.StubTlsTransportInitiator.ConnectAsyncTimeSpanTransportAsyncCallbackArgs">
            <summary>Sets the stub of TlsTransportInitiator.ConnectAsync(TimeSpan timeout, TransportAsyncCallbackArgs callbackArgs)</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Transport.Fakes.StubTlsTransportInitiator.InitializeStub">
            <summary>Initializes a new instance of type StubTlsTransportInitiator</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.StubTlsTransportInitiator.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.StubTlsTransportInitiator.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Transport.Fakes.StubTlsTransportInitiator.OnCreateTransport(Microsoft.Azure.Amqp.Transport.TransportBase,Microsoft.Azure.Amqp.Transport.TlsTransportSettings)">
            <summary>Sets the stub of TlsTransportInitiator.OnCreateTransport(TransportBase innerTransport, TlsTransportSettings tlsTransportSettings)</summary>
        </member>
        <member name="F:Microsoft.Azure.Amqp.Transport.Fakes.StubTlsTransportInitiator.OnCreateTransportTransportBaseTlsTransportSettings">
            <summary>Sets the stub of TlsTransportInitiator.OnCreateTransport(TransportBase innerTransport, TlsTransportSettings tlsTransportSettings)</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Transport.Fakes.StubTlsTransportInitiator.ToString">
            <summary>Sets the stub of TlsTransportInitiator.ToString()</summary>
        </member>
        <member name="F:Microsoft.Azure.Amqp.Transport.Fakes.StubTlsTransportInitiator.ToString01">
            <summary>Sets the stub of TlsTransportInitiator.ToString()</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Transport.Fakes.StubTlsTransportListener">
            <summary>Stub type of Microsoft.Azure.Amqp.Transport.TlsTransportListener</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Transport.Fakes.StubTlsTransportListener.#ctor(Microsoft.Azure.Amqp.Transport.TlsTransportSettings)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Transport.Fakes.StubTlsTransportListener.AbortInternal">
            <summary>Sets the stub of TlsTransportListener.AbortInternal()</summary>
        </member>
        <member name="F:Microsoft.Azure.Amqp.Transport.Fakes.StubTlsTransportListener.AbortInternal01">
            <summary>Sets the stub of TlsTransportListener.AbortInternal()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.StubTlsTransportListener.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Transport.Fakes.StubTlsTransportListener.CloseInternal">
            <summary>Sets the stub of TlsTransportListener.CloseInternal()</summary>
        </member>
        <member name="F:Microsoft.Azure.Amqp.Transport.Fakes.StubTlsTransportListener.CloseInternal01">
            <summary>Sets the stub of TlsTransportListener.CloseInternal()</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Transport.Fakes.StubTlsTransportListener.InitializeStub">
            <summary>Initializes a new instance of type StubTlsTransportListener</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.StubTlsTransportListener.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.StubTlsTransportListener.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Transport.Fakes.StubTlsTransportListener.OnClose(System.TimeSpan)">
            <summary>Sets the stub of TransportListener.OnClose(TimeSpan timeout)</summary>
        </member>
        <member name="F:Microsoft.Azure.Amqp.Transport.Fakes.StubTlsTransportListener.OnCloseTimeSpan">
            <summary>Sets the stub of TransportListener.OnClose(TimeSpan timeout)</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Transport.Fakes.StubTlsTransportListener.OnCreateTransport(Microsoft.Azure.Amqp.Transport.TransportBase,Microsoft.Azure.Amqp.Transport.TlsTransportSettings)">
            <summary>Sets the stub of TlsTransportListener.OnCreateTransport(TransportBase innerTransport, TlsTransportSettings tlsTransportSettings)</summary>
        </member>
        <member name="F:Microsoft.Azure.Amqp.Transport.Fakes.StubTlsTransportListener.OnCreateTransportTransportBaseTlsTransportSettings">
            <summary>Sets the stub of TlsTransportListener.OnCreateTransport(TransportBase innerTransport, TlsTransportSettings tlsTransportSettings)</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Transport.Fakes.StubTlsTransportListener.OnListen">
            <summary>Sets the stub of TlsTransportListener.OnListen()</summary>
        </member>
        <member name="F:Microsoft.Azure.Amqp.Transport.Fakes.StubTlsTransportListener.OnListen01">
            <summary>Sets the stub of TlsTransportListener.OnListen()</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Transport.Fakes.StubTlsTransportListener.OnOpen(System.TimeSpan)">
            <summary>Sets the stub of TransportListener.OnOpen(TimeSpan timeout)</summary>
        </member>
        <member name="F:Microsoft.Azure.Amqp.Transport.Fakes.StubTlsTransportListener.OnOpenTimeSpan">
            <summary>Sets the stub of TransportListener.OnOpen(TimeSpan timeout)</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Transport.Fakes.StubTlsTransportListener.OpenInternal">
            <summary>Sets the stub of TransportListener.OpenInternal()</summary>
        </member>
        <member name="F:Microsoft.Azure.Amqp.Transport.Fakes.StubTlsTransportListener.OpenInternal01">
            <summary>Sets the stub of TransportListener.OpenInternal()</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Transport.Fakes.StubTlsTransportListener.ToString">
            <summary>Sets the stub of AmqpObject.ToString()</summary>
        </member>
        <member name="F:Microsoft.Azure.Amqp.Transport.Fakes.StubTlsTransportListener.ToString01">
            <summary>Sets the stub of AmqpObject.ToString()</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Transport.Fakes.StubTlsTransportProvider">
            <summary>Stub type of Microsoft.Azure.Amqp.Transport.TlsTransportProvider</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Transport.Fakes.StubTlsTransportProvider.#ctor(Microsoft.Azure.Amqp.Transport.TlsTransportSettings)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.StubTlsTransportProvider.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Transport.Fakes.StubTlsTransportProvider.InitializeStub">
            <summary>Initializes a new instance of type StubTlsTransportProvider</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.StubTlsTransportProvider.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.StubTlsTransportProvider.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Transport.Fakes.StubTlsTransportProvider.OnCreateTransport(Microsoft.Azure.Amqp.Transport.TransportBase,System.Boolean)">
            <summary>Sets the stub of TlsTransportProvider.OnCreateTransport(TransportBase innerTransport, Boolean isInitiator)</summary>
        </member>
        <member name="F:Microsoft.Azure.Amqp.Transport.Fakes.StubTlsTransportProvider.OnCreateTransportTransportBaseBoolean">
            <summary>Sets the stub of TlsTransportProvider.OnCreateTransport(TransportBase innerTransport, Boolean isInitiator)</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Transport.Fakes.StubTlsTransportProvider.ToString">
            <summary>Sets the stub of TlsTransportProvider.ToString()</summary>
        </member>
        <member name="F:Microsoft.Azure.Amqp.Transport.Fakes.StubTlsTransportProvider.ToString01">
            <summary>Sets the stub of TlsTransportProvider.ToString()</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Transport.Fakes.StubTlsTransportSettings">
            <summary>Stub type of Microsoft.Azure.Amqp.Transport.TlsTransportSettings</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Transport.Fakes.StubTlsTransportSettings.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Transport.Fakes.StubTlsTransportSettings.#ctor(Microsoft.Azure.Amqp.Transport.TransportSettings)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Transport.Fakes.StubTlsTransportSettings.#ctor(Microsoft.Azure.Amqp.Transport.TransportSettings,System.Boolean)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.StubTlsTransportSettings.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Transport.Fakes.StubTlsTransportSettings.CreateInitiator">
            <summary>Sets the stub of TlsTransportSettings.CreateInitiator()</summary>
        </member>
        <member name="F:Microsoft.Azure.Amqp.Transport.Fakes.StubTlsTransportSettings.CreateInitiator01">
            <summary>Sets the stub of TlsTransportSettings.CreateInitiator()</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Transport.Fakes.StubTlsTransportSettings.CreateListener">
            <summary>Sets the stub of TlsTransportSettings.CreateListener()</summary>
        </member>
        <member name="F:Microsoft.Azure.Amqp.Transport.Fakes.StubTlsTransportSettings.CreateListener01">
            <summary>Sets the stub of TlsTransportSettings.CreateListener()</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Transport.Fakes.StubTlsTransportSettings.InitializeStub">
            <summary>Initializes a new instance of type StubTlsTransportSettings</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.StubTlsTransportSettings.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.StubTlsTransportSettings.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Transport.Fakes.StubTlsTransportSettings.ToString">
            <summary>Sets the stub of TlsTransportSettings.ToString()</summary>
        </member>
        <member name="F:Microsoft.Azure.Amqp.Transport.Fakes.StubTlsTransportSettings.ToString01">
            <summary>Sets the stub of TlsTransportSettings.ToString()</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Transport.Fakes.StubTransportBase">
            <summary>Stub type of Microsoft.Azure.Amqp.Transport.TransportBase</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Transport.Fakes.StubTransportBase.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Transport.Fakes.StubTransportBase.#ctor(System.String,Microsoft.Azure.Amqp.SequenceNumber)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Transport.Fakes.StubTransportBase.AbortInternal">
            <summary>Sets the stub of AmqpObject.AbortInternal()</summary>
        </member>
        <member name="F:Microsoft.Azure.Amqp.Transport.Fakes.StubTransportBase.AbortInternal01">
            <summary>Sets the stub of AmqpObject.AbortInternal()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.StubTransportBase.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Transport.Fakes.StubTransportBase.CloseInternal">
            <summary>Sets the stub of AmqpObject.CloseInternal()</summary>
        </member>
        <member name="F:Microsoft.Azure.Amqp.Transport.Fakes.StubTransportBase.CloseInternal01">
            <summary>Sets the stub of AmqpObject.CloseInternal()</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Transport.Fakes.StubTransportBase.InitializeStub">
            <summary>Initializes a new instance of type StubTransportBase</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.StubTransportBase.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.StubTransportBase.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.StubTransportBase.IsSecure">
            <summary>Sets the stub of TransportBase.get_IsSecure()</summary>
        </member>
        <member name="F:Microsoft.Azure.Amqp.Transport.Fakes.StubTransportBase.IsSecureGet">
            <summary>Sets the stub of TransportBase.get_IsSecure()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.StubTransportBase.LocalEndPoint">
            <summary>Sets the stub of TransportBase.get_LocalEndPoint()</summary>
        </member>
        <member name="F:Microsoft.Azure.Amqp.Transport.Fakes.StubTransportBase.LocalEndPointGet">
            <summary>Sets the stub of TransportBase.get_LocalEndPoint()</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Transport.Fakes.StubTransportBase.OnClose(System.TimeSpan)">
            <summary>Sets the stub of TransportBase.OnClose(TimeSpan timeout)</summary>
        </member>
        <member name="F:Microsoft.Azure.Amqp.Transport.Fakes.StubTransportBase.OnCloseTimeSpan">
            <summary>Sets the stub of TransportBase.OnClose(TimeSpan timeout)</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Transport.Fakes.StubTransportBase.OnOpen(System.TimeSpan)">
            <summary>Sets the stub of TransportBase.OnOpen(TimeSpan timeout)</summary>
        </member>
        <member name="F:Microsoft.Azure.Amqp.Transport.Fakes.StubTransportBase.OnOpenTimeSpan">
            <summary>Sets the stub of TransportBase.OnOpen(TimeSpan timeout)</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Transport.Fakes.StubTransportBase.OpenInternal">
            <summary>Sets the stub of TransportBase.OpenInternal()</summary>
        </member>
        <member name="F:Microsoft.Azure.Amqp.Transport.Fakes.StubTransportBase.OpenInternal01">
            <summary>Sets the stub of TransportBase.OpenInternal()</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Transport.Fakes.StubTransportBase.ReadAsync(Microsoft.Azure.Amqp.Transport.TransportAsyncCallbackArgs)">
            <summary>Sets the stub of TransportBase.ReadAsync(TransportAsyncCallbackArgs args)</summary>
        </member>
        <member name="F:Microsoft.Azure.Amqp.Transport.Fakes.StubTransportBase.ReadAsyncTransportAsyncCallbackArgs">
            <summary>Sets the stub of TransportBase.ReadAsync(TransportAsyncCallbackArgs args)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.StubTransportBase.RemoteEndPoint">
            <summary>Sets the stub of TransportBase.get_RemoteEndPoint()</summary>
        </member>
        <member name="F:Microsoft.Azure.Amqp.Transport.Fakes.StubTransportBase.RemoteEndPointGet">
            <summary>Sets the stub of TransportBase.get_RemoteEndPoint()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.StubTransportBase.RequiresCompleteFrames">
            <summary>Sets the stub of TransportBase.get_RequiresCompleteFrames()</summary>
        </member>
        <member name="F:Microsoft.Azure.Amqp.Transport.Fakes.StubTransportBase.RequiresCompleteFramesGet">
            <summary>Sets the stub of TransportBase.get_RequiresCompleteFrames()</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Transport.Fakes.StubTransportBase.SetMonitor(Microsoft.Azure.Amqp.ITransportMonitor)">
            <summary>Sets the stub of TransportBase.SetMonitor(ITransportMonitor usageMeter)</summary>
        </member>
        <member name="F:Microsoft.Azure.Amqp.Transport.Fakes.StubTransportBase.SetMonitorITransportMonitor">
            <summary>Sets the stub of TransportBase.SetMonitor(ITransportMonitor usageMeter)</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Transport.Fakes.StubTransportBase.ToString">
            <summary>Sets the stub of AmqpObject.ToString()</summary>
        </member>
        <member name="F:Microsoft.Azure.Amqp.Transport.Fakes.StubTransportBase.ToString01">
            <summary>Sets the stub of AmqpObject.ToString()</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Transport.Fakes.StubTransportBase.WriteAsync(Microsoft.Azure.Amqp.Transport.TransportAsyncCallbackArgs)">
            <summary>Sets the stub of TransportBase.WriteAsync(TransportAsyncCallbackArgs args)</summary>
        </member>
        <member name="F:Microsoft.Azure.Amqp.Transport.Fakes.StubTransportBase.WriteAsyncTransportAsyncCallbackArgs">
            <summary>Sets the stub of TransportBase.WriteAsync(TransportAsyncCallbackArgs args)</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Transport.Fakes.StubTransportInitiator">
            <summary>Stub type of Microsoft.Azure.Amqp.Transport.TransportInitiator</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Transport.Fakes.StubTransportInitiator.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.StubTransportInitiator.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Transport.Fakes.StubTransportInitiator.ConnectAsync(System.TimeSpan,Microsoft.Azure.Amqp.Transport.TransportAsyncCallbackArgs)">
            <summary>Sets the stub of TransportInitiator.ConnectAsync(TimeSpan timeout, TransportAsyncCallbackArgs callbackArgs)</summary>
        </member>
        <member name="F:Microsoft.Azure.Amqp.Transport.Fakes.StubTransportInitiator.ConnectAsyncTimeSpanTransportAsyncCallbackArgs">
            <summary>Sets the stub of TransportInitiator.ConnectAsync(TimeSpan timeout, TransportAsyncCallbackArgs callbackArgs)</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Transport.Fakes.StubTransportInitiator.InitializeStub">
            <summary>Initializes a new instance of type StubTransportInitiator</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.StubTransportInitiator.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.StubTransportInitiator.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Transport.Fakes.StubTransportListener">
            <summary>Stub type of Microsoft.Azure.Amqp.Transport.TransportListener</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Transport.Fakes.StubTransportListener.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Transport.Fakes.StubTransportListener.AbortInternal">
            <summary>Sets the stub of TransportListener.AbortInternal()</summary>
        </member>
        <member name="F:Microsoft.Azure.Amqp.Transport.Fakes.StubTransportListener.AbortInternal01">
            <summary>Sets the stub of TransportListener.AbortInternal()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.StubTransportListener.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Transport.Fakes.StubTransportListener.CloseInternal">
            <summary>Sets the stub of TransportListener.CloseInternal()</summary>
        </member>
        <member name="F:Microsoft.Azure.Amqp.Transport.Fakes.StubTransportListener.CloseInternal01">
            <summary>Sets the stub of TransportListener.CloseInternal()</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Transport.Fakes.StubTransportListener.InitializeStub">
            <summary>Initializes a new instance of type StubTransportListener</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.StubTransportListener.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.StubTransportListener.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Transport.Fakes.StubTransportListener.OnClose(System.TimeSpan)">
            <summary>Sets the stub of TransportListener.OnClose(TimeSpan timeout)</summary>
        </member>
        <member name="F:Microsoft.Azure.Amqp.Transport.Fakes.StubTransportListener.OnCloseTimeSpan">
            <summary>Sets the stub of TransportListener.OnClose(TimeSpan timeout)</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Transport.Fakes.StubTransportListener.OnListen">
            <summary>Sets the stub of TransportListener.OnListen()</summary>
        </member>
        <member name="F:Microsoft.Azure.Amqp.Transport.Fakes.StubTransportListener.OnListen01">
            <summary>Sets the stub of TransportListener.OnListen()</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Transport.Fakes.StubTransportListener.OnOpen(System.TimeSpan)">
            <summary>Sets the stub of TransportListener.OnOpen(TimeSpan timeout)</summary>
        </member>
        <member name="F:Microsoft.Azure.Amqp.Transport.Fakes.StubTransportListener.OnOpenTimeSpan">
            <summary>Sets the stub of TransportListener.OnOpen(TimeSpan timeout)</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Transport.Fakes.StubTransportListener.OpenInternal">
            <summary>Sets the stub of TransportListener.OpenInternal()</summary>
        </member>
        <member name="F:Microsoft.Azure.Amqp.Transport.Fakes.StubTransportListener.OpenInternal01">
            <summary>Sets the stub of TransportListener.OpenInternal()</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Transport.Fakes.StubTransportListener.ToString">
            <summary>Sets the stub of AmqpObject.ToString()</summary>
        </member>
        <member name="F:Microsoft.Azure.Amqp.Transport.Fakes.StubTransportListener.ToString01">
            <summary>Sets the stub of AmqpObject.ToString()</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Transport.Fakes.StubTransportProvider">
            <summary>Stub type of Microsoft.Azure.Amqp.Transport.TransportProvider</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Transport.Fakes.StubTransportProvider.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.StubTransportProvider.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Transport.Fakes.StubTransportProvider.InitializeStub">
            <summary>Initializes a new instance of type StubTransportProvider</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.StubTransportProvider.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.StubTransportProvider.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Transport.Fakes.StubTransportProvider.OnCreateTransport(Microsoft.Azure.Amqp.Transport.TransportBase,System.Boolean)">
            <summary>Sets the stub of TransportProvider.OnCreateTransport(TransportBase innerTransport, Boolean isInitiator)</summary>
        </member>
        <member name="F:Microsoft.Azure.Amqp.Transport.Fakes.StubTransportProvider.OnCreateTransportTransportBaseBoolean">
            <summary>Sets the stub of TransportProvider.OnCreateTransport(TransportBase innerTransport, Boolean isInitiator)</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.Transport.Fakes.StubTransportSettings">
            <summary>Stub type of Microsoft.Azure.Amqp.Transport.TransportSettings</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Transport.Fakes.StubTransportSettings.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.StubTransportSettings.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Transport.Fakes.StubTransportSettings.CreateInitiator">
            <summary>Sets the stub of TransportSettings.CreateInitiator()</summary>
        </member>
        <member name="F:Microsoft.Azure.Amqp.Transport.Fakes.StubTransportSettings.CreateInitiator01">
            <summary>Sets the stub of TransportSettings.CreateInitiator()</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Transport.Fakes.StubTransportSettings.CreateListener">
            <summary>Sets the stub of TransportSettings.CreateListener()</summary>
        </member>
        <member name="F:Microsoft.Azure.Amqp.Transport.Fakes.StubTransportSettings.CreateListener01">
            <summary>Sets the stub of TransportSettings.CreateListener()</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.Transport.Fakes.StubTransportSettings.InitializeStub">
            <summary>Initializes a new instance of type StubTransportSettings</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.StubTransportSettings.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.Transport.Fakes.StubTransportSettings.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.X509.Fakes.ShimX509CertificateIdentity">
            <summary>Shim type of Microsoft.Azure.Amqp.X509.X509CertificateIdentity</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.X509.Fakes.ShimX509CertificateIdentity.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.X509.Fakes.ShimX509CertificateIdentity.#ctor(Microsoft.Azure.Amqp.X509.X509CertificateIdentity)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.X509.Fakes.ShimX509CertificateIdentity.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.X509.Fakes.ShimX509CertificateIdentity.AllInstances.AuthenticationTypeGet">
            <summary>Sets the shim of X509CertificateIdentity.get_AuthenticationType()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.X509.Fakes.ShimX509CertificateIdentity.AllInstances.IsAuthenticatedGet">
            <summary>Sets the shim of X509CertificateIdentity.get_IsAuthenticated()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.X509.Fakes.ShimX509CertificateIdentity.AllInstances.NameGet">
            <summary>Sets the shim of X509CertificateIdentity.get_Name()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.X509.Fakes.ShimX509CertificateIdentity.AuthenticationTypeGet">
            <summary>Sets the shim of X509CertificateIdentity.get_AuthenticationType()</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.X509.Fakes.ShimX509CertificateIdentity.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.X509.Fakes.ShimX509CertificateIdentity.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.X509.Fakes.ShimX509CertificateIdentity.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.X509.Fakes.ShimX509CertificateIdentity.Bind(System.Security.Principal.IIdentity)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.X509.Fakes.ShimX509CertificateIdentity.IsAuthenticatedGet">
            <summary>Sets the shim of X509CertificateIdentity.get_IsAuthenticated()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.X509.Fakes.ShimX509CertificateIdentity.NameGet">
            <summary>Sets the shim of X509CertificateIdentity.get_Name()</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.X509.Fakes.ShimX509Principal">
            <summary>Shim type of Microsoft.Azure.Amqp.X509.X509Principal</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.X509.Fakes.ShimX509Principal.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.X509.Fakes.ShimX509Principal.#ctor(Microsoft.Azure.Amqp.X509.X509Principal)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.X509.Fakes.ShimX509Principal.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.X509.Fakes.ShimX509Principal.AllInstances.CertificateIdentityGet">
            <summary>Sets the shim of X509Principal.get_CertificateIdentity()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.X509.Fakes.ShimX509Principal.AllInstances.IdentityGet">
            <summary>Sets the shim of X509Principal.get_Identity()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.X509.Fakes.ShimX509Principal.AllInstances.IsInRoleString">
            <summary>Sets the shim of X509Principal.IsInRole(String role)</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.X509.Fakes.ShimX509Principal.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.X509.Fakes.ShimX509Principal.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.X509.Fakes.ShimX509Principal.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.X509.Fakes.ShimX509Principal.Bind(System.Security.Principal.IPrincipal)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.X509.Fakes.ShimX509Principal.CertificateIdentityGet">
            <summary>Sets the shim of X509Principal.get_CertificateIdentity()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.X509.Fakes.ShimX509Principal.ConstructorX509CertificateIdentity">
            <summary>Sets the shim of X509Principal.X509Principal(X509CertificateIdentity identity)</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.X509.Fakes.ShimX509Principal.IdentityGet">
            <summary>Sets the shim of X509Principal.get_Identity()</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.X509.Fakes.ShimX509Principal.IsInRoleString">
            <summary>Sets the shim of X509Principal.IsInRole(String role)</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.X509.Fakes.StubX509CertificateIdentity">
            <summary>Stub type of Microsoft.Azure.Amqp.X509.X509CertificateIdentity</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.X509.Fakes.StubX509CertificateIdentity.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2,System.Boolean)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.X509.Fakes.StubX509CertificateIdentity.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.X509.Fakes.StubX509CertificateIdentity.InitializeStub">
            <summary>Initializes a new instance of type StubX509CertificateIdentity</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.X509.Fakes.StubX509CertificateIdentity.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.X509.Fakes.StubX509CertificateIdentity.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Microsoft.Azure.Amqp.X509.Fakes.StubX509Principal">
            <summary>Stub type of Microsoft.Azure.Amqp.X509.X509Principal</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.X509.Fakes.StubX509Principal.#ctor(Microsoft.Azure.Amqp.X509.X509CertificateIdentity)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.X509.Fakes.StubX509Principal.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Microsoft.Azure.Amqp.X509.Fakes.StubX509Principal.InitializeStub">
            <summary>Initializes a new instance of type StubX509Principal</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.X509.Fakes.StubX509Principal.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.Azure.Amqp.X509.Fakes.StubX509Principal.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Microsoft.QualityTools.Testing.Fakes.Delegates.MicrosoftAzureAmqpDelegates">
            <summary>Contains custom delegates used for the stubs and shims of Microsoft.Azure.Amqp</summary>
        </member>
        <member name="T:System.Collections.Generic.Fakes.ShimKeyedByTypeCollection`1">
            <summary>Shim type of System.Collections.Generic.KeyedByTypeCollection`1</summary>
        </member>
        <member name="M:System.Collections.Generic.Fakes.ShimKeyedByTypeCollection`1.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Collections.Generic.Fakes.ShimKeyedByTypeCollection`1.#ctor(System.Collections.Generic.KeyedByTypeCollection{`0})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:System.Collections.Generic.Fakes.ShimKeyedByTypeCollection`1.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:System.Collections.Generic.Fakes.ShimKeyedByTypeCollection`1.AllInstances.FindAllOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.KeyedByTypeCollection{`0},System.Collections.ObjectModel.Collection{``0}})">
            <summary>Sets the shim of KeyedByTypeCollection`1.FindAll()</summary>
        </member>
        <member name="M:System.Collections.Generic.Fakes.ShimKeyedByTypeCollection`1.AllInstances.FindAllOf1Boolean``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.KeyedByTypeCollection{`0},System.Boolean,System.Collections.ObjectModel.Collection{``0}})">
            <summary>Sets the shim of KeyedByTypeCollection`1.FindAll(Boolean remove)</summary>
        </member>
        <member name="M:System.Collections.Generic.Fakes.ShimKeyedByTypeCollection`1.AllInstances.FindOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.KeyedByTypeCollection{`0},``0})">
            <summary>Sets the shim of KeyedByTypeCollection`1.Find()</summary>
        </member>
        <member name="M:System.Collections.Generic.Fakes.ShimKeyedByTypeCollection`1.AllInstances.FindOf1Boolean``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.KeyedByTypeCollection{`0},System.Boolean,``0})">
            <summary>Sets the shim of KeyedByTypeCollection`1.Find(Boolean remove)</summary>
        </member>
        <member name="P:System.Collections.Generic.Fakes.ShimKeyedByTypeCollection`1.AllInstances.GetKeyForItemT0">
            <summary>Sets the shim of KeyedByTypeCollection`1.GetKeyForItem(!0 item)</summary>
        </member>
        <member name="P:System.Collections.Generic.Fakes.ShimKeyedByTypeCollection`1.AllInstances.InsertItemInt32T0">
            <summary>Sets the shim of KeyedByTypeCollection`1.InsertItem(Int32 index, !0 item)</summary>
        </member>
        <member name="M:System.Collections.Generic.Fakes.ShimKeyedByTypeCollection`1.AllInstances.RemoveAllOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.KeyedByTypeCollection{`0},System.Collections.ObjectModel.Collection{``0}})">
            <summary>Sets the shim of KeyedByTypeCollection`1.RemoveAll()</summary>
        </member>
        <member name="M:System.Collections.Generic.Fakes.ShimKeyedByTypeCollection`1.AllInstances.RemoveOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.KeyedByTypeCollection{`0},``0})">
            <summary>Sets the shim of KeyedByTypeCollection`1.Remove()</summary>
        </member>
        <member name="P:System.Collections.Generic.Fakes.ShimKeyedByTypeCollection`1.AllInstances.SetItemInt32T0">
            <summary>Sets the shim of KeyedByTypeCollection`1.SetItem(Int32 index, !0 item)</summary>
        </member>
        <member name="M:System.Collections.Generic.Fakes.ShimKeyedByTypeCollection`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Collections.Generic.Fakes.ShimKeyedByTypeCollection`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Collections.Generic.Fakes.ShimKeyedByTypeCollection`1.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Collections.Generic.Fakes.ShimKeyedByTypeCollection`1.Bind(System.Collections.ICollection)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Collections.Generic.Fakes.ShimKeyedByTypeCollection`1.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Collections.Generic.Fakes.ShimKeyedByTypeCollection`1.Bind(System.Collections.IList)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Collections.Generic.Fakes.ShimKeyedByTypeCollection`1.Bind(System.Collections.Generic.ICollection{`0})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Collections.Generic.Fakes.ShimKeyedByTypeCollection`1.Bind(System.Collections.Generic.IEnumerable{`0})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Collections.Generic.Fakes.ShimKeyedByTypeCollection`1.Bind(System.Collections.Generic.IList{`0})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Collections.Generic.Fakes.ShimKeyedByTypeCollection`1.Bind(System.Collections.Generic.IReadOnlyCollection{`0})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Collections.Generic.Fakes.ShimKeyedByTypeCollection`1.Bind(System.Collections.Generic.IReadOnlyList{`0})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Collections.Generic.Fakes.ShimKeyedByTypeCollection`1.Constructor">
            <summary>Sets the shim of KeyedByTypeCollection`1.KeyedByTypeCollection`1()</summary>
        </member>
        <member name="P:System.Collections.Generic.Fakes.ShimKeyedByTypeCollection`1.ConstructorIEnumerableOfT0">
            <summary>Sets the shim of KeyedByTypeCollection`1.KeyedByTypeCollection`1(IEnumerable`1&lt;!0&gt; items)</summary>
        </member>
        <member name="M:System.Collections.Generic.Fakes.ShimKeyedByTypeCollection`1.FindAllOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.ObjectModel.Collection{``0}})">
            <summary>Sets the shim of KeyedByTypeCollection`1.FindAll()</summary>
        </member>
        <member name="M:System.Collections.Generic.Fakes.ShimKeyedByTypeCollection`1.FindAllOf1Boolean``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Boolean,System.Collections.ObjectModel.Collection{``0}})">
            <summary>Sets the shim of KeyedByTypeCollection`1.FindAll(Boolean remove)</summary>
        </member>
        <member name="M:System.Collections.Generic.Fakes.ShimKeyedByTypeCollection`1.FindOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0})">
            <summary>Sets the shim of KeyedByTypeCollection`1.Find()</summary>
        </member>
        <member name="M:System.Collections.Generic.Fakes.ShimKeyedByTypeCollection`1.FindOf1Boolean``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Boolean,``0})">
            <summary>Sets the shim of KeyedByTypeCollection`1.Find(Boolean remove)</summary>
        </member>
        <member name="P:System.Collections.Generic.Fakes.ShimKeyedByTypeCollection`1.GetKeyForItemT0">
            <summary>Sets the shim of KeyedByTypeCollection`1.GetKeyForItem(!0 item)</summary>
        </member>
        <member name="P:System.Collections.Generic.Fakes.ShimKeyedByTypeCollection`1.InsertItemInt32T0">
            <summary>Sets the shim of KeyedByTypeCollection`1.InsertItem(Int32 index, !0 item)</summary>
        </member>
        <member name="M:System.Collections.Generic.Fakes.ShimKeyedByTypeCollection`1.RemoveAllOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.ObjectModel.Collection{``0}})">
            <summary>Sets the shim of KeyedByTypeCollection`1.RemoveAll()</summary>
        </member>
        <member name="M:System.Collections.Generic.Fakes.ShimKeyedByTypeCollection`1.RemoveOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0})">
            <summary>Sets the shim of KeyedByTypeCollection`1.Remove()</summary>
        </member>
        <member name="P:System.Collections.Generic.Fakes.ShimKeyedByTypeCollection`1.SetItemInt32T0">
            <summary>Sets the shim of KeyedByTypeCollection`1.SetItem(Int32 index, !0 item)</summary>
        </member>
        <member name="T:System.Collections.Generic.Fakes.StubKeyedByTypeCollection`1">
            <summary>Stub type of System.Collections.Generic.KeyedByTypeCollection`1</summary>
        </member>
        <member name="M:System.Collections.Generic.Fakes.StubKeyedByTypeCollection`1.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Collections.Generic.Fakes.StubKeyedByTypeCollection`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:System.Collections.Generic.Fakes.StubKeyedByTypeCollection`1.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:System.Collections.Generic.Fakes.StubKeyedByTypeCollection`1.ClearItems">
            <summary>Sets the stub of KeyedCollection`2.ClearItems()</summary>
        </member>
        <member name="F:System.Collections.Generic.Fakes.StubKeyedByTypeCollection`1.ClearItems01">
            <summary>Sets the stub of KeyedCollection`2.ClearItems()</summary>
        </member>
        <member name="M:System.Collections.Generic.Fakes.StubKeyedByTypeCollection`1.GetKeyForItem(`0)">
            <summary>Sets the stub of KeyedByTypeCollection`1.GetKeyForItem(!0 item)</summary>
        </member>
        <member name="F:System.Collections.Generic.Fakes.StubKeyedByTypeCollection`1.GetKeyForItemT0">
            <summary>Sets the stub of KeyedByTypeCollection`1.GetKeyForItem(!0 item)</summary>
        </member>
        <member name="M:System.Collections.Generic.Fakes.StubKeyedByTypeCollection`1.InitializeStub">
            <summary>Initializes a new instance of type StubKeyedByTypeCollection</summary>
        </member>
        <member name="M:System.Collections.Generic.Fakes.StubKeyedByTypeCollection`1.InsertItem(System.Int32,`0)">
            <summary>Sets the stub of KeyedByTypeCollection`1.InsertItem(Int32 index, !0 item)</summary>
        </member>
        <member name="F:System.Collections.Generic.Fakes.StubKeyedByTypeCollection`1.InsertItemInt32T0">
            <summary>Sets the stub of KeyedByTypeCollection`1.InsertItem(Int32 index, !0 item)</summary>
        </member>
        <member name="P:System.Collections.Generic.Fakes.StubKeyedByTypeCollection`1.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Collections.Generic.Fakes.StubKeyedByTypeCollection`1.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:System.Collections.Generic.Fakes.StubKeyedByTypeCollection`1.RemoveItem(System.Int32)">
            <summary>Sets the stub of KeyedCollection`2.RemoveItem(Int32 index)</summary>
        </member>
        <member name="F:System.Collections.Generic.Fakes.StubKeyedByTypeCollection`1.RemoveItemInt32">
            <summary>Sets the stub of KeyedCollection`2.RemoveItem(Int32 index)</summary>
        </member>
        <member name="M:System.Collections.Generic.Fakes.StubKeyedByTypeCollection`1.SetItem(System.Int32,`0)">
            <summary>Sets the stub of KeyedByTypeCollection`1.SetItem(Int32 index, !0 item)</summary>
        </member>
        <member name="F:System.Collections.Generic.Fakes.StubKeyedByTypeCollection`1.SetItemInt32T0">
            <summary>Sets the stub of KeyedByTypeCollection`1.SetItem(Int32 index, !0 item)</summary>
        </member>
    </members>
</doc>
